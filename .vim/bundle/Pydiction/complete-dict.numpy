
--- import matplotlib ---
matplotlib.RcParams(
matplotlib.Verbose(
matplotlib.__builtins__
matplotlib.__date__
matplotlib.__doc__
matplotlib.__file__
matplotlib.__name__
matplotlib.__package__
matplotlib.__path__
matplotlib.__revision__
matplotlib.__version__
matplotlib._deprecated_ignore_map
matplotlib._deprecated_map
matplotlib._get_configdir(
matplotlib._get_data_path(
matplotlib._get_data_path_cached(
matplotlib._get_home(
matplotlib._havedate
matplotlib._is_writable_dir(
matplotlib._python24
matplotlib._use_error_msg
matplotlib.cbook
matplotlib.checkdep_dvipng(
matplotlib.checkdep_ghostscript(
matplotlib.checkdep_inkscape(
matplotlib.checkdep_pdftops(
matplotlib.checkdep_ps_distiller(
matplotlib.checkdep_tex(
matplotlib.checkdep_usetex(
matplotlib.checkdep_xmllint(
matplotlib.colors
matplotlib.compare_versions(
matplotlib.converter(
matplotlib.default
matplotlib.defaultParams
matplotlib.default_test_modules
matplotlib.distutils
matplotlib.fontconfig_pattern
matplotlib.generators
matplotlib.get_backend(
matplotlib.get_configdir(
matplotlib.get_data_path(
matplotlib.get_example_data(
matplotlib.get_home(
matplotlib.get_py2exe_datafiles(
matplotlib.interactive(
matplotlib.is_interactive(
matplotlib.is_string_like(
matplotlib.key
matplotlib.major
matplotlib.matplotlib_fname(
matplotlib.minor1
matplotlib.minor2
matplotlib.n
matplotlib.nmajor
matplotlib.nminor
matplotlib.numpy
matplotlib.os
matplotlib.pyparsing
matplotlib.rc(
matplotlib.rcParams
matplotlib.rcParamsDefault
matplotlib.rcParamsOrig
matplotlib.rc_file_defaults(
matplotlib.rc_params(
matplotlib.rcdefaults(
matplotlib.rcsetup
matplotlib.re
matplotlib.s
matplotlib.shutil
matplotlib.subprocess
matplotlib.sys
matplotlib.tempfile
matplotlib.test(
matplotlib.tk_window_focus(
matplotlib.tmp
matplotlib.use(
matplotlib.validate_backend(
matplotlib.validate_cairo_format(
matplotlib.validate_toolbar(
matplotlib.verbose
matplotlib.warnings

--- from matplotlib import * ---
RcParams(
Verbose(
__builtins__
__date__
__doc__
__file__
__name__
__package__
__path__
__revision__
__version__
_deprecated_ignore_map
_deprecated_map
_get_configdir(
_get_data_path(
_get_data_path_cached(
_get_home(
_havedate
_is_writable_dir(
_python24
_use_error_msg
cbook
checkdep_dvipng(
checkdep_ghostscript(
checkdep_inkscape(
checkdep_pdftops(
checkdep_ps_distiller(
checkdep_tex(
checkdep_usetex(
checkdep_xmllint(
colors
compare_versions(
converter(
default
defaultParams
default_test_modules
distutils
fontconfig_pattern
generators
get_backend(
get_configdir(
get_data_path(
get_example_data(
get_home(
get_py2exe_datafiles(
interactive(
is_interactive(
is_string_like(
key
major
matplotlib_fname(
minor1
minor2
n
nmajor
nminor
numpy
os
pyparsing
rc(
rcParams
rcParamsDefault
rcParamsOrig
rc_file_defaults(
rc_params(
rcdefaults(
rcsetup
re
s
shutil
subprocess
sys
tempfile
test(
tk_window_focus(
tmp
use(
validate_backend(
validate_cairo_format(
validate_toolbar(
verbose
warnings

--- import matplotlib.cbook ---
matplotlib.cbook.Bunch(
matplotlib.cbook.CallbackRegistry(
matplotlib.cbook.GetRealpathAndStat(
matplotlib.cbook.Grouper(
matplotlib.cbook.Idle(
matplotlib.cbook.MemoryMonitor(
matplotlib.cbook.Null(
matplotlib.cbook.RingBuffer(
matplotlib.cbook.Scheduler(
matplotlib.cbook.Sorter(
matplotlib.cbook.Stack(
matplotlib.cbook.StringIO
matplotlib.cbook.Timeout(
matplotlib.cbook.ViewVCCachedServer(
matplotlib.cbook.Xlator(
matplotlib.cbook.__builtins__
matplotlib.cbook.__doc__
matplotlib.cbook.__file__
matplotlib.cbook.__name__
matplotlib.cbook.__package__
matplotlib.cbook._dedent_regex
matplotlib.cbook._find_dedent_regex
matplotlib.cbook._linestyles
matplotlib.cbook._safezip_msg
matplotlib.cbook.align_iterators(
matplotlib.cbook.allequal(
matplotlib.cbook.allpairs(
matplotlib.cbook.alltrue(
matplotlib.cbook.cPickle
matplotlib.cbook.converter(
matplotlib.cbook.datetime
matplotlib.cbook.dedent(
matplotlib.cbook.delete_masked_points(
matplotlib.cbook.dict_delall(
matplotlib.cbook.distances_along_curve(
matplotlib.cbook.errno
matplotlib.cbook.exception_to_str(
matplotlib.cbook.finddir(
matplotlib.cbook.flatten(
matplotlib.cbook.generators
matplotlib.cbook.get_realpath_and_stat(
matplotlib.cbook.get_recursive_filelist(
matplotlib.cbook.get_sample_data(
matplotlib.cbook.get_split_ind(
matplotlib.cbook.is_closed_polygon(
matplotlib.cbook.is_math_text(
matplotlib.cbook.is_numlike(
matplotlib.cbook.is_scalar(
matplotlib.cbook.is_scalar_or_string(
matplotlib.cbook.is_sequence_of_strings(
matplotlib.cbook.is_string_like(
matplotlib.cbook.is_writable_file_like(
matplotlib.cbook.issubclass_safe(
matplotlib.cbook.isvector(
matplotlib.cbook.iterable(
matplotlib.cbook.less_simple_linear_interpolation(
matplotlib.cbook.listFiles(
matplotlib.cbook.locale
matplotlib.cbook.ls
matplotlib.cbook.ls_mapper
matplotlib.cbook.ma
matplotlib.cbook.major
matplotlib.cbook.matplotlib
matplotlib.cbook.maxdict(
matplotlib.cbook.minor1
matplotlib.cbook.minor2
matplotlib.cbook.mkdirs(
matplotlib.cbook.new
matplotlib.cbook.np
matplotlib.cbook.onetrue(
matplotlib.cbook.os
matplotlib.cbook.path_length(
matplotlib.cbook.pieces(
matplotlib.cbook.popall(
matplotlib.cbook.preferredencoding
matplotlib.cbook.print_cycles(
matplotlib.cbook.quad2cubic(
matplotlib.cbook.random
matplotlib.cbook.re
matplotlib.cbook.recursive_remove(
matplotlib.cbook.ref(
matplotlib.cbook.report_memory(
matplotlib.cbook.reverse_dict(
matplotlib.cbook.s
matplotlib.cbook.safe_masked_invalid(
matplotlib.cbook.safezip(
matplotlib.cbook.silent_list(
matplotlib.cbook.simple_linear_interpolation(
matplotlib.cbook.soundex(
matplotlib.cbook.strip_math(
matplotlib.cbook.sys
matplotlib.cbook.threading
matplotlib.cbook.time
matplotlib.cbook.tmp
matplotlib.cbook.to_filehandle(
matplotlib.cbook.todate(
matplotlib.cbook.todatetime(
matplotlib.cbook.tofloat(
matplotlib.cbook.toint(
matplotlib.cbook.tostr(
matplotlib.cbook.traceback
matplotlib.cbook.types
matplotlib.cbook.unicode_safe(
matplotlib.cbook.unique(
matplotlib.cbook.unmasked_index_ranges(
matplotlib.cbook.urllib2
matplotlib.cbook.vector_lengths(
matplotlib.cbook.warnings
matplotlib.cbook.wrap(

--- from matplotlib import cbook ---
cbook.Bunch(
cbook.CallbackRegistry(
cbook.GetRealpathAndStat(
cbook.Grouper(
cbook.Idle(
cbook.MemoryMonitor(
cbook.Null(
cbook.RingBuffer(
cbook.Scheduler(
cbook.Sorter(
cbook.Stack(
cbook.StringIO
cbook.Timeout(
cbook.ViewVCCachedServer(
cbook.Xlator(
cbook.__builtins__
cbook.__doc__
cbook.__file__
cbook.__name__
cbook.__package__
cbook._dedent_regex
cbook._find_dedent_regex
cbook._linestyles
cbook._safezip_msg
cbook.align_iterators(
cbook.allequal(
cbook.allpairs(
cbook.alltrue(
cbook.cPickle
cbook.converter(
cbook.datetime
cbook.dedent(
cbook.delete_masked_points(
cbook.dict_delall(
cbook.distances_along_curve(
cbook.errno
cbook.exception_to_str(
cbook.finddir(
cbook.flatten(
cbook.generators
cbook.get_realpath_and_stat(
cbook.get_recursive_filelist(
cbook.get_sample_data(
cbook.get_split_ind(
cbook.is_closed_polygon(
cbook.is_math_text(
cbook.is_numlike(
cbook.is_scalar(
cbook.is_scalar_or_string(
cbook.is_sequence_of_strings(
cbook.is_string_like(
cbook.is_writable_file_like(
cbook.issubclass_safe(
cbook.isvector(
cbook.iterable(
cbook.less_simple_linear_interpolation(
cbook.listFiles(
cbook.locale
cbook.ls
cbook.ls_mapper
cbook.ma
cbook.major
cbook.matplotlib
cbook.maxdict(
cbook.minor1
cbook.minor2
cbook.mkdirs(
cbook.new
cbook.np
cbook.onetrue(
cbook.os
cbook.path_length(
cbook.pieces(
cbook.popall(
cbook.preferredencoding
cbook.print_cycles(
cbook.quad2cubic(
cbook.random
cbook.re
cbook.recursive_remove(
cbook.ref(
cbook.report_memory(
cbook.reverse_dict(
cbook.s
cbook.safe_masked_invalid(
cbook.safezip(
cbook.silent_list(
cbook.simple_linear_interpolation(
cbook.soundex(
cbook.strip_math(
cbook.sys
cbook.threading
cbook.time
cbook.tmp
cbook.to_filehandle(
cbook.todate(
cbook.todatetime(
cbook.tofloat(
cbook.toint(
cbook.tostr(
cbook.traceback
cbook.types
cbook.unicode_safe(
cbook.unique(
cbook.unmasked_index_ranges(
cbook.urllib2
cbook.vector_lengths(
cbook.warnings
cbook.wrap(

--- from matplotlib.cbook import * ---
Bunch(
CallbackRegistry(
GetRealpathAndStat(
Grouper(
Idle(
MemoryMonitor(
Null(
RingBuffer(
Scheduler(
Sorter(
Stack(
StringIO
Timeout(
ViewVCCachedServer(
Xlator(
_dedent_regex
_find_dedent_regex
_linestyles
_safezip_msg
align_iterators(
allequal(
allpairs(
alltrue(
cPickle
datetime
dedent(
delete_masked_points(
dict_delall(
distances_along_curve(
errno
exception_to_str(
finddir(
flatten(
get_realpath_and_stat(
get_recursive_filelist(
get_sample_data(
get_split_ind(
is_closed_polygon(
is_math_text(
is_numlike(
is_scalar(
is_scalar_or_string(
is_sequence_of_strings(
is_writable_file_like(
issubclass_safe(
isvector(
iterable(
less_simple_linear_interpolation(
listFiles(
locale
ls
ls_mapper
ma
matplotlib
maxdict(
mkdirs(
new
np
onetrue(
path_length(
pieces(
popall(
preferredencoding
print_cycles(
quad2cubic(
random
recursive_remove(
ref(
report_memory(
reverse_dict(
safe_masked_invalid(
safezip(
silent_list(
simple_linear_interpolation(
soundex(
strip_math(
threading
time
to_filehandle(
todate(
todatetime(
tofloat(
toint(
tostr(
traceback
types
unicode_safe(
unique(
unmasked_index_ranges(
urllib2
vector_lengths(
wrap(

--- import matplotlib.colors ---
matplotlib.colors.BoundaryNorm(
matplotlib.colors.ColorConverter(
matplotlib.colors.Colormap(
matplotlib.colors.LightSource(
matplotlib.colors.LinearSegmentedColormap(
matplotlib.colors.ListedColormap(
matplotlib.colors.LogNorm(
matplotlib.colors.NP_CLIP_OUT
matplotlib.colors.NP_MAJOR
matplotlib.colors.NP_MINOR
matplotlib.colors.NoNorm(
matplotlib.colors.Normalize(
matplotlib.colors.__builtins__
matplotlib.colors.__doc__
matplotlib.colors.__file__
matplotlib.colors.__name__
matplotlib.colors.__package__
matplotlib.colors.cbook
matplotlib.colors.cnames
matplotlib.colors.colorConverter
matplotlib.colors.hex2color(
matplotlib.colors.hexColorPattern
matplotlib.colors.hsv_to_rgb(
matplotlib.colors.is_color_like(
matplotlib.colors.k
matplotlib.colors.ma
matplotlib.colors.makeMappingArray(
matplotlib.colors.no_norm(
matplotlib.colors.normalize(
matplotlib.colors.np
matplotlib.colors.parts
matplotlib.colors.re
matplotlib.colors.rgb2hex(
matplotlib.colors.rgb_to_hsv(
matplotlib.colors.v

--- from matplotlib import colors ---
colors.BoundaryNorm(
colors.ColorConverter(
colors.Colormap(
colors.LightSource(
colors.LinearSegmentedColormap(
colors.ListedColormap(
colors.LogNorm(
colors.NP_CLIP_OUT
colors.NP_MAJOR
colors.NP_MINOR
colors.NoNorm(
colors.Normalize(
colors.__builtins__
colors.__doc__
colors.__file__
colors.__name__
colors.__package__
colors.cbook
colors.cnames
colors.colorConverter
colors.hex2color(
colors.hexColorPattern
colors.hsv_to_rgb(
colors.is_color_like(
colors.k
colors.ma
colors.makeMappingArray(
colors.no_norm(
colors.normalize(
colors.np
colors.parts
colors.re
colors.rgb2hex(
colors.rgb_to_hsv(
colors.v

--- from matplotlib.colors import * ---
BoundaryNorm(
ColorConverter(
Colormap(
LightSource(
LinearSegmentedColormap(
ListedColormap(
LogNorm(
NP_CLIP_OUT
NP_MAJOR
NP_MINOR
NoNorm(
Normalize(
cnames
colorConverter
hex2color(
hexColorPattern
hsv_to_rgb(
is_color_like(
k
makeMappingArray(
no_norm(
normalize(
parts
rgb2hex(
rgb_to_hsv(
v

--- import matplotlib.fontconfig_pattern ---
matplotlib.fontconfig_pattern.FontconfigPatternParser(
matplotlib.fontconfig_pattern.Literal(
matplotlib.fontconfig_pattern.Optional(
matplotlib.fontconfig_pattern.ParseException(
matplotlib.fontconfig_pattern.Regex(
matplotlib.fontconfig_pattern.StringEnd(
matplotlib.fontconfig_pattern.Suppress(
matplotlib.fontconfig_pattern.ZeroOrMore(
matplotlib.fontconfig_pattern.__builtins__
matplotlib.fontconfig_pattern.__doc__
matplotlib.fontconfig_pattern.__file__
matplotlib.fontconfig_pattern.__name__
matplotlib.fontconfig_pattern.__package__
matplotlib.fontconfig_pattern.family_escape(
matplotlib.fontconfig_pattern.family_punc
matplotlib.fontconfig_pattern.family_unescape(
matplotlib.fontconfig_pattern.generate_fontconfig_pattern(
matplotlib.fontconfig_pattern.parse_fontconfig_pattern(
matplotlib.fontconfig_pattern.re
matplotlib.fontconfig_pattern.value_escape(
matplotlib.fontconfig_pattern.value_punc
matplotlib.fontconfig_pattern.value_unescape(

--- from matplotlib import fontconfig_pattern ---
fontconfig_pattern.FontconfigPatternParser(
fontconfig_pattern.Literal(
fontconfig_pattern.Optional(
fontconfig_pattern.ParseException(
fontconfig_pattern.Regex(
fontconfig_pattern.StringEnd(
fontconfig_pattern.Suppress(
fontconfig_pattern.ZeroOrMore(
fontconfig_pattern.__builtins__
fontconfig_pattern.__doc__
fontconfig_pattern.__file__
fontconfig_pattern.__name__
fontconfig_pattern.__package__
fontconfig_pattern.family_escape(
fontconfig_pattern.family_punc
fontconfig_pattern.family_unescape(
fontconfig_pattern.generate_fontconfig_pattern(
fontconfig_pattern.parse_fontconfig_pattern(
fontconfig_pattern.re
fontconfig_pattern.value_escape(
fontconfig_pattern.value_punc
fontconfig_pattern.value_unescape(

--- from matplotlib.fontconfig_pattern import * ---
FontconfigPatternParser(
Literal(
Optional(
ParseException(
Regex(
StringEnd(
Suppress(
ZeroOrMore(
family_escape(
family_punc
family_unescape(
generate_fontconfig_pattern(
parse_fontconfig_pattern(
value_escape(
value_punc
value_unescape(

--- import matplotlib.pyparsing ---
matplotlib.pyparsing.And(
matplotlib.pyparsing.CaselessKeyword(
matplotlib.pyparsing.CaselessLiteral(
matplotlib.pyparsing.CharsNotIn(
matplotlib.pyparsing.Combine(
matplotlib.pyparsing.Dict(
matplotlib.pyparsing.Each(
matplotlib.pyparsing.Empty(
matplotlib.pyparsing.FollowedBy(
matplotlib.pyparsing.Forward(
matplotlib.pyparsing.GoToColumn(
matplotlib.pyparsing.Group(
matplotlib.pyparsing.Keyword(
matplotlib.pyparsing.LineEnd(
matplotlib.pyparsing.LineStart(
matplotlib.pyparsing.Literal(
matplotlib.pyparsing.MatchFirst(
matplotlib.pyparsing.NoMatch(
matplotlib.pyparsing.NotAny(
matplotlib.pyparsing.OneOrMore(
matplotlib.pyparsing.OnlyOnce(
matplotlib.pyparsing.Optional(
matplotlib.pyparsing.Or(
matplotlib.pyparsing.ParseBaseException(
matplotlib.pyparsing.ParseElementEnhance(
matplotlib.pyparsing.ParseException(
matplotlib.pyparsing.ParseExpression(
matplotlib.pyparsing.ParseFatalException(
matplotlib.pyparsing.ParseResults(
matplotlib.pyparsing.ParseSyntaxException(
matplotlib.pyparsing.ParserElement(
matplotlib.pyparsing.QuotedString(
matplotlib.pyparsing.RecursiveGrammarException(
matplotlib.pyparsing.Regex(
matplotlib.pyparsing.SkipTo(
matplotlib.pyparsing.StringEnd(
matplotlib.pyparsing.StringStart(
matplotlib.pyparsing.Suppress(
matplotlib.pyparsing.Token(
matplotlib.pyparsing.TokenConverter(
matplotlib.pyparsing.Upcase(
matplotlib.pyparsing.White(
matplotlib.pyparsing.Word(
matplotlib.pyparsing.WordEnd(
matplotlib.pyparsing.WordStart(
matplotlib.pyparsing.ZeroOrMore(
matplotlib.pyparsing._Constants(
matplotlib.pyparsing._ForwardNoRecurse(
matplotlib.pyparsing._L(
matplotlib.pyparsing._MAX_INT
matplotlib.pyparsing._NullToken(
matplotlib.pyparsing._PY3K
matplotlib.pyparsing._ParseResultsWithOffset(
matplotlib.pyparsing._PositionToken(
matplotlib.pyparsing.__all__
matplotlib.pyparsing.__author__
matplotlib.pyparsing.__builtins__
matplotlib.pyparsing.__doc__
matplotlib.pyparsing.__file__
matplotlib.pyparsing.__name__
matplotlib.pyparsing.__package__
matplotlib.pyparsing.__versionTime__
matplotlib.pyparsing.__version__
matplotlib.pyparsing._bslash
matplotlib.pyparsing._charRange(
matplotlib.pyparsing._commasepitem(
matplotlib.pyparsing._defaultExceptionDebugAction(
matplotlib.pyparsing._defaultStartDebugAction(
matplotlib.pyparsing._defaultSuccessDebugAction(
matplotlib.pyparsing._escapeRegexRangeChars(
matplotlib.pyparsing._escapedHexChar(
matplotlib.pyparsing._escapedOctChar(
matplotlib.pyparsing._escapedPunc(
matplotlib.pyparsing._expanded(
matplotlib.pyparsing._flatten(
matplotlib.pyparsing._htmlEntityMap
matplotlib.pyparsing._makeTags(
matplotlib.pyparsing._noncomma
matplotlib.pyparsing._optionalNotMatched
matplotlib.pyparsing._printables_less_backslash
matplotlib.pyparsing._reBracketExpr(
matplotlib.pyparsing._singleChar(
matplotlib.pyparsing._str2dict(
matplotlib.pyparsing._ustr(
matplotlib.pyparsing.alphanums
matplotlib.pyparsing.alphas
matplotlib.pyparsing.alphas8bit
matplotlib.pyparsing.anyCloseTag(
matplotlib.pyparsing.anyOpenTag(
matplotlib.pyparsing.c
matplotlib.pyparsing.cStyleComment(
matplotlib.pyparsing.col(
matplotlib.pyparsing.commaSeparatedList(
matplotlib.pyparsing.commonHTMLEntity(
matplotlib.pyparsing.copy
matplotlib.pyparsing.countedArray(
matplotlib.pyparsing.cppStyleComment(
matplotlib.pyparsing.dblQuotedString(
matplotlib.pyparsing.dblSlashComment(
matplotlib.pyparsing.delimitedList(
matplotlib.pyparsing.dictOf(
matplotlib.pyparsing.downcaseTokens(
matplotlib.pyparsing.empty(
matplotlib.pyparsing.getTokensEndLoc(
matplotlib.pyparsing.hexnums
matplotlib.pyparsing.htmlComment(
matplotlib.pyparsing.indentedBlock(
matplotlib.pyparsing.javaStyleComment(
matplotlib.pyparsing.keepOriginalText(
matplotlib.pyparsing.line(
matplotlib.pyparsing.lineEnd(
matplotlib.pyparsing.lineStart(
matplotlib.pyparsing.lineno(
matplotlib.pyparsing.makeHTMLTags(
matplotlib.pyparsing.makeXMLTags(
matplotlib.pyparsing.matchOnlyAtCol(
matplotlib.pyparsing.matchPreviousExpr(
matplotlib.pyparsing.matchPreviousLiteral(
matplotlib.pyparsing.nestedExpr(
matplotlib.pyparsing.nullDebugAction(
matplotlib.pyparsing.nums
matplotlib.pyparsing.oneOf(
matplotlib.pyparsing.opAssoc
matplotlib.pyparsing.operatorPrecedence(
matplotlib.pyparsing.printables
matplotlib.pyparsing.punc8bit
matplotlib.pyparsing.pythonStyleComment(
matplotlib.pyparsing.quotedString(
matplotlib.pyparsing.re
matplotlib.pyparsing.removeQuotes(
matplotlib.pyparsing.replaceHTMLEntity(
matplotlib.pyparsing.replaceWith(
matplotlib.pyparsing.restOfLine(
matplotlib.pyparsing.sglQuotedString(
matplotlib.pyparsing.srange(
matplotlib.pyparsing.sre_constants
matplotlib.pyparsing.string
matplotlib.pyparsing.stringEnd(
matplotlib.pyparsing.stringStart(
matplotlib.pyparsing.sys
matplotlib.pyparsing.traceParseAction(
matplotlib.pyparsing.unicodeString(
matplotlib.pyparsing.upcaseTokens(
matplotlib.pyparsing.warnings
matplotlib.pyparsing.withAttribute(
matplotlib.pyparsing.wkref(
matplotlib.pyparsing.xml

--- from matplotlib import pyparsing ---
pyparsing.And(
pyparsing.CaselessKeyword(
pyparsing.CaselessLiteral(
pyparsing.CharsNotIn(
pyparsing.Combine(
pyparsing.Dict(
pyparsing.Each(
pyparsing.Empty(
pyparsing.FollowedBy(
pyparsing.Forward(
pyparsing.GoToColumn(
pyparsing.Group(
pyparsing.Keyword(
pyparsing.LineEnd(
pyparsing.LineStart(
pyparsing.Literal(
pyparsing.MatchFirst(
pyparsing.NoMatch(
pyparsing.NotAny(
pyparsing.OneOrMore(
pyparsing.OnlyOnce(
pyparsing.Optional(
pyparsing.Or(
pyparsing.ParseBaseException(
pyparsing.ParseElementEnhance(
pyparsing.ParseException(
pyparsing.ParseExpression(
pyparsing.ParseFatalException(
pyparsing.ParseResults(
pyparsing.ParseSyntaxException(
pyparsing.ParserElement(
pyparsing.QuotedString(
pyparsing.RecursiveGrammarException(
pyparsing.Regex(
pyparsing.SkipTo(
pyparsing.StringEnd(
pyparsing.StringStart(
pyparsing.Suppress(
pyparsing.Token(
pyparsing.TokenConverter(
pyparsing.Upcase(
pyparsing.White(
pyparsing.Word(
pyparsing.WordEnd(
pyparsing.WordStart(
pyparsing.ZeroOrMore(
pyparsing._Constants(
pyparsing._ForwardNoRecurse(
pyparsing._L(
pyparsing._MAX_INT
pyparsing._NullToken(
pyparsing._PY3K
pyparsing._ParseResultsWithOffset(
pyparsing._PositionToken(
pyparsing.__all__
pyparsing.__author__
pyparsing.__builtins__
pyparsing.__doc__
pyparsing.__file__
pyparsing.__name__
pyparsing.__package__
pyparsing.__versionTime__
pyparsing.__version__
pyparsing._bslash
pyparsing._charRange(
pyparsing._commasepitem(
pyparsing._defaultExceptionDebugAction(
pyparsing._defaultStartDebugAction(
pyparsing._defaultSuccessDebugAction(
pyparsing._escapeRegexRangeChars(
pyparsing._escapedHexChar(
pyparsing._escapedOctChar(
pyparsing._escapedPunc(
pyparsing._expanded(
pyparsing._flatten(
pyparsing._htmlEntityMap
pyparsing._makeTags(
pyparsing._noncomma
pyparsing._optionalNotMatched
pyparsing._printables_less_backslash
pyparsing._reBracketExpr(
pyparsing._singleChar(
pyparsing._str2dict(
pyparsing._ustr(
pyparsing.alphanums
pyparsing.alphas
pyparsing.alphas8bit
pyparsing.anyCloseTag(
pyparsing.anyOpenTag(
pyparsing.c
pyparsing.cStyleComment(
pyparsing.col(
pyparsing.commaSeparatedList(
pyparsing.commonHTMLEntity(
pyparsing.copy
pyparsing.countedArray(
pyparsing.cppStyleComment(
pyparsing.dblQuotedString(
pyparsing.dblSlashComment(
pyparsing.delimitedList(
pyparsing.dictOf(
pyparsing.downcaseTokens(
pyparsing.empty(
pyparsing.getTokensEndLoc(
pyparsing.hexnums
pyparsing.htmlComment(
pyparsing.indentedBlock(
pyparsing.javaStyleComment(
pyparsing.keepOriginalText(
pyparsing.line(
pyparsing.lineEnd(
pyparsing.lineStart(
pyparsing.lineno(
pyparsing.makeHTMLTags(
pyparsing.makeXMLTags(
pyparsing.matchOnlyAtCol(
pyparsing.matchPreviousExpr(
pyparsing.matchPreviousLiteral(
pyparsing.nestedExpr(
pyparsing.nullDebugAction(
pyparsing.nums
pyparsing.oneOf(
pyparsing.opAssoc
pyparsing.operatorPrecedence(
pyparsing.printables
pyparsing.punc8bit
pyparsing.pythonStyleComment(
pyparsing.quotedString(
pyparsing.re
pyparsing.removeQuotes(
pyparsing.replaceHTMLEntity(
pyparsing.replaceWith(
pyparsing.restOfLine(
pyparsing.sglQuotedString(
pyparsing.srange(
pyparsing.sre_constants
pyparsing.string
pyparsing.stringEnd(
pyparsing.stringStart(
pyparsing.sys
pyparsing.traceParseAction(
pyparsing.unicodeString(
pyparsing.upcaseTokens(
pyparsing.warnings
pyparsing.withAttribute(
pyparsing.wkref(
pyparsing.xml

--- from matplotlib.pyparsing import * ---
And(
CaselessKeyword(
CaselessLiteral(
CharsNotIn(
Combine(
Dict(
Each(
Empty(
FollowedBy(
Forward(
GoToColumn(
Group(
Keyword(
LineEnd(
LineStart(
MatchFirst(
NoMatch(
NotAny(
OneOrMore(
OnlyOnce(
Or(
ParseBaseException(
ParseElementEnhance(
ParseExpression(
ParseFatalException(
ParseResults(
ParseSyntaxException(
ParserElement(
QuotedString(
RecursiveGrammarException(
SkipTo(
StringStart(
Token(
TokenConverter(
Upcase(
White(
Word(
WordEnd(
WordStart(
_Constants(
_ForwardNoRecurse(
_L(
_MAX_INT
_NullToken(
_PY3K
_ParseResultsWithOffset(
_PositionToken(
__all__
__author__
__versionTime__
_bslash
_charRange(
_commasepitem(
_defaultExceptionDebugAction(
_defaultStartDebugAction(
_defaultSuccessDebugAction(
_escapeRegexRangeChars(
_escapedHexChar(
_escapedOctChar(
_escapedPunc(
_expanded(
_flatten(
_htmlEntityMap
_makeTags(
_noncomma
_optionalNotMatched
_printables_less_backslash
_reBracketExpr(
_singleChar(
_str2dict(
_ustr(
alphanums
alphas
alphas8bit
anyCloseTag(
anyOpenTag(
c
cStyleComment(
col(
commaSeparatedList(
commonHTMLEntity(
copy
countedArray(
cppStyleComment(
dblQuotedString(
dblSlashComment(
delimitedList(
dictOf(
downcaseTokens(
empty(
getTokensEndLoc(
hexnums
htmlComment(
indentedBlock(
javaStyleComment(
keepOriginalText(
line(
lineEnd(
lineStart(
lineno(
makeHTMLTags(
makeXMLTags(
matchOnlyAtCol(
matchPreviousExpr(
matchPreviousLiteral(
nestedExpr(
nullDebugAction(
nums
oneOf(
opAssoc
operatorPrecedence(
printables
punc8bit
pythonStyleComment(
quotedString(
removeQuotes(
replaceHTMLEntity(
replaceWith(
restOfLine(
sglQuotedString(
srange(
sre_constants
string
stringEnd(
stringStart(
traceParseAction(
unicodeString(
upcaseTokens(
withAttribute(
wkref(
xml

--- import matplotlib.rcsetup ---
matplotlib.rcsetup.ValidateInStrings(
matplotlib.rcsetup.ValidateInterval(
matplotlib.rcsetup.__builtins__
matplotlib.rcsetup.__doc__
matplotlib.rcsetup.__file__
matplotlib.rcsetup.__name__
matplotlib.rcsetup.__package__
matplotlib.rcsetup._validate_standard_backends(
matplotlib.rcsetup.all_backends
matplotlib.rcsetup.defaultParams
matplotlib.rcsetup.interactive_bk
matplotlib.rcsetup.is_color_like(
matplotlib.rcsetup.non_interactive_bk
matplotlib.rcsetup.os
matplotlib.rcsetup.parse_fontconfig_pattern(
matplotlib.rcsetup.validate_aspect(
matplotlib.rcsetup.validate_autolayout(
matplotlib.rcsetup.validate_backend(
matplotlib.rcsetup.validate_bool(
matplotlib.rcsetup.validate_bool_maybe_none(
matplotlib.rcsetup.validate_cairo_format(
matplotlib.rcsetup.validate_capstyle(
matplotlib.rcsetup.validate_color(
matplotlib.rcsetup.validate_colorlist(
matplotlib.rcsetup.validate_float(
matplotlib.rcsetup.validate_font_properties(
matplotlib.rcsetup.validate_fontset(
matplotlib.rcsetup.validate_fontsize(
matplotlib.rcsetup.validate_fonttype(
matplotlib.rcsetup.validate_int(
matplotlib.rcsetup.validate_joinstyle(
matplotlib.rcsetup.validate_legend_loc(
matplotlib.rcsetup.validate_maskedarray(
matplotlib.rcsetup.validate_mathtext_default(
matplotlib.rcsetup.validate_negative_linestyle(
matplotlib.rcsetup.validate_negative_linestyle_legacy(
matplotlib.rcsetup.validate_nseq_float(
matplotlib.rcsetup.validate_nseq_int(
matplotlib.rcsetup.validate_numerix(
matplotlib.rcsetup.validate_orientation(
matplotlib.rcsetup.validate_path_exists(
matplotlib.rcsetup.validate_ps_distiller(
matplotlib.rcsetup.validate_ps_papersize(
matplotlib.rcsetup.validate_stringlist(
matplotlib.rcsetup.validate_tkpythoninspect(
matplotlib.rcsetup.validate_toolbar(
matplotlib.rcsetup.validate_verbose(
matplotlib.rcsetup.warnings

--- from matplotlib import rcsetup ---
rcsetup.ValidateInStrings(
rcsetup.ValidateInterval(
rcsetup.__builtins__
rcsetup.__doc__
rcsetup.__file__
rcsetup.__name__
rcsetup.__package__
rcsetup._validate_standard_backends(
rcsetup.all_backends
rcsetup.defaultParams
rcsetup.interactive_bk
rcsetup.is_color_like(
rcsetup.non_interactive_bk
rcsetup.os
rcsetup.parse_fontconfig_pattern(
rcsetup.validate_aspect(
rcsetup.validate_autolayout(
rcsetup.validate_backend(
rcsetup.validate_bool(
rcsetup.validate_bool_maybe_none(
rcsetup.validate_cairo_format(
rcsetup.validate_capstyle(
rcsetup.validate_color(
rcsetup.validate_colorlist(
rcsetup.validate_float(
rcsetup.validate_font_properties(
rcsetup.validate_fontset(
rcsetup.validate_fontsize(
rcsetup.validate_fonttype(
rcsetup.validate_int(
rcsetup.validate_joinstyle(
rcsetup.validate_legend_loc(
rcsetup.validate_maskedarray(
rcsetup.validate_mathtext_default(
rcsetup.validate_negative_linestyle(
rcsetup.validate_negative_linestyle_legacy(
rcsetup.validate_nseq_float(
rcsetup.validate_nseq_int(
rcsetup.validate_numerix(
rcsetup.validate_orientation(
rcsetup.validate_path_exists(
rcsetup.validate_ps_distiller(
rcsetup.validate_ps_papersize(
rcsetup.validate_stringlist(
rcsetup.validate_tkpythoninspect(
rcsetup.validate_toolbar(
rcsetup.validate_verbose(
rcsetup.warnings

--- from matplotlib.rcsetup import * ---
ValidateInStrings(
ValidateInterval(
_validate_standard_backends(
all_backends
interactive_bk
non_interactive_bk
validate_aspect(
validate_autolayout(
validate_bool(
validate_bool_maybe_none(
validate_capstyle(
validate_color(
validate_colorlist(
validate_float(
validate_font_properties(
validate_fontset(
validate_fontsize(
validate_fonttype(
validate_int(
validate_joinstyle(
validate_legend_loc(
validate_maskedarray(
validate_mathtext_default(
validate_negative_linestyle(
validate_negative_linestyle_legacy(
validate_nseq_float(
validate_nseq_int(
validate_numerix(
validate_orientation(
validate_path_exists(
validate_ps_distiller(
validate_ps_papersize(
validate_stringlist(
validate_tkpythoninspect(
validate_verbose(

--- import numpy ---
numpy.ALLOW_THREADS
numpy.BUFSIZE
numpy.CLIP
numpy.ComplexWarning(
numpy.DataSource(
numpy.ERR_CALL
numpy.ERR_DEFAULT
numpy.ERR_DEFAULT2
numpy.ERR_IGNORE
numpy.ERR_LOG
numpy.ERR_PRINT
numpy.ERR_RAISE
numpy.ERR_WARN
numpy.FLOATING_POINT_SUPPORT
numpy.FPE_DIVIDEBYZERO
numpy.FPE_INVALID
numpy.FPE_OVERFLOW
numpy.FPE_UNDERFLOW
numpy.False_
numpy.Inf
numpy.Infinity
numpy.MAXDIMS
numpy.MachAr(
numpy.NAN
numpy.NINF
numpy.NZERO
numpy.NaN
numpy.PINF
numpy.PZERO
numpy.PackageLoader(
numpy.RAISE
numpy.RankWarning(
numpy.SHIFT_DIVIDEBYZERO
numpy.SHIFT_INVALID
numpy.SHIFT_OVERFLOW
numpy.SHIFT_UNDERFLOW
numpy.ScalarType
numpy.Tester(
numpy.True_
numpy.UFUNC_BUFSIZE_DEFAULT
numpy.UFUNC_PYVALS_NAME
numpy.WRAP
numpy.__NUMPY_SETUP__
numpy.__all__
numpy.__builtins__
numpy.__config__
numpy.__doc__
numpy.__file__
numpy.__git_revision__
numpy.__name__
numpy.__package__
numpy.__path__
numpy.__version__
numpy._import_tools
numpy._mat
numpy.abs(
numpy.absolute(
numpy.add(
numpy.add_docstring(
numpy.add_newdoc(
numpy.add_newdocs
numpy.alen(
numpy.all(
numpy.allclose(
numpy.alltrue(
numpy.alterdot(
numpy.amax(
numpy.amin(
numpy.angle(
numpy.any(
numpy.append(
numpy.apply_along_axis(
numpy.apply_over_axes(
numpy.arange(
numpy.arccos(
numpy.arccosh(
numpy.arcsin(
numpy.arcsinh(
numpy.arctan(
numpy.arctan2(
numpy.arctanh(
numpy.argmax(
numpy.argmin(
numpy.argsort(
numpy.argwhere(
numpy.around(
numpy.array(
numpy.array2string(
numpy.array_equal(
numpy.array_equiv(
numpy.array_repr(
numpy.array_split(
numpy.array_str(
numpy.asanyarray(
numpy.asarray(
numpy.asarray_chkfinite(
numpy.ascontiguousarray(
numpy.asfarray(
numpy.asfortranarray(
numpy.asmatrix(
numpy.asscalar(
numpy.atleast_1d(
numpy.atleast_2d(
numpy.atleast_3d(
numpy.average(
numpy.bartlett(
numpy.base_repr(
numpy.bench(
numpy.binary_repr(
numpy.bincount(
numpy.bitwise_and(
numpy.bitwise_not(
numpy.bitwise_or(
numpy.bitwise_xor(
numpy.blackman(
numpy.bmat(
numpy.bool(
numpy.bool8(
numpy.bool_(
numpy.broadcast(
numpy.broadcast_arrays(
numpy.byte(
numpy.byte_bounds(
numpy.bytes_(
numpy.c_
numpy.can_cast(
numpy.cast
numpy.cdouble(
numpy.ceil(
numpy.cfloat(
numpy.char
numpy.character(
numpy.chararray(
numpy.choose(
numpy.clip(
numpy.clongdouble(
numpy.clongfloat(
numpy.column_stack(
numpy.common_type(
numpy.compare_chararrays(
numpy.compat
numpy.complex(
numpy.complex128(
numpy.complex192(
numpy.complex64(
numpy.complex_(
numpy.complexfloating(
numpy.compress(
numpy.concatenate(
numpy.conj(
numpy.conjugate(
numpy.convolve(
numpy.copy(
numpy.copysign(
numpy.core
numpy.corrcoef(
numpy.correlate(
numpy.cos(
numpy.cosh(
numpy.count_nonzero(
numpy.cov(
numpy.cross(
numpy.csingle(
numpy.ctypeslib
numpy.cumprod(
numpy.cumproduct(
numpy.cumsum(
numpy.datetime64(
numpy.datetime_(
numpy.datetime_data(
numpy.deg2rad(
numpy.degrees(
numpy.delete(
numpy.deprecate(
numpy.deprecate_with_doc(
numpy.diag(
numpy.diag_indices(
numpy.diag_indices_from(
numpy.diagflat(
numpy.diagonal(
numpy.diff(
numpy.digitize(
numpy.disp(
numpy.divide(
numpy.dot(
numpy.double(
numpy.dsplit(
numpy.dstack(
numpy.dtype(
numpy.e
numpy.ediff1d(
numpy.einsum(
numpy.emath
numpy.empty(
numpy.empty_like(
numpy.equal(
numpy.errstate(
numpy.exp(
numpy.exp2(
numpy.expand_dims(
numpy.expm1(
numpy.extract(
numpy.eye(
numpy.fabs(
numpy.fastCopyAndTranspose(
numpy.fft
numpy.fill_diagonal(
numpy.find_common_type(
numpy.finfo(
numpy.fix(
numpy.flatiter(
numpy.flatnonzero(
numpy.flexible(
numpy.fliplr(
numpy.flipud(
numpy.float(
numpy.float16(
numpy.float32(
numpy.float64(
numpy.float96(
numpy.float_(
numpy.floating(
numpy.floor(
numpy.floor_divide(
numpy.fmax(
numpy.fmin(
numpy.fmod(
numpy.format_parser(
numpy.frexp(
numpy.frombuffer(
numpy.fromfile(
numpy.fromfunction(
numpy.fromiter(
numpy.frompyfunc(
numpy.fromregex(
numpy.fromstring(
numpy.fv(
numpy.generic(
numpy.genfromtxt(
numpy.get_array_wrap(
numpy.get_include(
numpy.get_numarray_include(
numpy.get_printoptions(
numpy.getbuffer(
numpy.getbufsize(
numpy.geterr(
numpy.geterrcall(
numpy.geterrobj(
numpy.gradient(
numpy.greater(
numpy.greater_equal(
numpy.half(
numpy.hamming(
numpy.hanning(
numpy.histogram(
numpy.histogram2d(
numpy.histogramdd(
numpy.hsplit(
numpy.hstack(
numpy.hypot(
numpy.i0(
numpy.identity(
numpy.iinfo(
numpy.imag(
numpy.in1d(
numpy.index_exp
numpy.indices(
numpy.inexact(
numpy.inf
numpy.info(
numpy.infty
numpy.inner(
numpy.insert(
numpy.int(
numpy.int0(
numpy.int16(
numpy.int32(
numpy.int64(
numpy.int8(
numpy.int_(
numpy.int_asbuffer(
numpy.intc(
numpy.integer(
numpy.interp(
numpy.intersect1d(
numpy.intp(
numpy.invert(
numpy.ipmt(
numpy.irr(
numpy.iscomplex(
numpy.iscomplexobj(
numpy.isfinite(
numpy.isfortran(
numpy.isinf(
numpy.isnan(
numpy.isneginf(
numpy.isposinf(
numpy.isreal(
numpy.isrealobj(
numpy.isscalar(
numpy.issctype(
numpy.issubclass_(
numpy.issubdtype(
numpy.issubsctype(
numpy.iterable(
numpy.ix_(
numpy.kaiser(
numpy.kron(
numpy.ldexp(
numpy.left_shift(
numpy.less(
numpy.less_equal(
numpy.lexsort(
numpy.lib
numpy.linalg
numpy.linspace(
numpy.little_endian
numpy.load(
numpy.loads(
numpy.loadtxt(
numpy.log(
numpy.log10(
numpy.log1p(
numpy.log2(
numpy.logaddexp(
numpy.logaddexp2(
numpy.logical_and(
numpy.logical_not(
numpy.logical_or(
numpy.logical_xor(
numpy.logspace(
numpy.long(
numpy.longcomplex(
numpy.longdouble(
numpy.longfloat(
numpy.longlong(
numpy.lookfor(
numpy.ma
numpy.mafromtxt(
numpy.mask_indices(
numpy.mat(
numpy.math
numpy.matrix(
numpy.matrixlib
numpy.max(
numpy.maximum(
numpy.maximum_sctype(
numpy.may_share_memory(
numpy.mean(
numpy.median(
numpy.memmap(
numpy.meshgrid(
numpy.mgrid
numpy.min(
numpy.min_scalar_type(
numpy.minimum(
numpy.mintypecode(
numpy.mirr(
numpy.mod(
numpy.modf(
numpy.msort(
numpy.multiply(
numpy.nan
numpy.nan_to_num(
numpy.nanargmax(
numpy.nanargmin(
numpy.nanmax(
numpy.nanmin(
numpy.nansum(
numpy.nbytes
numpy.ndarray(
numpy.ndenumerate(
numpy.ndfromtxt(
numpy.ndim(
numpy.ndindex(
numpy.nditer(
numpy.negative(
numpy.nested_iters(
numpy.newaxis
numpy.newbuffer(
numpy.nextafter(
numpy.nonzero(
numpy.not_equal(
numpy.nper(
numpy.npv(
numpy.number(
numpy.obj2sctype(
numpy.object(
numpy.object0(
numpy.object_(
numpy.ogrid
numpy.ones(
numpy.ones_like(
numpy.outer(
numpy.packbits(
numpy.percentile(
numpy.pi
numpy.piecewise(
numpy.pkgload(
numpy.place(
numpy.pmt(
numpy.poly(
numpy.poly1d(
numpy.polyadd(
numpy.polyder(
numpy.polydiv(
numpy.polyfit(
numpy.polyint(
numpy.polymul(
numpy.polynomial
numpy.polysub(
numpy.polyval(
numpy.power(
numpy.ppmt(
numpy.prod(
numpy.product(
numpy.promote_types(
numpy.ptp(
numpy.put(
numpy.putmask(
numpy.pv(
numpy.r_
numpy.rad2deg(
numpy.radians(
numpy.random
numpy.rank(
numpy.rate(
numpy.ravel(
numpy.ravel_multi_index(
numpy.real(
numpy.real_if_close(
numpy.rec
numpy.recarray(
numpy.recfromcsv(
numpy.recfromtxt(
numpy.reciprocal(
numpy.record(
numpy.remainder(
numpy.repeat(
numpy.require(
numpy.reshape(
numpy.resize(
numpy.restoredot(
numpy.result_type(
numpy.right_shift(
numpy.rint(
numpy.roll(
numpy.rollaxis(
numpy.roots(
numpy.rot90(
numpy.round(
numpy.round_(
numpy.row_stack(
numpy.s_
numpy.safe_eval(
numpy.save(
numpy.savetxt(
numpy.savez(
numpy.savez_compressed(
numpy.sctype2char(
numpy.sctypeDict
numpy.sctypeNA
numpy.sctypes
numpy.searchsorted(
numpy.select(
numpy.set_numeric_ops(
numpy.set_printoptions(
numpy.set_string_function(
numpy.setbufsize(
numpy.setdiff1d(
numpy.seterr(
numpy.seterrcall(
numpy.seterrobj(
numpy.setxor1d(
numpy.shape(
numpy.short(
numpy.show_config(
numpy.sign(
numpy.signbit(
numpy.signedinteger(
numpy.sin(
numpy.sinc(
numpy.single(
numpy.singlecomplex(
numpy.sinh(
numpy.size(
numpy.sometrue(
numpy.sort(
numpy.sort_complex(
numpy.source(
numpy.spacing(
numpy.split(
numpy.sqrt(
numpy.square(
numpy.squeeze(
numpy.std(
numpy.str(
numpy.str_(
numpy.string0(
numpy.string_(
numpy.subtract(
numpy.sum(
numpy.swapaxes(
numpy.take(
numpy.tan(
numpy.tanh(
numpy.tensordot(
numpy.test(
numpy.testing
numpy.tile(
numpy.timedelta64(
numpy.timedelta_(
numpy.timeinteger(
numpy.trace(
numpy.transpose(
numpy.trapz(
numpy.tri(
numpy.tril(
numpy.tril_indices(
numpy.tril_indices_from(
numpy.trim_zeros(
numpy.triu(
numpy.triu_indices(
numpy.triu_indices_from(
numpy.true_divide(
numpy.trunc(
numpy.typeDict
numpy.typeNA
numpy.typecodes
numpy.typename(
numpy.ubyte(
numpy.ufunc(
numpy.uint(
numpy.uint0(
numpy.uint16(
numpy.uint32(
numpy.uint64(
numpy.uint8(
numpy.uintc(
numpy.uintp(
numpy.ulonglong(
numpy.unicode(
numpy.unicode0(
numpy.unicode_(
numpy.union1d(
numpy.unique(
numpy.unpackbits(
numpy.unravel_index(
numpy.unsignedinteger(
numpy.unwrap(
numpy.ushort(
numpy.vander(
numpy.var(
numpy.vdot(
numpy.vectorize(
numpy.version
numpy.void(
numpy.void0(
numpy.vsplit(
numpy.vstack(
numpy.where(
numpy.who(
numpy.zeros(
numpy.zeros_like(

--- from numpy import * ---
ALLOW_THREADS
BUFSIZE
CLIP
ComplexWarning(
DataSource(
ERR_CALL
ERR_DEFAULT
ERR_DEFAULT2
ERR_IGNORE
ERR_LOG
ERR_PRINT
ERR_RAISE
ERR_WARN
FLOATING_POINT_SUPPORT
FPE_DIVIDEBYZERO
FPE_INVALID
FPE_OVERFLOW
FPE_UNDERFLOW
False_
Inf
Infinity
MAXDIMS
MachAr(
NAN
NINF
NZERO
NaN
PINF
PZERO
PackageLoader(
RAISE
RankWarning(
SHIFT_DIVIDEBYZERO
SHIFT_INVALID
SHIFT_OVERFLOW
SHIFT_UNDERFLOW
ScalarType
Tester(
True_
UFUNC_BUFSIZE_DEFAULT
UFUNC_PYVALS_NAME
WRAP
__NUMPY_SETUP__
__config__
__git_revision__
_import_tools
_mat
abs(
absolute(
add(
add_docstring(
add_newdoc(
add_newdocs
alen(
all(
allclose(
alterdot(
amax(
amin(
angle(
any(
append(
apply_along_axis(
apply_over_axes(
arange(
arccos(
arccosh(
arcsin(
arcsinh(
arctan(
arctan2(
arctanh(
argmax(
argmin(
argsort(
argwhere(
around(
array(
array2string(
array_equal(
array_equiv(
array_repr(
array_split(
array_str(
asanyarray(
asarray(
asarray_chkfinite(
ascontiguousarray(
asfarray(
asfortranarray(
asmatrix(
asscalar(
atleast_1d(
atleast_2d(
atleast_3d(
average(
bartlett(
base_repr(
bench(
binary_repr(
bincount(
bitwise_and(
bitwise_not(
bitwise_or(
bitwise_xor(
blackman(
bmat(
bool(
bool8(
bool_(
broadcast(
broadcast_arrays(
byte(
byte_bounds(
bytes_(
c_
can_cast(
cast
cdouble(
ceil(
cfloat(
char
character(
chararray(
choose(
clip(
clongdouble(
clongfloat(
column_stack(
common_type(
compare_chararrays(
compat
complex(
complex128(
complex192(
complex64(
complex_(
complexfloating(
compress(
concatenate(
conj(
conjugate(
convolve(
copy(
copysign(
core
corrcoef(
correlate(
cos(
cosh(
count_nonzero(
cov(
cross(
csingle(
ctypeslib
cumprod(
cumproduct(
cumsum(
datetime64(
datetime_(
datetime_data(
deg2rad(
degrees(
delete(
deprecate(
deprecate_with_doc(
diag(
diag_indices(
diag_indices_from(
diagflat(
diagonal(
diff(
digitize(
disp(
divide(
dot(
double(
dsplit(
dstack(
dtype(
e
ediff1d(
einsum(
emath
empty_like(
equal(
errstate(
exp(
exp2(
expand_dims(
expm1(
extract(
eye(
fabs(
fastCopyAndTranspose(
fft
fill_diagonal(
find_common_type(
finfo(
fix(
flatiter(
flatnonzero(
flexible(
fliplr(
flipud(
float(
float16(
float32(
float64(
float96(
float_(
floating(
floor(
floor_divide(
fmax(
fmin(
fmod(
format_parser(
frexp(
frombuffer(
fromfile(
fromfunction(
fromiter(
frompyfunc(
fromregex(
fromstring(
fv(
generic(
genfromtxt(
get_array_wrap(
get_include(
get_numarray_include(
get_printoptions(
getbuffer(
getbufsize(
geterr(
geterrcall(
geterrobj(
gradient(
greater(
greater_equal(
half(
hamming(
hanning(
histogram(
histogram2d(
histogramdd(
hsplit(
hstack(
hypot(
i0(
identity(
iinfo(
imag(
in1d(
index_exp
indices(
inexact(
inf
info(
infty
inner(
insert(
int(
int0(
int16(
int32(
int64(
int8(
int_(
int_asbuffer(
intc(
integer(
interp(
intersect1d(
intp(
invert(
ipmt(
irr(
iscomplex(
iscomplexobj(
isfinite(
isfortran(
isinf(
isnan(
isneginf(
isposinf(
isreal(
isrealobj(
isscalar(
issctype(
issubclass_(
issubdtype(
issubsctype(
ix_(
kaiser(
kron(
ldexp(
left_shift(
less(
less_equal(
lexsort(
lib
linalg
linspace(
little_endian
load(
loads(
loadtxt(
log(
log10(
log1p(
log2(
logaddexp(
logaddexp2(
logical_and(
logical_not(
logical_or(
logical_xor(
logspace(
long(
longcomplex(
longdouble(
longfloat(
longlong(
lookfor(
mafromtxt(
mask_indices(
mat(
math
matrix(
matrixlib
max(
maximum(
maximum_sctype(
may_share_memory(
mean(
median(
memmap(
meshgrid(
mgrid
min(
min_scalar_type(
minimum(
mintypecode(
mirr(
mod(
modf(
msort(
multiply(
nan
nan_to_num(
nanargmax(
nanargmin(
nanmax(
nanmin(
nansum(
nbytes
ndarray(
ndenumerate(
ndfromtxt(
ndim(
ndindex(
nditer(
negative(
nested_iters(
newaxis
newbuffer(
nextafter(
nonzero(
not_equal(
nper(
npv(
number(
obj2sctype(
object(
object0(
object_(
ogrid
ones(
ones_like(
outer(
packbits(
percentile(
pi
piecewise(
pkgload(
place(
pmt(
poly(
poly1d(
polyadd(
polyder(
polydiv(
polyfit(
polyint(
polymul(
polynomial
polysub(
polyval(
power(
ppmt(
prod(
product(
promote_types(
ptp(
put(
putmask(
pv(
r_
rad2deg(
radians(
rank(
rate(
ravel(
ravel_multi_index(
real(
real_if_close(
rec
recarray(
recfromcsv(
recfromtxt(
reciprocal(
record(
remainder(
repeat(
require(
reshape(
resize(
restoredot(
result_type(
right_shift(
rint(
roll(
rollaxis(
roots(
rot90(
round(
round_(
row_stack(
s_
safe_eval(
save(
savetxt(
savez(
savez_compressed(
sctype2char(
sctypeDict
sctypeNA
sctypes
searchsorted(
select(
set_numeric_ops(
set_printoptions(
set_string_function(
setbufsize(
setdiff1d(
seterr(
seterrcall(
seterrobj(
setxor1d(
shape(
short(
show_config(
sign(
signbit(
signedinteger(
sin(
sinc(
single(
singlecomplex(
sinh(
size(
sometrue(
sort(
sort_complex(
source(
spacing(
split(
sqrt(
square(
squeeze(
std(
str(
str_(
string0(
string_(
subtract(
sum(
swapaxes(
take(
tan(
tanh(
tensordot(
testing
tile(
timedelta64(
timedelta_(
timeinteger(
trace(
transpose(
trapz(
tri(
tril(
tril_indices(
tril_indices_from(
trim_zeros(
triu(
triu_indices(
triu_indices_from(
true_divide(
trunc(
typeDict
typeNA
typecodes
typename(
ubyte(
ufunc(
uint(
uint0(
uint16(
uint32(
uint64(
uint8(
uintc(
uintp(
ulonglong(
unicode(
unicode0(
unicode_(
union1d(
unpackbits(
unravel_index(
unsignedinteger(
unwrap(
ushort(
vander(
var(
vdot(
vectorize(
version
void(
void0(
vsplit(
vstack(
where(
who(
zeros(
zeros_like(

--- import numpy.__config__ ---
numpy.__config__.__all__
numpy.__config__.__builtins__
numpy.__config__.__doc__
numpy.__config__.__file__
numpy.__config__.__name__
numpy.__config__.__package__
numpy.__config__.atlas_blas_info
numpy.__config__.atlas_blas_threads_info
numpy.__config__.atlas_info
numpy.__config__.atlas_threads_info
numpy.__config__.blas_info
numpy.__config__.blas_mkl_info
numpy.__config__.blas_opt_info
numpy.__config__.blas_src_info
numpy.__config__.get_info(
numpy.__config__.lapack_info
numpy.__config__.lapack_mkl_info
numpy.__config__.lapack_opt_info
numpy.__config__.lapack_src_info
numpy.__config__.mkl_info
numpy.__config__.show(

--- from numpy import __config__ ---
__config__.__all__
__config__.__builtins__
__config__.__doc__
__config__.__file__
__config__.__name__
__config__.__package__
__config__.atlas_blas_info
__config__.atlas_blas_threads_info
__config__.atlas_info
__config__.atlas_threads_info
__config__.blas_info
__config__.blas_mkl_info
__config__.blas_opt_info
__config__.blas_src_info
__config__.get_info(
__config__.lapack_info
__config__.lapack_mkl_info
__config__.lapack_opt_info
__config__.lapack_src_info
__config__.mkl_info
__config__.show(

--- from numpy.__config__ import * ---
atlas_blas_info
atlas_blas_threads_info
atlas_info
atlas_threads_info
blas_info
blas_mkl_info
blas_opt_info
blas_src_info
get_info(
lapack_info
lapack_mkl_info
lapack_opt_info
lapack_src_info
mkl_info
show(

--- import numpy._import_tools ---
numpy._import_tools.PackageLoader(
numpy._import_tools.PackageLoaderDebug(
numpy._import_tools.__all__
numpy._import_tools.__builtins__
numpy._import_tools.__doc__
numpy._import_tools.__file__
numpy._import_tools.__name__
numpy._import_tools.__package__
numpy._import_tools.os
numpy._import_tools.sys

--- from numpy import _import_tools ---
_import_tools.PackageLoader(
_import_tools.PackageLoaderDebug(
_import_tools.__all__
_import_tools.__builtins__
_import_tools.__doc__
_import_tools.__file__
_import_tools.__name__
_import_tools.__package__
_import_tools.os
_import_tools.sys

--- from numpy._import_tools import * ---
PackageLoaderDebug(

--- import numpy.add_newdocs ---
numpy.add_newdocs.__builtins__
numpy.add_newdocs.__doc__
numpy.add_newdocs.__file__
numpy.add_newdocs.__name__
numpy.add_newdocs.__package__
numpy.add_newdocs.add_newdoc(

--- from numpy import add_newdocs ---
add_newdocs.__builtins__
add_newdocs.__doc__
add_newdocs.__file__
add_newdocs.__name__
add_newdocs.__package__
add_newdocs.add_newdoc(

--- from numpy.add_newdocs import * ---

--- import numpy.compat ---
numpy.compat.__all__
numpy.compat.__builtins__
numpy.compat.__doc__
numpy.compat.__file__
numpy.compat.__name__
numpy.compat.__package__
numpy.compat.__path__
numpy.compat._inspect
numpy.compat.asbytes(
numpy.compat.asbytes_nested(
numpy.compat.asstr(
numpy.compat.asunicode(
numpy.compat.asunicode_nested(
numpy.compat.bytes(
numpy.compat.formatargspec(
numpy.compat.getargspec(
numpy.compat.getexception(
numpy.compat.isfileobj(
numpy.compat.open_latin1(
numpy.compat.py3k
numpy.compat.strchar
numpy.compat.unicode(

--- from numpy import compat ---
compat.__all__
compat.__builtins__
compat.__doc__
compat.__file__
compat.__name__
compat.__package__
compat.__path__
compat._inspect
compat.asbytes(
compat.asbytes_nested(
compat.asstr(
compat.asunicode(
compat.asunicode_nested(
compat.bytes(
compat.formatargspec(
compat.getargspec(
compat.getexception(
compat.isfileobj(
compat.open_latin1(
compat.py3k
compat.strchar
compat.unicode(

--- from numpy.compat import * ---
_inspect
asbytes(
asbytes_nested(
asstr(
asunicode(
asunicode_nested(
bytes(
formatargspec(
getargspec(
getexception(
isfileobj(
open_latin1(
py3k
strchar

--- import numpy.compat._inspect ---
numpy.compat._inspect.CO_NEWLOCALS
numpy.compat._inspect.CO_OPTIMIZED
numpy.compat._inspect.CO_VARARGS
numpy.compat._inspect.CO_VARKEYWORDS
numpy.compat._inspect.__all__
numpy.compat._inspect.__builtins__
numpy.compat._inspect.__doc__
numpy.compat._inspect.__file__
numpy.compat._inspect.__name__
numpy.compat._inspect.__package__
numpy.compat._inspect.formatargspec(
numpy.compat._inspect.formatargvalues(
numpy.compat._inspect.getargs(
numpy.compat._inspect.getargspec(
numpy.compat._inspect.getargvalues(
numpy.compat._inspect.iscode(
numpy.compat._inspect.isfunction(
numpy.compat._inspect.ismethod(
numpy.compat._inspect.joinseq(
numpy.compat._inspect.strseq(
numpy.compat._inspect.types

--- from numpy.compat import _inspect ---
_inspect.CO_NEWLOCALS
_inspect.CO_OPTIMIZED
_inspect.CO_VARARGS
_inspect.CO_VARKEYWORDS
_inspect.__all__
_inspect.__builtins__
_inspect.__doc__
_inspect.__file__
_inspect.__name__
_inspect.__package__
_inspect.formatargspec(
_inspect.formatargvalues(
_inspect.getargs(
_inspect.getargspec(
_inspect.getargvalues(
_inspect.iscode(
_inspect.isfunction(
_inspect.ismethod(
_inspect.joinseq(
_inspect.strseq(
_inspect.types

--- from numpy.compat._inspect import * ---
CO_NEWLOCALS
CO_OPTIMIZED
CO_VARARGS
CO_VARKEYWORDS
formatargvalues(
getargs(
getargvalues(
iscode(
isfunction(
ismethod(
joinseq(
strseq(

--- import numpy.compat.py3k ---
numpy.compat.py3k.__all__
numpy.compat.py3k.__builtins__
numpy.compat.py3k.__doc__
numpy.compat.py3k.__file__
numpy.compat.py3k.__name__
numpy.compat.py3k.__package__
numpy.compat.py3k.asbytes(
numpy.compat.py3k.asbytes_nested(
numpy.compat.py3k.asstr(
numpy.compat.py3k.asunicode(
numpy.compat.py3k.asunicode_nested(
numpy.compat.py3k.bytes(
numpy.compat.py3k.getexception(
numpy.compat.py3k.isfileobj(
numpy.compat.py3k.open_latin1(
numpy.compat.py3k.strchar
numpy.compat.py3k.sys
numpy.compat.py3k.unicode(

--- from numpy.compat import py3k ---
py3k.__all__
py3k.__builtins__
py3k.__doc__
py3k.__file__
py3k.__name__
py3k.__package__
py3k.asbytes(
py3k.asbytes_nested(
py3k.asstr(
py3k.asunicode(
py3k.asunicode_nested(
py3k.bytes(
py3k.getexception(
py3k.isfileobj(
py3k.open_latin1(
py3k.strchar
py3k.sys
py3k.unicode(

--- from numpy.compat.py3k import * ---

--- import numpy.core ---
numpy.core.ALLOW_THREADS
numpy.core.BUFSIZE
numpy.core.CLIP
numpy.core.ComplexWarning(
numpy.core.ERR_CALL
numpy.core.ERR_DEFAULT
numpy.core.ERR_DEFAULT2
numpy.core.ERR_IGNORE
numpy.core.ERR_LOG
numpy.core.ERR_PRINT
numpy.core.ERR_RAISE
numpy.core.ERR_WARN
numpy.core.FLOATING_POINT_SUPPORT
numpy.core.FPE_DIVIDEBYZERO
numpy.core.FPE_INVALID
numpy.core.FPE_OVERFLOW
numpy.core.FPE_UNDERFLOW
numpy.core.False_
numpy.core.Inf
numpy.core.Infinity
numpy.core.MAXDIMS
numpy.core.MachAr(
numpy.core.NAN
numpy.core.NINF
numpy.core.NZERO
numpy.core.NaN
numpy.core.PINF
numpy.core.PZERO
numpy.core.RAISE
numpy.core.SHIFT_DIVIDEBYZERO
numpy.core.SHIFT_INVALID
numpy.core.SHIFT_OVERFLOW
numpy.core.SHIFT_UNDERFLOW
numpy.core.ScalarType
numpy.core.Tester(
numpy.core.True_
numpy.core.UFUNC_BUFSIZE_DEFAULT
numpy.core.UFUNC_PYVALS_NAME
numpy.core.WRAP
numpy.core.__all__
numpy.core.__builtins__
numpy.core.__doc__
numpy.core.__file__
numpy.core.__name__
numpy.core.__package__
numpy.core.__path__
numpy.core.__version__
numpy.core.__warningregistry__
numpy.core._internal
numpy.core._sort
numpy.core.abs(
numpy.core.absolute(
numpy.core.add(
numpy.core.alen(
numpy.core.all(
numpy.core.allclose(
numpy.core.alltrue(
numpy.core.alterdot(
numpy.core.amax(
numpy.core.amin(
numpy.core.any(
numpy.core.arange(
numpy.core.arccos(
numpy.core.arccosh(
numpy.core.arcsin(
numpy.core.arcsinh(
numpy.core.arctan(
numpy.core.arctan2(
numpy.core.arctanh(
numpy.core.argmax(
numpy.core.argmin(
numpy.core.argsort(
numpy.core.argwhere(
numpy.core.around(
numpy.core.array(
numpy.core.array2string(
numpy.core.array_equal(
numpy.core.array_equiv(
numpy.core.array_repr(
numpy.core.array_str(
numpy.core.arrayprint
numpy.core.asanyarray(
numpy.core.asarray(
numpy.core.ascontiguousarray(
numpy.core.asfortranarray(
numpy.core.atleast_1d(
numpy.core.atleast_2d(
numpy.core.atleast_3d(
numpy.core.base_repr(
numpy.core.bench(
numpy.core.binary_repr(
numpy.core.bitwise_and(
numpy.core.bitwise_not(
numpy.core.bitwise_or(
numpy.core.bitwise_xor(
numpy.core.bool8(
numpy.core.bool_(
numpy.core.broadcast(
numpy.core.byte(
numpy.core.bytes_(
numpy.core.can_cast(
numpy.core.cast
numpy.core.cdouble(
numpy.core.ceil(
numpy.core.cfloat(
numpy.core.char
numpy.core.character(
numpy.core.chararray(
numpy.core.choose(
numpy.core.clip(
numpy.core.clongdouble(
numpy.core.clongfloat(
numpy.core.compare_chararrays(
numpy.core.complex128(
numpy.core.complex192(
numpy.core.complex64(
numpy.core.complex_(
numpy.core.complexfloating(
numpy.core.compress(
numpy.core.concatenate(
numpy.core.conj(
numpy.core.conjugate(
numpy.core.convolve(
numpy.core.copysign(
numpy.core.correlate(
numpy.core.cos(
numpy.core.cosh(
numpy.core.count_nonzero(
numpy.core.cross(
numpy.core.csingle(
numpy.core.cumprod(
numpy.core.cumproduct(
numpy.core.cumsum(
numpy.core.datetime64(
numpy.core.datetime_(
numpy.core.defchararray
numpy.core.deg2rad(
numpy.core.degrees(
numpy.core.diagonal(
numpy.core.divide(
numpy.core.dot(
numpy.core.double(
numpy.core.dtype(
numpy.core.e
numpy.core.einsum(
numpy.core.empty(
numpy.core.empty_like(
numpy.core.equal(
numpy.core.errstate(
numpy.core.exp(
numpy.core.exp2(
numpy.core.expm1(
numpy.core.fabs(
numpy.core.fastCopyAndTranspose(
numpy.core.find_common_type(
numpy.core.finfo(
numpy.core.flatiter(
numpy.core.flatnonzero(
numpy.core.flexible(
numpy.core.float16(
numpy.core.float32(
numpy.core.float64(
numpy.core.float96(
numpy.core.float_(
numpy.core.floating(
numpy.core.floor(
numpy.core.floor_divide(
numpy.core.fmax(
numpy.core.fmin(
numpy.core.fmod(
numpy.core.format_parser(
numpy.core.frexp(
numpy.core.frombuffer(
numpy.core.fromfile(
numpy.core.fromfunction(
numpy.core.fromiter(
numpy.core.fromnumeric
numpy.core.frompyfunc(
numpy.core.fromstring(
numpy.core.function_base
numpy.core.generic(
numpy.core.get_printoptions(
numpy.core.getbuffer(
numpy.core.getbufsize(
numpy.core.geterr(
numpy.core.geterrcall(
numpy.core.geterrobj(
numpy.core.getlimits
numpy.core.greater(
numpy.core.greater_equal(
numpy.core.half(
numpy.core.hstack(
numpy.core.hypot(
numpy.core.identity(
numpy.core.iinfo(
numpy.core.indices(
numpy.core.inexact(
numpy.core.inf
numpy.core.info
numpy.core.infty
numpy.core.inner(
numpy.core.int0(
numpy.core.int16(
numpy.core.int32(
numpy.core.int64(
numpy.core.int8(
numpy.core.int_(
numpy.core.int_asbuffer(
numpy.core.intc(
numpy.core.integer(
numpy.core.intp(
numpy.core.invert(
numpy.core.isfinite(
numpy.core.isfortran(
numpy.core.isinf(
numpy.core.isnan(
numpy.core.isscalar(
numpy.core.issctype(
numpy.core.issubdtype(
numpy.core.ldexp(
numpy.core.left_shift(
numpy.core.less(
numpy.core.less_equal(
numpy.core.lexsort(
numpy.core.linspace(
numpy.core.little_endian
numpy.core.load(
numpy.core.loads(
numpy.core.log(
numpy.core.log10(
numpy.core.log1p(
numpy.core.log2(
numpy.core.logaddexp(
numpy.core.logaddexp2(
numpy.core.logical_and(
numpy.core.logical_not(
numpy.core.logical_or(
numpy.core.logical_xor(
numpy.core.logspace(
numpy.core.longcomplex(
numpy.core.longdouble(
numpy.core.longfloat(
numpy.core.longlong(
numpy.core.machar
numpy.core.max(
numpy.core.maximum(
numpy.core.maximum_sctype(
numpy.core.mean(
numpy.core.memmap(
numpy.core.min(
numpy.core.min_scalar_type(
numpy.core.minimum(
numpy.core.mod(
numpy.core.modf(
numpy.core.multiarray
numpy.core.multiply(
numpy.core.nan
numpy.core.nbytes
numpy.core.ndarray(
numpy.core.ndim(
numpy.core.nditer(
numpy.core.negative(
numpy.core.nested_iters(
numpy.core.newaxis
numpy.core.newbuffer(
numpy.core.nextafter(
numpy.core.nonzero(
numpy.core.not_equal(
numpy.core.number(
numpy.core.numeric
numpy.core.numerictypes
numpy.core.obj2sctype(
numpy.core.object0(
numpy.core.object_(
numpy.core.ones(
numpy.core.ones_like(
numpy.core.outer(
numpy.core.pi
numpy.core.power(
numpy.core.prod(
numpy.core.product(
numpy.core.promote_types(
numpy.core.ptp(
numpy.core.put(
numpy.core.putmask(
numpy.core.rad2deg(
numpy.core.radians(
numpy.core.rank(
numpy.core.ravel(
numpy.core.rec
numpy.core.recarray(
numpy.core.reciprocal(
numpy.core.record(
numpy.core.records
numpy.core.remainder(
numpy.core.repeat(
numpy.core.require(
numpy.core.reshape(
numpy.core.resize(
numpy.core.restoredot(
numpy.core.result_type(
numpy.core.right_shift(
numpy.core.rint(
numpy.core.roll(
numpy.core.rollaxis(
numpy.core.round(
numpy.core.round_(
numpy.core.scalarmath
numpy.core.sctype2char(
numpy.core.sctypeDict
numpy.core.sctypeNA
numpy.core.sctypes
numpy.core.searchsorted(
numpy.core.set_numeric_ops(
numpy.core.set_printoptions(
numpy.core.set_string_function(
numpy.core.setbufsize(
numpy.core.seterr(
numpy.core.seterrcall(
numpy.core.seterrobj(
numpy.core.shape(
numpy.core.shape_base
numpy.core.short(
numpy.core.sign(
numpy.core.signbit(
numpy.core.signedinteger(
numpy.core.sin(
numpy.core.single(
numpy.core.singlecomplex(
numpy.core.sinh(
numpy.core.size(
numpy.core.sometrue(
numpy.core.sort(
numpy.core.spacing(
numpy.core.sqrt(
numpy.core.square(
numpy.core.squeeze(
numpy.core.std(
numpy.core.str_(
numpy.core.string0(
numpy.core.string_(
numpy.core.subtract(
numpy.core.sum(
numpy.core.swapaxes(
numpy.core.take(
numpy.core.tan(
numpy.core.tanh(
numpy.core.tensordot(
numpy.core.test(
numpy.core.timedelta64(
numpy.core.timedelta_(
numpy.core.timeinteger(
numpy.core.trace(
numpy.core.transpose(
numpy.core.true_divide(
numpy.core.trunc(
numpy.core.typeDict
numpy.core.typeNA
numpy.core.typecodes
numpy.core.ubyte(
numpy.core.ufunc(
numpy.core.uint(
numpy.core.uint0(
numpy.core.uint16(
numpy.core.uint32(
numpy.core.uint64(
numpy.core.uint8(
numpy.core.uintc(
numpy.core.uintp(
numpy.core.ulonglong(
numpy.core.umath
numpy.core.unicode0(
numpy.core.unicode_(
numpy.core.unsignedinteger(
numpy.core.ushort(
numpy.core.var(
numpy.core.vdot(
numpy.core.void(
numpy.core.void0(
numpy.core.vstack(
numpy.core.where(
numpy.core.zeros(
numpy.core.zeros_like(

--- from numpy import core ---
core.ALLOW_THREADS
core.BUFSIZE
core.CLIP
core.ComplexWarning(
core.ERR_CALL
core.ERR_DEFAULT
core.ERR_DEFAULT2
core.ERR_IGNORE
core.ERR_LOG
core.ERR_PRINT
core.ERR_RAISE
core.ERR_WARN
core.FLOATING_POINT_SUPPORT
core.FPE_DIVIDEBYZERO
core.FPE_INVALID
core.FPE_OVERFLOW
core.FPE_UNDERFLOW
core.False_
core.Inf
core.Infinity
core.MAXDIMS
core.MachAr(
core.NAN
core.NINF
core.NZERO
core.NaN
core.PINF
core.PZERO
core.RAISE
core.SHIFT_DIVIDEBYZERO
core.SHIFT_INVALID
core.SHIFT_OVERFLOW
core.SHIFT_UNDERFLOW
core.ScalarType
core.Tester(
core.True_
core.UFUNC_BUFSIZE_DEFAULT
core.UFUNC_PYVALS_NAME
core.WRAP
core.__all__
core.__builtins__
core.__doc__
core.__file__
core.__name__
core.__package__
core.__path__
core.__version__
core.__warningregistry__
core._internal
core._sort
core.abs(
core.absolute(
core.add(
core.alen(
core.all(
core.allclose(
core.alltrue(
core.alterdot(
core.amax(
core.amin(
core.any(
core.arange(
core.arccos(
core.arccosh(
core.arcsin(
core.arcsinh(
core.arctan(
core.arctan2(
core.arctanh(
core.argmax(
core.argmin(
core.argsort(
core.argwhere(
core.around(
core.array(
core.array2string(
core.array_equal(
core.array_equiv(
core.array_repr(
core.array_str(
core.arrayprint
core.asanyarray(
core.asarray(
core.ascontiguousarray(
core.asfortranarray(
core.atleast_1d(
core.atleast_2d(
core.atleast_3d(
core.base_repr(
core.bench(
core.binary_repr(
core.bitwise_and(
core.bitwise_not(
core.bitwise_or(
core.bitwise_xor(
core.bool8(
core.bool_(
core.broadcast(
core.byte(
core.bytes_(
core.can_cast(
core.cast
core.cdouble(
core.ceil(
core.cfloat(
core.char
core.character(
core.chararray(
core.choose(
core.clip(
core.clongdouble(
core.clongfloat(
core.compare_chararrays(
core.complex128(
core.complex192(
core.complex64(
core.complex_(
core.complexfloating(
core.compress(
core.concatenate(
core.conj(
core.conjugate(
core.convolve(
core.copysign(
core.correlate(
core.cos(
core.cosh(
core.count_nonzero(
core.cross(
core.csingle(
core.cumprod(
core.cumproduct(
core.cumsum(
core.datetime64(
core.datetime_(
core.defchararray
core.deg2rad(
core.degrees(
core.diagonal(
core.divide(
core.dot(
core.double(
core.dtype(
core.e
core.einsum(
core.empty(
core.empty_like(
core.equal(
core.errstate(
core.exp(
core.exp2(
core.expm1(
core.fabs(
core.fastCopyAndTranspose(
core.find_common_type(
core.finfo(
core.flatiter(
core.flatnonzero(
core.flexible(
core.float16(
core.float32(
core.float64(
core.float96(
core.float_(
core.floating(
core.floor(
core.floor_divide(
core.fmax(
core.fmin(
core.fmod(
core.format_parser(
core.frexp(
core.frombuffer(
core.fromfile(
core.fromfunction(
core.fromiter(
core.fromnumeric
core.frompyfunc(
core.fromstring(
core.function_base
core.generic(
core.get_printoptions(
core.getbuffer(
core.getbufsize(
core.geterr(
core.geterrcall(
core.geterrobj(
core.getlimits
core.greater(
core.greater_equal(
core.half(
core.hstack(
core.hypot(
core.identity(
core.iinfo(
core.indices(
core.inexact(
core.inf
core.info
core.infty
core.inner(
core.int0(
core.int16(
core.int32(
core.int64(
core.int8(
core.int_(
core.int_asbuffer(
core.intc(
core.integer(
core.intp(
core.invert(
core.isfinite(
core.isfortran(
core.isinf(
core.isnan(
core.isscalar(
core.issctype(
core.issubdtype(
core.ldexp(
core.left_shift(
core.less(
core.less_equal(
core.lexsort(
core.linspace(
core.little_endian
core.load(
core.loads(
core.log(
core.log10(
core.log1p(
core.log2(
core.logaddexp(
core.logaddexp2(
core.logical_and(
core.logical_not(
core.logical_or(
core.logical_xor(
core.logspace(
core.longcomplex(
core.longdouble(
core.longfloat(
core.longlong(
core.machar
core.max(
core.maximum(
core.maximum_sctype(
core.mean(
core.memmap(
core.min(
core.min_scalar_type(
core.minimum(
core.mod(
core.modf(
core.multiarray
core.multiply(
core.nan
core.nbytes
core.ndarray(
core.ndim(
core.nditer(
core.negative(
core.nested_iters(
core.newaxis
core.newbuffer(
core.nextafter(
core.nonzero(
core.not_equal(
core.number(
core.numeric
core.numerictypes
core.obj2sctype(
core.object0(
core.object_(
core.ones(
core.ones_like(
core.outer(
core.pi
core.power(
core.prod(
core.product(
core.promote_types(
core.ptp(
core.put(
core.putmask(
core.rad2deg(
core.radians(
core.rank(
core.ravel(
core.rec
core.recarray(
core.reciprocal(
core.record(
core.records
core.remainder(
core.repeat(
core.require(
core.reshape(
core.resize(
core.restoredot(
core.result_type(
core.right_shift(
core.rint(
core.roll(
core.rollaxis(
core.round(
core.round_(
core.scalarmath
core.sctype2char(
core.sctypeDict
core.sctypeNA
core.sctypes
core.searchsorted(
core.set_numeric_ops(
core.set_printoptions(
core.set_string_function(
core.setbufsize(
core.seterr(
core.seterrcall(
core.seterrobj(
core.shape(
core.shape_base
core.short(
core.sign(
core.signbit(
core.signedinteger(
core.sin(
core.single(
core.singlecomplex(
core.sinh(
core.size(
core.sometrue(
core.sort(
core.spacing(
core.sqrt(
core.square(
core.squeeze(
core.std(
core.str_(
core.string0(
core.string_(
core.subtract(
core.sum(
core.swapaxes(
core.take(
core.tan(
core.tanh(
core.tensordot(
core.test(
core.timedelta64(
core.timedelta_(
core.timeinteger(
core.trace(
core.transpose(
core.true_divide(
core.trunc(
core.typeDict
core.typeNA
core.typecodes
core.ubyte(
core.ufunc(
core.uint(
core.uint0(
core.uint16(
core.uint32(
core.uint64(
core.uint8(
core.uintc(
core.uintp(
core.ulonglong(
core.umath
core.unicode0(
core.unicode_(
core.unsignedinteger(
core.ushort(
core.var(
core.vdot(
core.void(
core.void0(
core.vstack(
core.where(
core.zeros(
core.zeros_like(

--- from numpy.core import * ---
__warningregistry__
_internal
_sort
arrayprint
defchararray
fromnumeric
function_base
getlimits
info
machar
multiarray
numeric
numerictypes
records
scalarmath
shape_base
umath

--- import numpy.core._internal ---
numpy.core._internal.__builtins__
numpy.core._internal.__doc__
numpy.core._internal.__file__
numpy.core._internal.__name__
numpy.core._internal.__package__
numpy.core._internal._add_trailing_padding(
numpy.core._internal._array_descr(
numpy.core._internal._commastring(
numpy.core._internal._convorder
numpy.core._internal._ctypes(
numpy.core._internal._datetimestring(
numpy.core._internal._dtype_from_pep3118(
numpy.core._internal._gcd(
numpy.core._internal._getintp_ctype(
numpy.core._internal._index_fields(
numpy.core._internal._makenames_list(
numpy.core._internal._missing_ctypes(
numpy.core._internal._nbo
numpy.core._internal._newnames(
numpy.core._internal._pep3118_native_map
numpy.core._internal._pep3118_native_typechars
numpy.core._internal._pep3118_standard_map
numpy.core._internal._pep3118_standard_typechars
numpy.core._internal._prod(
numpy.core._internal._reconstruct(
numpy.core._internal._split(
numpy.core._internal._usefields(
numpy.core._internal.asbytes(
numpy.core._internal.bytes(
numpy.core._internal.format_datetime
numpy.core._internal.format_re
numpy.core._internal.re
numpy.core._internal.sys
numpy.core._internal.warnings

--- from numpy.core import _internal ---
_internal.__builtins__
_internal.__doc__
_internal.__file__
_internal.__name__
_internal.__package__
_internal._add_trailing_padding(
_internal._array_descr(
_internal._commastring(
_internal._convorder
_internal._ctypes(
_internal._datetimestring(
_internal._dtype_from_pep3118(
_internal._gcd(
_internal._getintp_ctype(
_internal._index_fields(
_internal._makenames_list(
_internal._missing_ctypes(
_internal._nbo
_internal._newnames(
_internal._pep3118_native_map
_internal._pep3118_native_typechars
_internal._pep3118_standard_map
_internal._pep3118_standard_typechars
_internal._prod(
_internal._reconstruct(
_internal._split(
_internal._usefields(
_internal.asbytes(
_internal.bytes(
_internal.format_datetime
_internal.format_re
_internal.re
_internal.sys
_internal.warnings

--- from numpy.core._internal import * ---
_add_trailing_padding(
_array_descr(
_commastring(
_convorder
_ctypes(
_datetimestring(
_dtype_from_pep3118(
_gcd(
_getintp_ctype(
_index_fields(
_makenames_list(
_missing_ctypes(
_nbo
_newnames(
_pep3118_native_map
_pep3118_native_typechars
_pep3118_standard_map
_pep3118_standard_typechars
_prod(
_reconstruct(
_split(
_usefields(
format_datetime
format_re

--- import numpy.core._sort ---
numpy.core._sort.__doc__
numpy.core._sort.__file__
numpy.core._sort.__name__
numpy.core._sort.__package__

--- from numpy.core import _sort ---
_sort.__doc__
_sort.__file__
_sort.__name__
_sort.__package__

--- from numpy.core._sort import * ---

--- import numpy.core.arrayprint ---
numpy.core.arrayprint.ComplexFormat(
numpy.core.arrayprint.FloatFormat(
numpy.core.arrayprint.LongComplexFormat(
numpy.core.arrayprint.LongFloatFormat(
numpy.core.arrayprint._MAXINT
numpy.core.arrayprint._MININT
numpy.core.arrayprint.__all__
numpy.core.arrayprint.__builtins__
numpy.core.arrayprint.__doc__
numpy.core.arrayprint.__docformat__
numpy.core.arrayprint.__file__
numpy.core.arrayprint.__name__
numpy.core.arrayprint.__package__
numpy.core.arrayprint._array2string(
numpy.core.arrayprint._boolFormatter(
numpy.core.arrayprint._convert_arrays(
numpy.core.arrayprint._digits(
numpy.core.arrayprint._extendLine(
numpy.core.arrayprint._float_output_precision
numpy.core.arrayprint._float_output_suppress_small
numpy.core.arrayprint._formatArray(
numpy.core.arrayprint._formatInteger(
numpy.core.arrayprint._inf_str
numpy.core.arrayprint._leading_trailing(
numpy.core.arrayprint._line_width
numpy.core.arrayprint._nan_str
numpy.core.arrayprint._nt
numpy.core.arrayprint._summaryEdgeItems
numpy.core.arrayprint._summaryThreshold
numpy.core.arrayprint.absolute(
numpy.core.arrayprint.array2string(
numpy.core.arrayprint.format_longfloat(
numpy.core.arrayprint.get_printoptions(
numpy.core.arrayprint.isinf(
numpy.core.arrayprint.isnan(
numpy.core.arrayprint.maximum(
numpy.core.arrayprint.minimum(
numpy.core.arrayprint.not_equal(
numpy.core.arrayprint.product(
numpy.core.arrayprint.ravel(
numpy.core.arrayprint.set_printoptions(
numpy.core.arrayprint.sys

--- from numpy.core import arrayprint ---
arrayprint.ComplexFormat(
arrayprint.FloatFormat(
arrayprint.LongComplexFormat(
arrayprint.LongFloatFormat(
arrayprint._MAXINT
arrayprint._MININT
arrayprint.__all__
arrayprint.__builtins__
arrayprint.__doc__
arrayprint.__docformat__
arrayprint.__file__
arrayprint.__name__
arrayprint.__package__
arrayprint._array2string(
arrayprint._boolFormatter(
arrayprint._convert_arrays(
arrayprint._digits(
arrayprint._extendLine(
arrayprint._float_output_precision
arrayprint._float_output_suppress_small
arrayprint._formatArray(
arrayprint._formatInteger(
arrayprint._inf_str
arrayprint._leading_trailing(
arrayprint._line_width
arrayprint._nan_str
arrayprint._nt
arrayprint._summaryEdgeItems
arrayprint._summaryThreshold
arrayprint.absolute(
arrayprint.array2string(
arrayprint.format_longfloat(
arrayprint.get_printoptions(
arrayprint.isinf(
arrayprint.isnan(
arrayprint.maximum(
arrayprint.minimum(
arrayprint.not_equal(
arrayprint.product(
arrayprint.ravel(
arrayprint.set_printoptions(
arrayprint.sys

--- from numpy.core.arrayprint import * ---
ComplexFormat(
FloatFormat(
LongComplexFormat(
LongFloatFormat(
_MAXINT
_MININT
__docformat__
_array2string(
_boolFormatter(
_convert_arrays(
_digits(
_extendLine(
_float_output_precision
_float_output_suppress_small
_formatArray(
_formatInteger(
_inf_str
_leading_trailing(
_line_width
_nan_str
_nt
_summaryEdgeItems
_summaryThreshold
format_longfloat(

--- import numpy.core.defchararray ---
numpy.core.defchararray.__all__
numpy.core.defchararray.__builtins__
numpy.core.defchararray.__doc__
numpy.core.defchararray.__file__
numpy.core.defchararray.__name__
numpy.core.defchararray.__package__
numpy.core.defchararray._bytes(
numpy.core.defchararray._clean_args(
numpy.core.defchararray._get_num_chars(
numpy.core.defchararray._globalvar
numpy.core.defchararray._len(
numpy.core.defchararray._to_string_or_unicode_array(
numpy.core.defchararray._unicode(
numpy.core.defchararray._use_unicode(
numpy.core.defchararray._vec_string(
numpy.core.defchararray.add(
numpy.core.defchararray.array(
numpy.core.defchararray.asarray(
numpy.core.defchararray.asbytes(
numpy.core.defchararray.bool_(
numpy.core.defchararray.capitalize(
numpy.core.defchararray.center(
numpy.core.defchararray.character(
numpy.core.defchararray.chararray(
numpy.core.defchararray.compare_chararrays(
numpy.core.defchararray.count(
numpy.core.defchararray.decode(
numpy.core.defchararray.encode(
numpy.core.defchararray.endswith(
numpy.core.defchararray.equal(
numpy.core.defchararray.expandtabs(
numpy.core.defchararray.find(
numpy.core.defchararray.greater(
numpy.core.defchararray.greater_equal(
numpy.core.defchararray.index(
numpy.core.defchararray.integer(
numpy.core.defchararray.isalnum(
numpy.core.defchararray.isalpha(
numpy.core.defchararray.isdecimal(
numpy.core.defchararray.isdigit(
numpy.core.defchararray.islower(
numpy.core.defchararray.isnumeric(
numpy.core.defchararray.isspace(
numpy.core.defchararray.istitle(
numpy.core.defchararray.isupper(
numpy.core.defchararray.join(
numpy.core.defchararray.less(
numpy.core.defchararray.less_equal(
numpy.core.defchararray.ljust(
numpy.core.defchararray.lower(
numpy.core.defchararray.lstrip(
numpy.core.defchararray.mod(
numpy.core.defchararray.multiply(
numpy.core.defchararray.narray(
numpy.core.defchararray.ndarray(
numpy.core.defchararray.not_equal(
numpy.core.defchararray.numpy
numpy.core.defchararray.object_(
numpy.core.defchararray.partition(
numpy.core.defchararray.replace(
numpy.core.defchararray.rfind(
numpy.core.defchararray.rindex(
numpy.core.defchararray.rjust(
numpy.core.defchararray.rpartition(
numpy.core.defchararray.rsplit(
numpy.core.defchararray.rstrip(
numpy.core.defchararray.split(
numpy.core.defchararray.splitlines(
numpy.core.defchararray.startswith(
numpy.core.defchararray.str_len(
numpy.core.defchararray.string_(
numpy.core.defchararray.strip(
numpy.core.defchararray.swapcase(
numpy.core.defchararray.sys
numpy.core.defchararray.title(
numpy.core.defchararray.translate(
numpy.core.defchararray.unicode_(
numpy.core.defchararray.upper(
numpy.core.defchararray.zfill(

--- from numpy.core import defchararray ---
defchararray.__all__
defchararray.__builtins__
defchararray.__doc__
defchararray.__file__
defchararray.__name__
defchararray.__package__
defchararray._bytes(
defchararray._clean_args(
defchararray._get_num_chars(
defchararray._globalvar
defchararray._len(
defchararray._to_string_or_unicode_array(
defchararray._unicode(
defchararray._use_unicode(
defchararray._vec_string(
defchararray.add(
defchararray.array(
defchararray.asarray(
defchararray.asbytes(
defchararray.bool_(
defchararray.capitalize(
defchararray.center(
defchararray.character(
defchararray.chararray(
defchararray.compare_chararrays(
defchararray.count(
defchararray.decode(
defchararray.encode(
defchararray.endswith(
defchararray.equal(
defchararray.expandtabs(
defchararray.find(
defchararray.greater(
defchararray.greater_equal(
defchararray.index(
defchararray.integer(
defchararray.isalnum(
defchararray.isalpha(
defchararray.isdecimal(
defchararray.isdigit(
defchararray.islower(
defchararray.isnumeric(
defchararray.isspace(
defchararray.istitle(
defchararray.isupper(
defchararray.join(
defchararray.less(
defchararray.less_equal(
defchararray.ljust(
defchararray.lower(
defchararray.lstrip(
defchararray.mod(
defchararray.multiply(
defchararray.narray(
defchararray.ndarray(
defchararray.not_equal(
defchararray.numpy
defchararray.object_(
defchararray.partition(
defchararray.replace(
defchararray.rfind(
defchararray.rindex(
defchararray.rjust(
defchararray.rpartition(
defchararray.rsplit(
defchararray.rstrip(
defchararray.split(
defchararray.splitlines(
defchararray.startswith(
defchararray.str_len(
defchararray.string_(
defchararray.strip(
defchararray.swapcase(
defchararray.sys
defchararray.title(
defchararray.translate(
defchararray.unicode_(
defchararray.upper(
defchararray.zfill(

--- from numpy.core.defchararray import * ---
_bytes(
_clean_args(
_get_num_chars(
_globalvar
_len(
_to_string_or_unicode_array(
_unicode(
_use_unicode(
_vec_string(
capitalize(
center(
count(
decode(
encode(
endswith(
expandtabs(
find(
index(
isalnum(
isalpha(
isdecimal(
isdigit(
islower(
isnumeric(
isspace(
istitle(
isupper(
join(
ljust(
lower(
lstrip(
narray(
partition(
replace(
rfind(
rindex(
rjust(
rpartition(
rsplit(
rstrip(
splitlines(
startswith(
str_len(
strip(
swapcase(
title(
translate(
upper(
zfill(

--- import numpy.core.fromnumeric ---
numpy.core.fromnumeric.__all__
numpy.core.fromnumeric.__builtins__
numpy.core.fromnumeric.__doc__
numpy.core.fromnumeric.__docformat__
numpy.core.fromnumeric.__file__
numpy.core.fromnumeric.__name__
numpy.core.fromnumeric.__package__
numpy.core.fromnumeric._dt_(
numpy.core.fromnumeric._gentype(
numpy.core.fromnumeric._sum_(
numpy.core.fromnumeric._wrapit(
numpy.core.fromnumeric.alen(
numpy.core.fromnumeric.all(
numpy.core.fromnumeric.alltrue(
numpy.core.fromnumeric.amax(
numpy.core.fromnumeric.amin(
numpy.core.fromnumeric.any(
numpy.core.fromnumeric.argmax(
numpy.core.fromnumeric.argmin(
numpy.core.fromnumeric.argsort(
numpy.core.fromnumeric.around(
numpy.core.fromnumeric.array(
numpy.core.fromnumeric.asanyarray(
numpy.core.fromnumeric.asarray(
numpy.core.fromnumeric.choose(
numpy.core.fromnumeric.clip(
numpy.core.fromnumeric.compress(
numpy.core.fromnumeric.concatenate(
numpy.core.fromnumeric.cumprod(
numpy.core.fromnumeric.cumproduct(
numpy.core.fromnumeric.cumsum(
numpy.core.fromnumeric.diagonal(
numpy.core.fromnumeric.mean(
numpy.core.fromnumeric.mu
numpy.core.fromnumeric.ndim(
numpy.core.fromnumeric.nonzero(
numpy.core.fromnumeric.nt
numpy.core.fromnumeric.prod(
numpy.core.fromnumeric.product(
numpy.core.fromnumeric.ptp(
numpy.core.fromnumeric.put(
numpy.core.fromnumeric.rank(
numpy.core.fromnumeric.ravel(
numpy.core.fromnumeric.repeat(
numpy.core.fromnumeric.reshape(
numpy.core.fromnumeric.resize(
numpy.core.fromnumeric.round_(
numpy.core.fromnumeric.searchsorted(
numpy.core.fromnumeric.shape(
numpy.core.fromnumeric.size(
numpy.core.fromnumeric.sometrue(
numpy.core.fromnumeric.sort(
numpy.core.fromnumeric.squeeze(
numpy.core.fromnumeric.std(
numpy.core.fromnumeric.sum(
numpy.core.fromnumeric.swapaxes(
numpy.core.fromnumeric.take(
numpy.core.fromnumeric.trace(
numpy.core.fromnumeric.transpose(
numpy.core.fromnumeric.types
numpy.core.fromnumeric.um
numpy.core.fromnumeric.var(

--- from numpy.core import fromnumeric ---
fromnumeric.__all__
fromnumeric.__builtins__
fromnumeric.__doc__
fromnumeric.__docformat__
fromnumeric.__file__
fromnumeric.__name__
fromnumeric.__package__
fromnumeric._dt_(
fromnumeric._gentype(
fromnumeric._sum_(
fromnumeric._wrapit(
fromnumeric.alen(
fromnumeric.all(
fromnumeric.alltrue(
fromnumeric.amax(
fromnumeric.amin(
fromnumeric.any(
fromnumeric.argmax(
fromnumeric.argmin(
fromnumeric.argsort(
fromnumeric.around(
fromnumeric.array(
fromnumeric.asanyarray(
fromnumeric.asarray(
fromnumeric.choose(
fromnumeric.clip(
fromnumeric.compress(
fromnumeric.concatenate(
fromnumeric.cumprod(
fromnumeric.cumproduct(
fromnumeric.cumsum(
fromnumeric.diagonal(
fromnumeric.mean(
fromnumeric.mu
fromnumeric.ndim(
fromnumeric.nonzero(
fromnumeric.nt
fromnumeric.prod(
fromnumeric.product(
fromnumeric.ptp(
fromnumeric.put(
fromnumeric.rank(
fromnumeric.ravel(
fromnumeric.repeat(
fromnumeric.reshape(
fromnumeric.resize(
fromnumeric.round_(
fromnumeric.searchsorted(
fromnumeric.shape(
fromnumeric.size(
fromnumeric.sometrue(
fromnumeric.sort(
fromnumeric.squeeze(
fromnumeric.std(
fromnumeric.sum(
fromnumeric.swapaxes(
fromnumeric.take(
fromnumeric.trace(
fromnumeric.transpose(
fromnumeric.types
fromnumeric.um
fromnumeric.var(

--- from numpy.core.fromnumeric import * ---
_dt_(
_gentype(
_sum_(
_wrapit(
mu
nt
um

--- import numpy.core.function_base ---
numpy.core.function_base.__all__
numpy.core.function_base.__builtins__
numpy.core.function_base.__doc__
numpy.core.function_base.__file__
numpy.core.function_base.__name__
numpy.core.function_base.__package__
numpy.core.function_base._nx
numpy.core.function_base.array(
numpy.core.function_base.linspace(
numpy.core.function_base.logspace(

--- from numpy.core import function_base ---
function_base.__all__
function_base.__builtins__
function_base.__doc__
function_base.__file__
function_base.__name__
function_base.__package__
function_base._nx
function_base.array(
function_base.linspace(
function_base.logspace(

--- from numpy.core.function_base import * ---
_nx

--- import numpy.core.getlimits ---
numpy.core.getlimits.MachAr(
numpy.core.getlimits.__all__
numpy.core.getlimits.__builtins__
numpy.core.getlimits.__doc__
numpy.core.getlimits.__file__
numpy.core.getlimits.__name__
numpy.core.getlimits.__package__
numpy.core.getlimits._convert_to_float
numpy.core.getlimits._frz(
numpy.core.getlimits.array(
numpy.core.getlimits.finfo(
numpy.core.getlimits.iinfo(
numpy.core.getlimits.ntypes
numpy.core.getlimits.numeric

--- from numpy.core import getlimits ---
getlimits.MachAr(
getlimits.__all__
getlimits.__builtins__
getlimits.__doc__
getlimits.__file__
getlimits.__name__
getlimits.__package__
getlimits._convert_to_float
getlimits._frz(
getlimits.array(
getlimits.finfo(
getlimits.iinfo(
getlimits.ntypes
getlimits.numeric

--- from numpy.core.getlimits import * ---
_convert_to_float
_frz(
ntypes

--- import numpy.core.info ---
numpy.core.info.__builtins__
numpy.core.info.__doc__
numpy.core.info.__file__
numpy.core.info.__name__
numpy.core.info.__package__
numpy.core.info.depends
numpy.core.info.global_symbols

--- from numpy.core import info ---
info.__builtins__
info.__doc__
info.__file__
info.__name__
info.__package__
info.depends
info.global_symbols

--- from numpy.core.info import * ---
depends
global_symbols

--- import numpy.core.machar ---
numpy.core.machar.MachAr(
numpy.core.machar.__all__
numpy.core.machar.__builtins__
numpy.core.machar.__doc__
numpy.core.machar.__file__
numpy.core.machar.__name__
numpy.core.machar.__package__
numpy.core.machar.any(
numpy.core.machar.seterr(

--- from numpy.core import machar ---
machar.MachAr(
machar.__all__
machar.__builtins__
machar.__doc__
machar.__file__
machar.__name__
machar.__package__
machar.any(
machar.seterr(

--- from numpy.core.machar import * ---

--- import numpy.core.multiarray ---
numpy.core.multiarray.ALLOW_THREADS
numpy.core.multiarray.BUFSIZE
numpy.core.multiarray.CLIP
numpy.core.multiarray.DATETIMEUNITS
numpy.core.multiarray.ITEM_HASOBJECT
numpy.core.multiarray.ITEM_IS_POINTER
numpy.core.multiarray.LIST_PICKLE
numpy.core.multiarray.MAXDIMS
numpy.core.multiarray.METADATA_DTSTR
numpy.core.multiarray.NEEDS_INIT
numpy.core.multiarray.NEEDS_PYAPI
numpy.core.multiarray.RAISE
numpy.core.multiarray.USE_GETITEM
numpy.core.multiarray.USE_SETITEM
numpy.core.multiarray.WRAP
numpy.core.multiarray._ARRAY_API
numpy.core.multiarray.__doc__
numpy.core.multiarray.__file__
numpy.core.multiarray.__name__
numpy.core.multiarray.__package__
numpy.core.multiarray.__version__
numpy.core.multiarray._fastCopyAndTranspose(
numpy.core.multiarray._flagdict
numpy.core.multiarray._get_ndarray_c_version(
numpy.core.multiarray._reconstruct(
numpy.core.multiarray._vec_string(
numpy.core.multiarray.arange(
numpy.core.multiarray.array(
numpy.core.multiarray.broadcast(
numpy.core.multiarray.can_cast(
numpy.core.multiarray.compare_chararrays(
numpy.core.multiarray.concatenate(
numpy.core.multiarray.correlate(
numpy.core.multiarray.correlate2(
numpy.core.multiarray.count_nonzero(
numpy.core.multiarray.dot(
numpy.core.multiarray.dtype(
numpy.core.multiarray.einsum(
numpy.core.multiarray.empty(
numpy.core.multiarray.empty_like(
numpy.core.multiarray.error(
numpy.core.multiarray.flagsobj(
numpy.core.multiarray.flatiter(
numpy.core.multiarray.format_longfloat(
numpy.core.multiarray.frombuffer(
numpy.core.multiarray.fromfile(
numpy.core.multiarray.fromiter(
numpy.core.multiarray.fromstring(
numpy.core.multiarray.getbuffer(
numpy.core.multiarray.inner(
numpy.core.multiarray.int_asbuffer(
numpy.core.multiarray.lexsort(
numpy.core.multiarray.min_scalar_type(
numpy.core.multiarray.ndarray(
numpy.core.multiarray.nditer(
numpy.core.multiarray.nested_iters(
numpy.core.multiarray.newbuffer(
numpy.core.multiarray.promote_types(
numpy.core.multiarray.putmask(
numpy.core.multiarray.result_type(
numpy.core.multiarray.scalar(
numpy.core.multiarray.set_datetimeparse_function(
numpy.core.multiarray.set_numeric_ops(
numpy.core.multiarray.set_string_function(
numpy.core.multiarray.set_typeDict(
numpy.core.multiarray.test_interrupt(
numpy.core.multiarray.typeinfo
numpy.core.multiarray.where(
numpy.core.multiarray.zeros(

--- from numpy.core import multiarray ---
multiarray.ALLOW_THREADS
multiarray.BUFSIZE
multiarray.CLIP
multiarray.DATETIMEUNITS
multiarray.ITEM_HASOBJECT
multiarray.ITEM_IS_POINTER
multiarray.LIST_PICKLE
multiarray.MAXDIMS
multiarray.METADATA_DTSTR
multiarray.NEEDS_INIT
multiarray.NEEDS_PYAPI
multiarray.RAISE
multiarray.USE_GETITEM
multiarray.USE_SETITEM
multiarray.WRAP
multiarray._ARRAY_API
multiarray.__doc__
multiarray.__file__
multiarray.__name__
multiarray.__package__
multiarray.__version__
multiarray._fastCopyAndTranspose(
multiarray._flagdict
multiarray._get_ndarray_c_version(
multiarray._reconstruct(
multiarray._vec_string(
multiarray.arange(
multiarray.array(
multiarray.broadcast(
multiarray.can_cast(
multiarray.compare_chararrays(
multiarray.concatenate(
multiarray.correlate(
multiarray.correlate2(
multiarray.count_nonzero(
multiarray.dot(
multiarray.dtype(
multiarray.einsum(
multiarray.empty(
multiarray.empty_like(
multiarray.error(
multiarray.flagsobj(
multiarray.flatiter(
multiarray.format_longfloat(
multiarray.frombuffer(
multiarray.fromfile(
multiarray.fromiter(
multiarray.fromstring(
multiarray.getbuffer(
multiarray.inner(
multiarray.int_asbuffer(
multiarray.lexsort(
multiarray.min_scalar_type(
multiarray.ndarray(
multiarray.nditer(
multiarray.nested_iters(
multiarray.newbuffer(
multiarray.promote_types(
multiarray.putmask(
multiarray.result_type(
multiarray.scalar(
multiarray.set_datetimeparse_function(
multiarray.set_numeric_ops(
multiarray.set_string_function(
multiarray.set_typeDict(
multiarray.test_interrupt(
multiarray.typeinfo
multiarray.where(
multiarray.zeros(

--- from numpy.core.multiarray import * ---
DATETIMEUNITS
ITEM_HASOBJECT
ITEM_IS_POINTER
LIST_PICKLE
METADATA_DTSTR
NEEDS_INIT
NEEDS_PYAPI
USE_GETITEM
USE_SETITEM
_ARRAY_API
_fastCopyAndTranspose(
_flagdict
_get_ndarray_c_version(
correlate2(
error(
flagsobj(
scalar(
set_datetimeparse_function(
set_typeDict(
test_interrupt(
typeinfo

--- import numpy.core.numeric ---
numpy.core.numeric.ALLOW_THREADS
numpy.core.numeric.BUFSIZE
numpy.core.numeric.CLIP
numpy.core.numeric.ComplexWarning(
numpy.core.numeric.ERR_CALL
numpy.core.numeric.ERR_DEFAULT
numpy.core.numeric.ERR_DEFAULT2
numpy.core.numeric.ERR_IGNORE
numpy.core.numeric.ERR_LOG
numpy.core.numeric.ERR_PRINT
numpy.core.numeric.ERR_RAISE
numpy.core.numeric.ERR_WARN
numpy.core.numeric.FLOATING_POINT_SUPPORT
numpy.core.numeric.FPE_DIVIDEBYZERO
numpy.core.numeric.FPE_INVALID
numpy.core.numeric.FPE_OVERFLOW
numpy.core.numeric.FPE_UNDERFLOW
numpy.core.numeric.False_
numpy.core.numeric.Inf
numpy.core.numeric.Infinity
numpy.core.numeric.MAXDIMS
numpy.core.numeric.NAN
numpy.core.numeric.NINF
numpy.core.numeric.NZERO
numpy.core.numeric.NaN
numpy.core.numeric.PINF
numpy.core.numeric.PZERO
numpy.core.numeric.RAISE
numpy.core.numeric.SHIFT_DIVIDEBYZERO
numpy.core.numeric.SHIFT_INVALID
numpy.core.numeric.SHIFT_OVERFLOW
numpy.core.numeric.SHIFT_UNDERFLOW
numpy.core.numeric.ScalarType
numpy.core.numeric.True_
numpy.core.numeric.UFUNC_BUFSIZE_DEFAULT
numpy.core.numeric.UFUNC_PYVALS_NAME
numpy.core.numeric.WRAP
numpy.core.numeric._Unspecified
numpy.core.numeric.__all__
numpy.core.numeric.__builtins__
numpy.core.numeric.__doc__
numpy.core.numeric.__file__
numpy.core.numeric.__name__
numpy.core.numeric.__package__
numpy.core.numeric._cload(
numpy.core.numeric._errdict
numpy.core.numeric._errdict_rev
numpy.core.numeric._file(
numpy.core.numeric._lkup
numpy.core.numeric._maketup(
numpy.core.numeric._mode_from_name(
numpy.core.numeric._mode_from_name_dict
numpy.core.numeric._move_axis_to_0(
numpy.core.numeric._setdef(
numpy.core.numeric._typelessdata
numpy.core.numeric._unspecified(
numpy.core.numeric.absolute(
numpy.core.numeric.add(
numpy.core.numeric.alen(
numpy.core.numeric.all(
numpy.core.numeric.allclose(
numpy.core.numeric.alltrue(
numpy.core.numeric.alterdot(
numpy.core.numeric.amax(
numpy.core.numeric.amin(
numpy.core.numeric.any(
numpy.core.numeric.arange(
numpy.core.numeric.arccos(
numpy.core.numeric.arccosh(
numpy.core.numeric.arcsin(
numpy.core.numeric.arcsinh(
numpy.core.numeric.arctan(
numpy.core.numeric.arctan2(
numpy.core.numeric.arctanh(
numpy.core.numeric.argmax(
numpy.core.numeric.argmin(
numpy.core.numeric.argsort(
numpy.core.numeric.argwhere(
numpy.core.numeric.around(
numpy.core.numeric.array(
numpy.core.numeric.array2string(
numpy.core.numeric.array_equal(
numpy.core.numeric.array_equiv(
numpy.core.numeric.array_repr(
numpy.core.numeric.array_str(
numpy.core.numeric.asanyarray(
numpy.core.numeric.asarray(
numpy.core.numeric.ascontiguousarray(
numpy.core.numeric.asfortranarray(
numpy.core.numeric.base_repr(
numpy.core.numeric.binary_repr(
numpy.core.numeric.bitwise_and(
numpy.core.numeric.bitwise_not(
numpy.core.numeric.bitwise_or(
numpy.core.numeric.bitwise_xor(
numpy.core.numeric.bool8(
numpy.core.numeric.bool_(
numpy.core.numeric.broadcast(
numpy.core.numeric.byte(
numpy.core.numeric.bytes_(
numpy.core.numeric.can_cast(
numpy.core.numeric.cast
numpy.core.numeric.cdouble(
numpy.core.numeric.ceil(
numpy.core.numeric.cfloat(
numpy.core.numeric.character(
numpy.core.numeric.choose(
numpy.core.numeric.clip(
numpy.core.numeric.clongdouble(
numpy.core.numeric.clongfloat(
numpy.core.numeric.compare_chararrays(
numpy.core.numeric.complex128(
numpy.core.numeric.complex192(
numpy.core.numeric.complex64(
numpy.core.numeric.complex_(
numpy.core.numeric.complexfloating(
numpy.core.numeric.compress(
numpy.core.numeric.concatenate(
numpy.core.numeric.conj(
numpy.core.numeric.conjugate(
numpy.core.numeric.convolve(
numpy.core.numeric.copysign(
numpy.core.numeric.correlate(
numpy.core.numeric.cos(
numpy.core.numeric.cosh(
numpy.core.numeric.count_nonzero(
numpy.core.numeric.cross(
numpy.core.numeric.csingle(
numpy.core.numeric.cumprod(
numpy.core.numeric.cumproduct(
numpy.core.numeric.cumsum(
numpy.core.numeric.datetime64(
numpy.core.numeric.datetime_(
numpy.core.numeric.deg2rad(
numpy.core.numeric.degrees(
numpy.core.numeric.diagonal(
numpy.core.numeric.divide(
numpy.core.numeric.dot(
numpy.core.numeric.double(
numpy.core.numeric.dtype(
numpy.core.numeric.e
numpy.core.numeric.einsum(
numpy.core.numeric.empty(
numpy.core.numeric.empty_like(
numpy.core.numeric.equal(
numpy.core.numeric.errstate(
numpy.core.numeric.exp(
numpy.core.numeric.exp2(
numpy.core.numeric.expm1(
numpy.core.numeric.extend_all(
numpy.core.numeric.fabs(
numpy.core.numeric.fastCopyAndTranspose(
numpy.core.numeric.find_common_type(
numpy.core.numeric.flatiter(
numpy.core.numeric.flatnonzero(
numpy.core.numeric.flexible(
numpy.core.numeric.float16(
numpy.core.numeric.float32(
numpy.core.numeric.float64(
numpy.core.numeric.float96(
numpy.core.numeric.float_(
numpy.core.numeric.floating(
numpy.core.numeric.floor(
numpy.core.numeric.floor_divide(
numpy.core.numeric.fmax(
numpy.core.numeric.fmin(
numpy.core.numeric.fmod(
numpy.core.numeric.frexp(
numpy.core.numeric.frombuffer(
numpy.core.numeric.fromfile(
numpy.core.numeric.fromfunction(
numpy.core.numeric.fromiter(
numpy.core.numeric.fromnumeric
numpy.core.numeric.frompyfunc(
numpy.core.numeric.fromstring(
numpy.core.numeric.generic(
numpy.core.numeric.get_printoptions(
numpy.core.numeric.getbuffer(
numpy.core.numeric.getbufsize(
numpy.core.numeric.geterr(
numpy.core.numeric.geterrcall(
numpy.core.numeric.geterrobj(
numpy.core.numeric.greater(
numpy.core.numeric.greater_equal(
numpy.core.numeric.half(
numpy.core.numeric.hypot(
numpy.core.numeric.identity(
numpy.core.numeric.indices(
numpy.core.numeric.inexact(
numpy.core.numeric.inf
numpy.core.numeric.infty
numpy.core.numeric.inner(
numpy.core.numeric.int0(
numpy.core.numeric.int16(
numpy.core.numeric.int32(
numpy.core.numeric.int64(
numpy.core.numeric.int8(
numpy.core.numeric.int_(
numpy.core.numeric.int_asbuffer(
numpy.core.numeric.intc(
numpy.core.numeric.integer(
numpy.core.numeric.intp(
numpy.core.numeric.invert(
numpy.core.numeric.isfinite(
numpy.core.numeric.isfortran(
numpy.core.numeric.isinf(
numpy.core.numeric.isnan(
numpy.core.numeric.isscalar(
numpy.core.numeric.issctype(
numpy.core.numeric.issubdtype(
numpy.core.numeric.ldexp(
numpy.core.numeric.left_shift(
numpy.core.numeric.less(
numpy.core.numeric.less_equal(
numpy.core.numeric.lexsort(
numpy.core.numeric.little_endian
numpy.core.numeric.load(
numpy.core.numeric.loads(
numpy.core.numeric.log(
numpy.core.numeric.log10(
numpy.core.numeric.log1p(
numpy.core.numeric.log2(
numpy.core.numeric.logaddexp(
numpy.core.numeric.logaddexp2(
numpy.core.numeric.logical_and(
numpy.core.numeric.logical_not(
numpy.core.numeric.logical_or(
numpy.core.numeric.logical_xor(
numpy.core.numeric.longcomplex(
numpy.core.numeric.longdouble(
numpy.core.numeric.longfloat(
numpy.core.numeric.longlong(
numpy.core.numeric.maximum(
numpy.core.numeric.maximum_sctype(
numpy.core.numeric.mean(
numpy.core.numeric.min_scalar_type(
numpy.core.numeric.minimum(
numpy.core.numeric.mod(
numpy.core.numeric.modf(
numpy.core.numeric.multiarray
numpy.core.numeric.multiply(
numpy.core.numeric.nan
numpy.core.numeric.nbytes
numpy.core.numeric.ndarray(
numpy.core.numeric.ndim(
numpy.core.numeric.nditer(
numpy.core.numeric.negative(
numpy.core.numeric.nested_iters(
numpy.core.numeric.newaxis
numpy.core.numeric.newbuffer(
numpy.core.numeric.nextafter(
numpy.core.numeric.nonzero(
numpy.core.numeric.not_equal(
numpy.core.numeric.number(
numpy.core.numeric.numerictypes
numpy.core.numeric.obj2sctype(
numpy.core.numeric.object0(
numpy.core.numeric.object_(
numpy.core.numeric.ones(
numpy.core.numeric.ones_like(
numpy.core.numeric.outer(
numpy.core.numeric.pi
numpy.core.numeric.power(
numpy.core.numeric.prod(
numpy.core.numeric.product(
numpy.core.numeric.promote_types(
numpy.core.numeric.ptp(
numpy.core.numeric.put(
numpy.core.numeric.putmask(
numpy.core.numeric.rad2deg(
numpy.core.numeric.radians(
numpy.core.numeric.rank(
numpy.core.numeric.ravel(
numpy.core.numeric.reciprocal(
numpy.core.numeric.remainder(
numpy.core.numeric.repeat(
numpy.core.numeric.require(
numpy.core.numeric.reshape(
numpy.core.numeric.resize(
numpy.core.numeric.restoredot(
numpy.core.numeric.result_type(
numpy.core.numeric.right_shift(
numpy.core.numeric.rint(
numpy.core.numeric.roll(
numpy.core.numeric.rollaxis(
numpy.core.numeric.round_(
numpy.core.numeric.sctype2char(
numpy.core.numeric.sctypeDict
numpy.core.numeric.sctypeNA
numpy.core.numeric.sctypes
numpy.core.numeric.searchsorted(
numpy.core.numeric.set_numeric_ops(
numpy.core.numeric.set_printoptions(
numpy.core.numeric.set_string_function(
numpy.core.numeric.setbufsize(
numpy.core.numeric.seterr(
numpy.core.numeric.seterrcall(
numpy.core.numeric.seterrobj(
numpy.core.numeric.shape(
numpy.core.numeric.short(
numpy.core.numeric.sign(
numpy.core.numeric.signbit(
numpy.core.numeric.signedinteger(
numpy.core.numeric.sin(
numpy.core.numeric.single(
numpy.core.numeric.singlecomplex(
numpy.core.numeric.sinh(
numpy.core.numeric.size(
numpy.core.numeric.sometrue(
numpy.core.numeric.sort(
numpy.core.numeric.spacing(
numpy.core.numeric.sqrt(
numpy.core.numeric.square(
numpy.core.numeric.squeeze(
numpy.core.numeric.std(
numpy.core.numeric.str_(
numpy.core.numeric.string0(
numpy.core.numeric.string_(
numpy.core.numeric.subtract(
numpy.core.numeric.sum(
numpy.core.numeric.swapaxes(
numpy.core.numeric.sys
numpy.core.numeric.take(
numpy.core.numeric.tan(
numpy.core.numeric.tanh(
numpy.core.numeric.tensordot(
numpy.core.numeric.timedelta64(
numpy.core.numeric.timedelta_(
numpy.core.numeric.timeinteger(
numpy.core.numeric.trace(
numpy.core.numeric.transpose(
numpy.core.numeric.true_divide(
numpy.core.numeric.trunc(
numpy.core.numeric.typeDict
numpy.core.numeric.typeNA
numpy.core.numeric.typecodes
numpy.core.numeric.ubyte(
numpy.core.numeric.ufunc(
numpy.core.numeric.uint(
numpy.core.numeric.uint0(
numpy.core.numeric.uint16(
numpy.core.numeric.uint32(
numpy.core.numeric.uint64(
numpy.core.numeric.uint8(
numpy.core.numeric.uintc(
numpy.core.numeric.uintp(
numpy.core.numeric.ulonglong(
numpy.core.numeric.umath
numpy.core.numeric.unicode0(
numpy.core.numeric.unicode_(
numpy.core.numeric.unsignedinteger(
numpy.core.numeric.ushort(
numpy.core.numeric.var(
numpy.core.numeric.vdot(
numpy.core.numeric.void(
numpy.core.numeric.void0(
numpy.core.numeric.warnings
numpy.core.numeric.where(
numpy.core.numeric.zeros(
numpy.core.numeric.zeros_like(

--- from numpy.core import numeric ---
numeric.ALLOW_THREADS
numeric.BUFSIZE
numeric.CLIP
numeric.ComplexWarning(
numeric.ERR_CALL
numeric.ERR_DEFAULT
numeric.ERR_DEFAULT2
numeric.ERR_IGNORE
numeric.ERR_LOG
numeric.ERR_PRINT
numeric.ERR_RAISE
numeric.ERR_WARN
numeric.FLOATING_POINT_SUPPORT
numeric.FPE_DIVIDEBYZERO
numeric.FPE_INVALID
numeric.FPE_OVERFLOW
numeric.FPE_UNDERFLOW
numeric.False_
numeric.Inf
numeric.Infinity
numeric.MAXDIMS
numeric.NAN
numeric.NINF
numeric.NZERO
numeric.NaN
numeric.PINF
numeric.PZERO
numeric.RAISE
numeric.SHIFT_DIVIDEBYZERO
numeric.SHIFT_INVALID
numeric.SHIFT_OVERFLOW
numeric.SHIFT_UNDERFLOW
numeric.ScalarType
numeric.True_
numeric.UFUNC_BUFSIZE_DEFAULT
numeric.UFUNC_PYVALS_NAME
numeric.WRAP
numeric._Unspecified
numeric.__all__
numeric.__builtins__
numeric.__doc__
numeric.__file__
numeric.__name__
numeric.__package__
numeric._cload(
numeric._errdict
numeric._errdict_rev
numeric._file(
numeric._lkup
numeric._maketup(
numeric._mode_from_name(
numeric._mode_from_name_dict
numeric._move_axis_to_0(
numeric._setdef(
numeric._typelessdata
numeric._unspecified(
numeric.absolute(
numeric.add(
numeric.alen(
numeric.all(
numeric.allclose(
numeric.alltrue(
numeric.alterdot(
numeric.amax(
numeric.amin(
numeric.any(
numeric.arange(
numeric.arccos(
numeric.arccosh(
numeric.arcsin(
numeric.arcsinh(
numeric.arctan(
numeric.arctan2(
numeric.arctanh(
numeric.argmax(
numeric.argmin(
numeric.argsort(
numeric.argwhere(
numeric.around(
numeric.array(
numeric.array2string(
numeric.array_equal(
numeric.array_equiv(
numeric.array_repr(
numeric.array_str(
numeric.asanyarray(
numeric.asarray(
numeric.ascontiguousarray(
numeric.asfortranarray(
numeric.base_repr(
numeric.binary_repr(
numeric.bitwise_and(
numeric.bitwise_not(
numeric.bitwise_or(
numeric.bitwise_xor(
numeric.bool8(
numeric.bool_(
numeric.broadcast(
numeric.byte(
numeric.bytes_(
numeric.can_cast(
numeric.cast
numeric.cdouble(
numeric.ceil(
numeric.cfloat(
numeric.character(
numeric.choose(
numeric.clip(
numeric.clongdouble(
numeric.clongfloat(
numeric.compare_chararrays(
numeric.complex128(
numeric.complex192(
numeric.complex64(
numeric.complex_(
numeric.complexfloating(
numeric.compress(
numeric.concatenate(
numeric.conj(
numeric.conjugate(
numeric.convolve(
numeric.copysign(
numeric.correlate(
numeric.cos(
numeric.cosh(
numeric.count_nonzero(
numeric.cross(
numeric.csingle(
numeric.cumprod(
numeric.cumproduct(
numeric.cumsum(
numeric.datetime64(
numeric.datetime_(
numeric.deg2rad(
numeric.degrees(
numeric.diagonal(
numeric.divide(
numeric.dot(
numeric.double(
numeric.dtype(
numeric.e
numeric.einsum(
numeric.empty(
numeric.empty_like(
numeric.equal(
numeric.errstate(
numeric.exp(
numeric.exp2(
numeric.expm1(
numeric.extend_all(
numeric.fabs(
numeric.fastCopyAndTranspose(
numeric.find_common_type(
numeric.flatiter(
numeric.flatnonzero(
numeric.flexible(
numeric.float16(
numeric.float32(
numeric.float64(
numeric.float96(
numeric.float_(
numeric.floating(
numeric.floor(
numeric.floor_divide(
numeric.fmax(
numeric.fmin(
numeric.fmod(
numeric.frexp(
numeric.frombuffer(
numeric.fromfile(
numeric.fromfunction(
numeric.fromiter(
numeric.fromnumeric
numeric.frompyfunc(
numeric.fromstring(
numeric.generic(
numeric.get_printoptions(
numeric.getbuffer(
numeric.getbufsize(
numeric.geterr(
numeric.geterrcall(
numeric.geterrobj(
numeric.greater(
numeric.greater_equal(
numeric.half(
numeric.hypot(
numeric.identity(
numeric.indices(
numeric.inexact(
numeric.inf
numeric.infty
numeric.inner(
numeric.int0(
numeric.int16(
numeric.int32(
numeric.int64(
numeric.int8(
numeric.int_(
numeric.int_asbuffer(
numeric.intc(
numeric.integer(
numeric.intp(
numeric.invert(
numeric.isfinite(
numeric.isfortran(
numeric.isinf(
numeric.isnan(
numeric.isscalar(
numeric.issctype(
numeric.issubdtype(
numeric.ldexp(
numeric.left_shift(
numeric.less(
numeric.less_equal(
numeric.lexsort(
numeric.little_endian
numeric.load(
numeric.loads(
numeric.log(
numeric.log10(
numeric.log1p(
numeric.log2(
numeric.logaddexp(
numeric.logaddexp2(
numeric.logical_and(
numeric.logical_not(
numeric.logical_or(
numeric.logical_xor(
numeric.longcomplex(
numeric.longdouble(
numeric.longfloat(
numeric.longlong(
numeric.maximum(
numeric.maximum_sctype(
numeric.mean(
numeric.min_scalar_type(
numeric.minimum(
numeric.mod(
numeric.modf(
numeric.multiarray
numeric.multiply(
numeric.nan
numeric.nbytes
numeric.ndarray(
numeric.ndim(
numeric.nditer(
numeric.negative(
numeric.nested_iters(
numeric.newaxis
numeric.newbuffer(
numeric.nextafter(
numeric.nonzero(
numeric.not_equal(
numeric.number(
numeric.numerictypes
numeric.obj2sctype(
numeric.object0(
numeric.object_(
numeric.ones(
numeric.ones_like(
numeric.outer(
numeric.pi
numeric.power(
numeric.prod(
numeric.product(
numeric.promote_types(
numeric.ptp(
numeric.put(
numeric.putmask(
numeric.rad2deg(
numeric.radians(
numeric.rank(
numeric.ravel(
numeric.reciprocal(
numeric.remainder(
numeric.repeat(
numeric.require(
numeric.reshape(
numeric.resize(
numeric.restoredot(
numeric.result_type(
numeric.right_shift(
numeric.rint(
numeric.roll(
numeric.rollaxis(
numeric.round_(
numeric.sctype2char(
numeric.sctypeDict
numeric.sctypeNA
numeric.sctypes
numeric.searchsorted(
numeric.set_numeric_ops(
numeric.set_printoptions(
numeric.set_string_function(
numeric.setbufsize(
numeric.seterr(
numeric.seterrcall(
numeric.seterrobj(
numeric.shape(
numeric.short(
numeric.sign(
numeric.signbit(
numeric.signedinteger(
numeric.sin(
numeric.single(
numeric.singlecomplex(
numeric.sinh(
numeric.size(
numeric.sometrue(
numeric.sort(
numeric.spacing(
numeric.sqrt(
numeric.square(
numeric.squeeze(
numeric.std(
numeric.str_(
numeric.string0(
numeric.string_(
numeric.subtract(
numeric.sum(
numeric.swapaxes(
numeric.sys
numeric.take(
numeric.tan(
numeric.tanh(
numeric.tensordot(
numeric.timedelta64(
numeric.timedelta_(
numeric.timeinteger(
numeric.trace(
numeric.transpose(
numeric.true_divide(
numeric.trunc(
numeric.typeDict
numeric.typeNA
numeric.typecodes
numeric.ubyte(
numeric.ufunc(
numeric.uint(
numeric.uint0(
numeric.uint16(
numeric.uint32(
numeric.uint64(
numeric.uint8(
numeric.uintc(
numeric.uintp(
numeric.ulonglong(
numeric.umath
numeric.unicode0(
numeric.unicode_(
numeric.unsignedinteger(
numeric.ushort(
numeric.var(
numeric.vdot(
numeric.void(
numeric.void0(
numeric.warnings
numeric.where(
numeric.zeros(
numeric.zeros_like(

--- from numpy.core.numeric import * ---
_Unspecified
_cload(
_errdict
_errdict_rev
_file(
_lkup
_maketup(
_mode_from_name(
_mode_from_name_dict
_move_axis_to_0(
_setdef(
_typelessdata
_unspecified(
extend_all(

--- import numpy.core.numerictypes ---
numpy.core.numerictypes.LOWER_TABLE
numpy.core.numerictypes.ScalarType
numpy.core.numerictypes.UPPER_TABLE
numpy.core.numerictypes.__all__
numpy.core.numerictypes.__builtins__
numpy.core.numerictypes.__doc__
numpy.core.numerictypes.__file__
numpy.core.numerictypes.__len_test_types
numpy.core.numerictypes.__name__
numpy.core.numerictypes.__package__
numpy.core.numerictypes.__test_types
numpy.core.numerictypes.__warningregistry__
numpy.core.numerictypes._add_aliases(
numpy.core.numerictypes._add_array_type(
numpy.core.numerictypes._add_integer_aliases(
numpy.core.numerictypes._add_types(
numpy.core.numerictypes._alignment
numpy.core.numerictypes._all_chars
numpy.core.numerictypes._ascii_lower
numpy.core.numerictypes._ascii_upper
numpy.core.numerictypes._can_coerce_all(
numpy.core.numerictypes._construct_char_code_lookup(
numpy.core.numerictypes._construct_lookups(
numpy.core.numerictypes._evalname(
numpy.core.numerictypes._find_common_coerce(
numpy.core.numerictypes._kind_list
numpy.core.numerictypes._maxvals
numpy.core.numerictypes._minvals
numpy.core.numerictypes._python_type(
numpy.core.numerictypes._python_types
numpy.core.numerictypes._sctype2char_dict
numpy.core.numerictypes._set_array_types(
numpy.core.numerictypes._set_up_aliases(
numpy.core.numerictypes._typedict(
numpy.core.numerictypes._types
numpy.core.numerictypes._typestr
numpy.core.numerictypes.allTypes
numpy.core.numerictypes.array(
numpy.core.numerictypes.bitname(
numpy.core.numerictypes.bool(
numpy.core.numerictypes.bool8(
numpy.core.numerictypes.bool_(
numpy.core.numerictypes.buffer_type(
numpy.core.numerictypes.byte(
numpy.core.numerictypes.bytes(
numpy.core.numerictypes.bytes_(
numpy.core.numerictypes.cast
numpy.core.numerictypes.cdouble(
numpy.core.numerictypes.cfloat(
numpy.core.numerictypes.character(
numpy.core.numerictypes.clongdouble(
numpy.core.numerictypes.clongfloat(
numpy.core.numerictypes.complex(
numpy.core.numerictypes.complex128(
numpy.core.numerictypes.complex192(
numpy.core.numerictypes.complex64(
numpy.core.numerictypes.complex_(
numpy.core.numerictypes.complexfloating(
numpy.core.numerictypes.csingle(
numpy.core.numerictypes.datetime64(
numpy.core.numerictypes.datetime_(
numpy.core.numerictypes.double(
numpy.core.numerictypes.dtype(
numpy.core.numerictypes.empty(
numpy.core.numerictypes.english_capitalize(
numpy.core.numerictypes.english_lower(
numpy.core.numerictypes.english_upper(
numpy.core.numerictypes.find_common_type(
numpy.core.numerictypes.flexible(
numpy.core.numerictypes.float(
numpy.core.numerictypes.float16(
numpy.core.numerictypes.float32(
numpy.core.numerictypes.float64(
numpy.core.numerictypes.float96(
numpy.core.numerictypes.float_(
numpy.core.numerictypes.floating(
numpy.core.numerictypes.generic(
numpy.core.numerictypes.genericTypeRank
numpy.core.numerictypes.half(
numpy.core.numerictypes.inexact(
numpy.core.numerictypes.int(
numpy.core.numerictypes.int0(
numpy.core.numerictypes.int16(
numpy.core.numerictypes.int32(
numpy.core.numerictypes.int64(
numpy.core.numerictypes.int8(
numpy.core.numerictypes.int_(
numpy.core.numerictypes.intc(
numpy.core.numerictypes.integer(
numpy.core.numerictypes.intp(
numpy.core.numerictypes.issctype(
numpy.core.numerictypes.issubclass_(
numpy.core.numerictypes.issubdtype(
numpy.core.numerictypes.issubsctype(
numpy.core.numerictypes.long(
numpy.core.numerictypes.longcomplex(
numpy.core.numerictypes.longdouble(
numpy.core.numerictypes.longfloat(
numpy.core.numerictypes.longlong(
numpy.core.numerictypes.maximum_sctype(
numpy.core.numerictypes.nbytes
numpy.core.numerictypes.ndarray(
numpy.core.numerictypes.number(
numpy.core.numerictypes.obj2sctype(
numpy.core.numerictypes.object(
numpy.core.numerictypes.object0(
numpy.core.numerictypes.object_(
numpy.core.numerictypes.sctype2char(
numpy.core.numerictypes.sctypeDict
numpy.core.numerictypes.sctypeNA
numpy.core.numerictypes.sctypes
numpy.core.numerictypes.short(
numpy.core.numerictypes.signedinteger(
numpy.core.numerictypes.single(
numpy.core.numerictypes.singlecomplex(
numpy.core.numerictypes.str(
numpy.core.numerictypes.str_(
numpy.core.numerictypes.string0(
numpy.core.numerictypes.string_(
numpy.core.numerictypes.sys
numpy.core.numerictypes.timedelta64(
numpy.core.numerictypes.timedelta_(
numpy.core.numerictypes.timeinteger(
numpy.core.numerictypes.typeDict
numpy.core.numerictypes.typeNA
numpy.core.numerictypes.typecodes
numpy.core.numerictypes.typeinfo
numpy.core.numerictypes.ubyte(
numpy.core.numerictypes.uint(
numpy.core.numerictypes.uint0(
numpy.core.numerictypes.uint16(
numpy.core.numerictypes.uint32(
numpy.core.numerictypes.uint64(
numpy.core.numerictypes.uint8(
numpy.core.numerictypes.uintc(
numpy.core.numerictypes.uintp(
numpy.core.numerictypes.ulonglong(
numpy.core.numerictypes.unicode(
numpy.core.numerictypes.unicode0(
numpy.core.numerictypes.unicode_(
numpy.core.numerictypes.unsignedinteger(
numpy.core.numerictypes.ushort(
numpy.core.numerictypes.val
numpy.core.numerictypes.void(
numpy.core.numerictypes.void0(

--- from numpy.core import numerictypes ---
numerictypes.LOWER_TABLE
numerictypes.ScalarType
numerictypes.UPPER_TABLE
numerictypes.__all__
numerictypes.__builtins__
numerictypes.__doc__
numerictypes.__file__
numerictypes.__len_test_types
numerictypes.__name__
numerictypes.__package__
numerictypes.__test_types
numerictypes.__warningregistry__
numerictypes._add_aliases(
numerictypes._add_array_type(
numerictypes._add_integer_aliases(
numerictypes._add_types(
numerictypes._alignment
numerictypes._all_chars
numerictypes._ascii_lower
numerictypes._ascii_upper
numerictypes._can_coerce_all(
numerictypes._construct_char_code_lookup(
numerictypes._construct_lookups(
numerictypes._evalname(
numerictypes._find_common_coerce(
numerictypes._kind_list
numerictypes._maxvals
numerictypes._minvals
numerictypes._python_type(
numerictypes._python_types
numerictypes._sctype2char_dict
numerictypes._set_array_types(
numerictypes._set_up_aliases(
numerictypes._typedict(
numerictypes._types
numerictypes._typestr
numerictypes.allTypes
numerictypes.array(
numerictypes.bitname(
numerictypes.bool(
numerictypes.bool8(
numerictypes.bool_(
numerictypes.buffer_type(
numerictypes.byte(
numerictypes.bytes(
numerictypes.bytes_(
numerictypes.cast
numerictypes.cdouble(
numerictypes.cfloat(
numerictypes.character(
numerictypes.clongdouble(
numerictypes.clongfloat(
numerictypes.complex(
numerictypes.complex128(
numerictypes.complex192(
numerictypes.complex64(
numerictypes.complex_(
numerictypes.complexfloating(
numerictypes.csingle(
numerictypes.datetime64(
numerictypes.datetime_(
numerictypes.double(
numerictypes.dtype(
numerictypes.empty(
numerictypes.english_capitalize(
numerictypes.english_lower(
numerictypes.english_upper(
numerictypes.find_common_type(
numerictypes.flexible(
numerictypes.float(
numerictypes.float16(
numerictypes.float32(
numerictypes.float64(
numerictypes.float96(
numerictypes.float_(
numerictypes.floating(
numerictypes.generic(
numerictypes.genericTypeRank
numerictypes.half(
numerictypes.inexact(
numerictypes.int(
numerictypes.int0(
numerictypes.int16(
numerictypes.int32(
numerictypes.int64(
numerictypes.int8(
numerictypes.int_(
numerictypes.intc(
numerictypes.integer(
numerictypes.intp(
numerictypes.issctype(
numerictypes.issubclass_(
numerictypes.issubdtype(
numerictypes.issubsctype(
numerictypes.long(
numerictypes.longcomplex(
numerictypes.longdouble(
numerictypes.longfloat(
numerictypes.longlong(
numerictypes.maximum_sctype(
numerictypes.nbytes
numerictypes.ndarray(
numerictypes.number(
numerictypes.obj2sctype(
numerictypes.object(
numerictypes.object0(
numerictypes.object_(
numerictypes.sctype2char(
numerictypes.sctypeDict
numerictypes.sctypeNA
numerictypes.sctypes
numerictypes.short(
numerictypes.signedinteger(
numerictypes.single(
numerictypes.singlecomplex(
numerictypes.str(
numerictypes.str_(
numerictypes.string0(
numerictypes.string_(
numerictypes.sys
numerictypes.timedelta64(
numerictypes.timedelta_(
numerictypes.timeinteger(
numerictypes.typeDict
numerictypes.typeNA
numerictypes.typecodes
numerictypes.typeinfo
numerictypes.ubyte(
numerictypes.uint(
numerictypes.uint0(
numerictypes.uint16(
numerictypes.uint32(
numerictypes.uint64(
numerictypes.uint8(
numerictypes.uintc(
numerictypes.uintp(
numerictypes.ulonglong(
numerictypes.unicode(
numerictypes.unicode0(
numerictypes.unicode_(
numerictypes.unsignedinteger(
numerictypes.ushort(
numerictypes.val
numerictypes.void(
numerictypes.void0(

--- from numpy.core.numerictypes import * ---
LOWER_TABLE
UPPER_TABLE
__len_test_types
__test_types
_add_aliases(
_add_array_type(
_add_integer_aliases(
_add_types(
_alignment
_all_chars
_ascii_lower
_ascii_upper
_can_coerce_all(
_construct_char_code_lookup(
_construct_lookups(
_evalname(
_find_common_coerce(
_kind_list
_maxvals
_minvals
_python_type(
_python_types
_sctype2char_dict
_set_array_types(
_set_up_aliases(
_typedict(
_types
_typestr
allTypes
bitname(
buffer_type(
english_capitalize(
english_lower(
english_upper(
genericTypeRank
val

--- import numpy.core.records ---
numpy.core.records.__all__
numpy.core.records.__builtins__
numpy.core.records.__doc__
numpy.core.records.__file__
numpy.core.records.__name__
numpy.core.records.__package__
numpy.core.records._byteorderconv
numpy.core.records._typestr
numpy.core.records.array(
numpy.core.records.bytes(
numpy.core.records.chararray(
numpy.core.records.find_duplicate(
numpy.core.records.format_parser(
numpy.core.records.fromarrays(
numpy.core.records.fromfile(
numpy.core.records.fromrecords(
numpy.core.records.fromstring(
numpy.core.records.get_remaining_size(
numpy.core.records.isfileobj(
numpy.core.records.ndarray(
numpy.core.records.nt
numpy.core.records.numfmt
numpy.core.records.os
numpy.core.records.recarray(
numpy.core.records.record(
numpy.core.records.sb
numpy.core.records.sys
numpy.core.records.types

--- from numpy.core import records ---
records.__all__
records.__builtins__
records.__doc__
records.__file__
records.__name__
records.__package__
records._byteorderconv
records._typestr
records.array(
records.bytes(
records.chararray(
records.find_duplicate(
records.format_parser(
records.fromarrays(
records.fromfile(
records.fromrecords(
records.fromstring(
records.get_remaining_size(
records.isfileobj(
records.ndarray(
records.nt
records.numfmt
records.os
records.recarray(
records.record(
records.sb
records.sys
records.types

--- from numpy.core.records import * ---
_byteorderconv
find_duplicate(
fromarrays(
fromrecords(
get_remaining_size(
numfmt
sb

--- import numpy.core.scalarmath ---
numpy.core.scalarmath.__doc__
numpy.core.scalarmath.__file__
numpy.core.scalarmath.__name__
numpy.core.scalarmath.__package__
numpy.core.scalarmath.alter_pythonmath(
numpy.core.scalarmath.restore_pythonmath(
numpy.core.scalarmath.use_pythonmath(
numpy.core.scalarmath.use_scalarmath(

--- from numpy.core import scalarmath ---
scalarmath.__doc__
scalarmath.__file__
scalarmath.__name__
scalarmath.__package__
scalarmath.alter_pythonmath(
scalarmath.restore_pythonmath(
scalarmath.use_pythonmath(
scalarmath.use_scalarmath(

--- from numpy.core.scalarmath import * ---
alter_pythonmath(
restore_pythonmath(
use_pythonmath(
use_scalarmath(

--- import numpy.core.shape_base ---
numpy.core.shape_base.__all__
numpy.core.shape_base.__builtins__
numpy.core.shape_base.__doc__
numpy.core.shape_base.__file__
numpy.core.shape_base.__name__
numpy.core.shape_base.__package__
numpy.core.shape_base._nx
numpy.core.shape_base.array(
numpy.core.shape_base.asanyarray(
numpy.core.shape_base.atleast_1d(
numpy.core.shape_base.atleast_2d(
numpy.core.shape_base.atleast_3d(
numpy.core.shape_base.hstack(
numpy.core.shape_base.newaxis
numpy.core.shape_base.vstack(

--- from numpy.core import shape_base ---
shape_base.__all__
shape_base.__builtins__
shape_base.__doc__
shape_base.__file__
shape_base.__name__
shape_base.__package__
shape_base._nx
shape_base.array(
shape_base.asanyarray(
shape_base.atleast_1d(
shape_base.atleast_2d(
shape_base.atleast_3d(
shape_base.hstack(
shape_base.newaxis
shape_base.vstack(

--- from numpy.core.shape_base import * ---

--- import numpy.core.umath ---
numpy.core.umath.ERR_CALL
numpy.core.umath.ERR_DEFAULT
numpy.core.umath.ERR_DEFAULT2
numpy.core.umath.ERR_IGNORE
numpy.core.umath.ERR_LOG
numpy.core.umath.ERR_PRINT
numpy.core.umath.ERR_RAISE
numpy.core.umath.ERR_WARN
numpy.core.umath.FLOATING_POINT_SUPPORT
numpy.core.umath.FPE_DIVIDEBYZERO
numpy.core.umath.FPE_INVALID
numpy.core.umath.FPE_OVERFLOW
numpy.core.umath.FPE_UNDERFLOW
numpy.core.umath.NAN
numpy.core.umath.NINF
numpy.core.umath.NZERO
numpy.core.umath.PINF
numpy.core.umath.PZERO
numpy.core.umath.SHIFT_DIVIDEBYZERO
numpy.core.umath.SHIFT_INVALID
numpy.core.umath.SHIFT_OVERFLOW
numpy.core.umath.SHIFT_UNDERFLOW
numpy.core.umath.UFUNC_BUFSIZE_DEFAULT
numpy.core.umath.UFUNC_PYVALS_NAME
numpy.core.umath._UFUNC_API
numpy.core.umath.__doc__
numpy.core.umath.__file__
numpy.core.umath.__name__
numpy.core.umath.__package__
numpy.core.umath.__version__
numpy.core.umath._arg(
numpy.core.umath.absolute(
numpy.core.umath.add(
numpy.core.umath.arccos(
numpy.core.umath.arccosh(
numpy.core.umath.arcsin(
numpy.core.umath.arcsinh(
numpy.core.umath.arctan(
numpy.core.umath.arctan2(
numpy.core.umath.arctanh(
numpy.core.umath.bitwise_and(
numpy.core.umath.bitwise_or(
numpy.core.umath.bitwise_xor(
numpy.core.umath.ceil(
numpy.core.umath.conj(
numpy.core.umath.conjugate(
numpy.core.umath.copysign(
numpy.core.umath.cos(
numpy.core.umath.cosh(
numpy.core.umath.deg2rad(
numpy.core.umath.degrees(
numpy.core.umath.divide(
numpy.core.umath.e
numpy.core.umath.equal(
numpy.core.umath.exp(
numpy.core.umath.exp2(
numpy.core.umath.expm1(
numpy.core.umath.fabs(
numpy.core.umath.floor(
numpy.core.umath.floor_divide(
numpy.core.umath.fmax(
numpy.core.umath.fmin(
numpy.core.umath.fmod(
numpy.core.umath.frexp(
numpy.core.umath.frompyfunc(
numpy.core.umath.geterrobj(
numpy.core.umath.greater(
numpy.core.umath.greater_equal(
numpy.core.umath.hypot(
numpy.core.umath.invert(
numpy.core.umath.isfinite(
numpy.core.umath.isinf(
numpy.core.umath.isnan(
numpy.core.umath.ldexp(
numpy.core.umath.left_shift(
numpy.core.umath.less(
numpy.core.umath.less_equal(
numpy.core.umath.log(
numpy.core.umath.log10(
numpy.core.umath.log1p(
numpy.core.umath.log2(
numpy.core.umath.logaddexp(
numpy.core.umath.logaddexp2(
numpy.core.umath.logical_and(
numpy.core.umath.logical_not(
numpy.core.umath.logical_or(
numpy.core.umath.logical_xor(
numpy.core.umath.maximum(
numpy.core.umath.minimum(
numpy.core.umath.mod(
numpy.core.umath.modf(
numpy.core.umath.multiply(
numpy.core.umath.negative(
numpy.core.umath.nextafter(
numpy.core.umath.not_equal(
numpy.core.umath.ones_like(
numpy.core.umath.pi
numpy.core.umath.power(
numpy.core.umath.rad2deg(
numpy.core.umath.radians(
numpy.core.umath.reciprocal(
numpy.core.umath.remainder(
numpy.core.umath.right_shift(
numpy.core.umath.rint(
numpy.core.umath.seterrobj(
numpy.core.umath.sign(
numpy.core.umath.signbit(
numpy.core.umath.sin(
numpy.core.umath.sinh(
numpy.core.umath.spacing(
numpy.core.umath.sqrt(
numpy.core.umath.square(
numpy.core.umath.subtract(
numpy.core.umath.tan(
numpy.core.umath.tanh(
numpy.core.umath.true_divide(
numpy.core.umath.trunc(

--- from numpy.core import umath ---
umath.ERR_CALL
umath.ERR_DEFAULT
umath.ERR_DEFAULT2
umath.ERR_IGNORE
umath.ERR_LOG
umath.ERR_PRINT
umath.ERR_RAISE
umath.ERR_WARN
umath.FLOATING_POINT_SUPPORT
umath.FPE_DIVIDEBYZERO
umath.FPE_INVALID
umath.FPE_OVERFLOW
umath.FPE_UNDERFLOW
umath.NAN
umath.NINF
umath.NZERO
umath.PINF
umath.PZERO
umath.SHIFT_DIVIDEBYZERO
umath.SHIFT_INVALID
umath.SHIFT_OVERFLOW
umath.SHIFT_UNDERFLOW
umath.UFUNC_BUFSIZE_DEFAULT
umath.UFUNC_PYVALS_NAME
umath._UFUNC_API
umath.__doc__
umath.__file__
umath.__name__
umath.__package__
umath.__version__
umath._arg(
umath.absolute(
umath.add(
umath.arccos(
umath.arccosh(
umath.arcsin(
umath.arcsinh(
umath.arctan(
umath.arctan2(
umath.arctanh(
umath.bitwise_and(
umath.bitwise_or(
umath.bitwise_xor(
umath.ceil(
umath.conj(
umath.conjugate(
umath.copysign(
umath.cos(
umath.cosh(
umath.deg2rad(
umath.degrees(
umath.divide(
umath.e
umath.equal(
umath.exp(
umath.exp2(
umath.expm1(
umath.fabs(
umath.floor(
umath.floor_divide(
umath.fmax(
umath.fmin(
umath.fmod(
umath.frexp(
umath.frompyfunc(
umath.geterrobj(
umath.greater(
umath.greater_equal(
umath.hypot(
umath.invert(
umath.isfinite(
umath.isinf(
umath.isnan(
umath.ldexp(
umath.left_shift(
umath.less(
umath.less_equal(
umath.log(
umath.log10(
umath.log1p(
umath.log2(
umath.logaddexp(
umath.logaddexp2(
umath.logical_and(
umath.logical_not(
umath.logical_or(
umath.logical_xor(
umath.maximum(
umath.minimum(
umath.mod(
umath.modf(
umath.multiply(
umath.negative(
umath.nextafter(
umath.not_equal(
umath.ones_like(
umath.pi
umath.power(
umath.rad2deg(
umath.radians(
umath.reciprocal(
umath.remainder(
umath.right_shift(
umath.rint(
umath.seterrobj(
umath.sign(
umath.signbit(
umath.sin(
umath.sinh(
umath.spacing(
umath.sqrt(
umath.square(
umath.subtract(
umath.tan(
umath.tanh(
umath.true_divide(
umath.trunc(

--- from numpy.core.umath import * ---
_UFUNC_API
_arg(

--- import numpy.ctypeslib ---
numpy.ctypeslib._ARRAY_TYPE(
numpy.ctypeslib.__all__
numpy.ctypeslib.__builtins__
numpy.ctypeslib.__doc__
numpy.ctypeslib.__file__
numpy.ctypeslib.__name__
numpy.ctypeslib.__package__
numpy.ctypeslib._dtype(
numpy.ctypeslib._flagdict
numpy.ctypeslib._flagnames
numpy.ctypeslib._flags_fromnum(
numpy.ctypeslib._ndptr(
numpy.ctypeslib._ndptr_base(
numpy.ctypeslib._num_fromflags(
numpy.ctypeslib._pointer_type_cache
numpy.ctypeslib._typecodes
numpy.ctypeslib.array(
numpy.ctypeslib.as_array(
numpy.ctypeslib.as_ctypes(
numpy.ctypeslib.c_intp(
numpy.ctypeslib.code
numpy.ctypeslib.ct
numpy.ctypeslib.ctypes
numpy.ctypeslib.ctypes_load_library(
numpy.ctypeslib.deprecate(
numpy.ctypeslib.flagsobj(
numpy.ctypeslib.integer(
numpy.ctypeslib.load_library(
numpy.ctypeslib.ndarray(
numpy.ctypeslib.ndpointer(
numpy.ctypeslib.os
numpy.ctypeslib.prep_array(
numpy.ctypeslib.prep_pointer(
numpy.ctypeslib.prep_simple(
numpy.ctypeslib.simple_types
numpy.ctypeslib.sys
numpy.ctypeslib.tp(
numpy.ctypeslib.types

--- from numpy import ctypeslib ---
ctypeslib._ARRAY_TYPE(
ctypeslib.__all__
ctypeslib.__builtins__
ctypeslib.__doc__
ctypeslib.__file__
ctypeslib.__name__
ctypeslib.__package__
ctypeslib._dtype(
ctypeslib._flagdict
ctypeslib._flagnames
ctypeslib._flags_fromnum(
ctypeslib._ndptr(
ctypeslib._ndptr_base(
ctypeslib._num_fromflags(
ctypeslib._pointer_type_cache
ctypeslib._typecodes
ctypeslib.array(
ctypeslib.as_array(
ctypeslib.as_ctypes(
ctypeslib.c_intp(
ctypeslib.code
ctypeslib.ct
ctypeslib.ctypes
ctypeslib.ctypes_load_library(
ctypeslib.deprecate(
ctypeslib.flagsobj(
ctypeslib.integer(
ctypeslib.load_library(
ctypeslib.ndarray(
ctypeslib.ndpointer(
ctypeslib.os
ctypeslib.prep_array(
ctypeslib.prep_pointer(
ctypeslib.prep_simple(
ctypeslib.simple_types
ctypeslib.sys
ctypeslib.tp(
ctypeslib.types

--- from numpy.ctypeslib import * ---
_ARRAY_TYPE(
_dtype(
_flagnames
_flags_fromnum(
_ndptr(
_ndptr_base(
_num_fromflags(
_pointer_type_cache
_typecodes
as_array(
as_ctypes(
c_intp(
code
ct
ctypes
ctypes_load_library(
load_library(
ndpointer(
prep_array(
prep_pointer(
prep_simple(
simple_types
tp(

--- import numpy.fft ---
numpy.fft.Tester(
numpy.fft.__builtins__
numpy.fft.__doc__
numpy.fft.__file__
numpy.fft.__name__
numpy.fft.__package__
numpy.fft.__path__
numpy.fft.bench(
numpy.fft.fft(
numpy.fft.fft2(
numpy.fft.fftfreq(
numpy.fft.fftn(
numpy.fft.fftpack
numpy.fft.fftpack_lite
numpy.fft.fftshift(
numpy.fft.helper
numpy.fft.hfft(
numpy.fft.ifft(
numpy.fft.ifft2(
numpy.fft.ifftn(
numpy.fft.ifftshift(
numpy.fft.ihfft(
numpy.fft.info
numpy.fft.irfft(
numpy.fft.irfft2(
numpy.fft.irfftn(
numpy.fft.rfft(
numpy.fft.rfft2(
numpy.fft.rfftn(
numpy.fft.test(

--- from numpy import fft ---
fft.Tester(
fft.__builtins__
fft.__doc__
fft.__file__
fft.__name__
fft.__package__
fft.__path__
fft.bench(
fft.fft(
fft.fft2(
fft.fftfreq(
fft.fftn(
fft.fftpack
fft.fftpack_lite
fft.fftshift(
fft.helper
fft.hfft(
fft.ifft(
fft.ifft2(
fft.ifftn(
fft.ifftshift(
fft.ihfft(
fft.info
fft.irfft(
fft.irfft2(
fft.irfftn(
fft.rfft(
fft.rfft2(
fft.rfftn(
fft.test(

--- from numpy.fft import * ---
fft(
fft2(
fftfreq(
fftn(
fftpack
fftpack_lite
fftshift(
helper
hfft(
ifft(
ifft2(
ifftn(
ifftshift(
ihfft(
irfft(
irfft2(
irfftn(
rfft(
rfft2(
rfftn(

--- import numpy.fft.fftpack ---
numpy.fft.fftpack.__all__
numpy.fft.fftpack.__builtins__
numpy.fft.fftpack.__doc__
numpy.fft.fftpack.__file__
numpy.fft.fftpack.__name__
numpy.fft.fftpack.__package__
numpy.fft.fftpack._cook_nd_args(
numpy.fft.fftpack._fft_cache
numpy.fft.fftpack._raw_fft(
numpy.fft.fftpack._raw_fftnd(
numpy.fft.fftpack._real_fft_cache
numpy.fft.fftpack.asarray(
numpy.fft.fftpack.conjugate(
numpy.fft.fftpack.fft(
numpy.fft.fftpack.fft2(
numpy.fft.fftpack.fftn(
numpy.fft.fftpack.fftpack
numpy.fft.fftpack.hfft(
numpy.fft.fftpack.ifft(
numpy.fft.fftpack.ifft2(
numpy.fft.fftpack.ifftn(
numpy.fft.fftpack.ihfft(
numpy.fft.fftpack.irfft(
numpy.fft.fftpack.irfft2(
numpy.fft.fftpack.irfftn(
numpy.fft.fftpack.rfft(
numpy.fft.fftpack.rfft2(
numpy.fft.fftpack.rfftn(
numpy.fft.fftpack.shape(
numpy.fft.fftpack.swapaxes(
numpy.fft.fftpack.take(
numpy.fft.fftpack.zeros(

--- from numpy.fft import fftpack ---
fftpack.__all__
fftpack.__builtins__
fftpack.__doc__
fftpack.__file__
fftpack.__name__
fftpack.__package__
fftpack._cook_nd_args(
fftpack._fft_cache
fftpack._raw_fft(
fftpack._raw_fftnd(
fftpack._real_fft_cache
fftpack.asarray(
fftpack.conjugate(
fftpack.fft(
fftpack.fft2(
fftpack.fftn(
fftpack.fftpack
fftpack.hfft(
fftpack.ifft(
fftpack.ifft2(
fftpack.ifftn(
fftpack.ihfft(
fftpack.irfft(
fftpack.irfft2(
fftpack.irfftn(
fftpack.rfft(
fftpack.rfft2(
fftpack.rfftn(
fftpack.shape(
fftpack.swapaxes(
fftpack.take(
fftpack.zeros(

--- from numpy.fft.fftpack import * ---
_cook_nd_args(
_fft_cache
_raw_fft(
_raw_fftnd(
_real_fft_cache

--- import numpy.fft.fftpack_lite ---
numpy.fft.fftpack_lite.__doc__
numpy.fft.fftpack_lite.__file__
numpy.fft.fftpack_lite.__name__
numpy.fft.fftpack_lite.__package__
numpy.fft.fftpack_lite.cfftb(
numpy.fft.fftpack_lite.cfftf(
numpy.fft.fftpack_lite.cffti(
numpy.fft.fftpack_lite.error(
numpy.fft.fftpack_lite.rfftb(
numpy.fft.fftpack_lite.rfftf(
numpy.fft.fftpack_lite.rffti(

--- from numpy.fft import fftpack_lite ---
fftpack_lite.__doc__
fftpack_lite.__file__
fftpack_lite.__name__
fftpack_lite.__package__
fftpack_lite.cfftb(
fftpack_lite.cfftf(
fftpack_lite.cffti(
fftpack_lite.error(
fftpack_lite.rfftb(
fftpack_lite.rfftf(
fftpack_lite.rffti(

--- from numpy.fft.fftpack_lite import * ---
cfftb(
cfftf(
cffti(
rfftb(
rfftf(
rffti(

--- import numpy.fft.helper ---
numpy.fft.helper.__all__
numpy.fft.helper.__builtins__
numpy.fft.helper.__doc__
numpy.fft.helper.__file__
numpy.fft.helper.__name__
numpy.fft.helper.__package__
numpy.fft.helper.arange(
numpy.fft.helper.asarray(
numpy.fft.helper.concatenate(
numpy.fft.helper.empty(
numpy.fft.helper.fftfreq(
numpy.fft.helper.fftshift(
numpy.fft.helper.ifftshift(
numpy.fft.helper.integer(
numpy.fft.helper.nt
numpy.fft.helper.take(
numpy.fft.helper.types

--- from numpy.fft import helper ---
helper.__all__
helper.__builtins__
helper.__doc__
helper.__file__
helper.__name__
helper.__package__
helper.arange(
helper.asarray(
helper.concatenate(
helper.empty(
helper.fftfreq(
helper.fftshift(
helper.ifftshift(
helper.integer(
helper.nt
helper.take(
helper.types

--- from numpy.fft.helper import * ---

--- import numpy.fft.info ---
numpy.fft.info.__builtins__
numpy.fft.info.__doc__
numpy.fft.info.__file__
numpy.fft.info.__name__
numpy.fft.info.__package__
numpy.fft.info.depends

--- from numpy.fft import info ---

--- from numpy.fft.info import * ---

--- import numpy.lib ---
numpy.lib.Arrayterator(
numpy.lib.DataSource(
numpy.lib.RankWarning(
numpy.lib.Tester(
numpy.lib.__all__
numpy.lib.__builtins__
numpy.lib.__doc__
numpy.lib.__file__
numpy.lib.__name__
numpy.lib.__package__
numpy.lib.__path__
numpy.lib.__version__
numpy.lib._compiled_base
numpy.lib._datasource
numpy.lib._iotools
numpy.lib.add_docstring(
numpy.lib.add_newdoc(
numpy.lib.angle(
numpy.lib.append(
numpy.lib.apply_along_axis(
numpy.lib.apply_over_axes(
numpy.lib.array_split(
numpy.lib.arraysetops
numpy.lib.arrayterator
numpy.lib.asarray_chkfinite(
numpy.lib.asfarray(
numpy.lib.asscalar(
numpy.lib.average(
numpy.lib.bartlett(
numpy.lib.bench(
numpy.lib.bincount(
numpy.lib.blackman(
numpy.lib.broadcast_arrays(
numpy.lib.byte_bounds(
numpy.lib.c_
numpy.lib.column_stack(
numpy.lib.common_type(
numpy.lib.copy(
numpy.lib.corrcoef(
numpy.lib.cov(
numpy.lib.datetime_data(
numpy.lib.delete(
numpy.lib.deprecate(
numpy.lib.deprecate_with_doc(
numpy.lib.diag(
numpy.lib.diag_indices(
numpy.lib.diag_indices_from(
numpy.lib.diagflat(
numpy.lib.diff(
numpy.lib.digitize(
numpy.lib.disp(
numpy.lib.dsplit(
numpy.lib.dstack(
numpy.lib.ediff1d(
numpy.lib.emath
numpy.lib.expand_dims(
numpy.lib.extract(
numpy.lib.eye(
numpy.lib.fill_diagonal(
numpy.lib.financial
numpy.lib.fix(
numpy.lib.fliplr(
numpy.lib.flipud(
numpy.lib.format
numpy.lib.fromregex(
numpy.lib.function_base
numpy.lib.fv(
numpy.lib.genfromtxt(
numpy.lib.get_array_wrap(
numpy.lib.get_include(
numpy.lib.get_numarray_include(
numpy.lib.gradient(
numpy.lib.hamming(
numpy.lib.hanning(
numpy.lib.histogram(
numpy.lib.histogram2d(
numpy.lib.histogramdd(
numpy.lib.hsplit(
numpy.lib.i0(
numpy.lib.imag(
numpy.lib.in1d(
numpy.lib.index_exp
numpy.lib.index_tricks
numpy.lib.info(
numpy.lib.insert(
numpy.lib.interp(
numpy.lib.intersect1d(
numpy.lib.ipmt(
numpy.lib.irr(
numpy.lib.iscomplex(
numpy.lib.iscomplexobj(
numpy.lib.isneginf(
numpy.lib.isposinf(
numpy.lib.isreal(
numpy.lib.isrealobj(
numpy.lib.issubclass_(
numpy.lib.issubdtype(
numpy.lib.issubsctype(
numpy.lib.iterable(
numpy.lib.ix_(
numpy.lib.kaiser(
numpy.lib.kron(
numpy.lib.load(
numpy.lib.loads(
numpy.lib.loadtxt(
numpy.lib.lookfor(
numpy.lib.mafromtxt(
numpy.lib.mask_indices(
numpy.lib.math
numpy.lib.may_share_memory(
numpy.lib.median(
numpy.lib.meshgrid(
numpy.lib.mgrid
numpy.lib.mintypecode(
numpy.lib.mirr(
numpy.lib.msort(
numpy.lib.nan_to_num(
numpy.lib.nanargmax(
numpy.lib.nanargmin(
numpy.lib.nanmax(
numpy.lib.nanmin(
numpy.lib.nansum(
numpy.lib.ndenumerate(
numpy.lib.ndfromtxt(
numpy.lib.ndindex(
numpy.lib.nper(
numpy.lib.npv(
numpy.lib.npyio
numpy.lib.ogrid
numpy.lib.packbits(
numpy.lib.percentile(
numpy.lib.piecewise(
numpy.lib.place(
numpy.lib.pmt(
numpy.lib.poly(
numpy.lib.poly1d(
numpy.lib.polyadd(
numpy.lib.polyder(
numpy.lib.polydiv(
numpy.lib.polyfit(
numpy.lib.polyint(
numpy.lib.polymul(
numpy.lib.polynomial
numpy.lib.polysub(
numpy.lib.polyval(
numpy.lib.ppmt(
numpy.lib.pv(
numpy.lib.r_
numpy.lib.rate(
numpy.lib.ravel_multi_index(
numpy.lib.real(
numpy.lib.real_if_close(
numpy.lib.recfromcsv(
numpy.lib.recfromtxt(
numpy.lib.roots(
numpy.lib.rot90(
numpy.lib.row_stack(
numpy.lib.s_
numpy.lib.safe_eval(
numpy.lib.save(
numpy.lib.savetxt(
numpy.lib.savez(
numpy.lib.savez_compressed(
numpy.lib.scimath
numpy.lib.select(
numpy.lib.setdiff1d(
numpy.lib.setxor1d(
numpy.lib.shape_base
numpy.lib.sinc(
numpy.lib.sort_complex(
numpy.lib.source(
numpy.lib.split(
numpy.lib.stride_tricks
numpy.lib.test(
numpy.lib.tile(
numpy.lib.trapz(
numpy.lib.tri(
numpy.lib.tril(
numpy.lib.tril_indices(
numpy.lib.tril_indices_from(
numpy.lib.trim_zeros(
numpy.lib.triu(
numpy.lib.triu_indices(
numpy.lib.triu_indices_from(
numpy.lib.twodim_base
numpy.lib.type_check
numpy.lib.typename(
numpy.lib.ufunclike
numpy.lib.union1d(
numpy.lib.unique(
numpy.lib.unpackbits(
numpy.lib.unravel_index(
numpy.lib.unwrap(
numpy.lib.utils
numpy.lib.vander(
numpy.lib.vectorize(
numpy.lib.vsplit(
numpy.lib.who(

--- from numpy import lib ---
lib.Arrayterator(
lib.DataSource(
lib.RankWarning(
lib.Tester(
lib.__all__
lib.__builtins__
lib.__doc__
lib.__file__
lib.__name__
lib.__package__
lib.__path__
lib.__version__
lib._compiled_base
lib._datasource
lib._iotools
lib.add_docstring(
lib.add_newdoc(
lib.angle(
lib.append(
lib.apply_along_axis(
lib.apply_over_axes(
lib.array_split(
lib.arraysetops
lib.arrayterator
lib.asarray_chkfinite(
lib.asfarray(
lib.asscalar(
lib.average(
lib.bartlett(
lib.bench(
lib.bincount(
lib.blackman(
lib.broadcast_arrays(
lib.byte_bounds(
lib.c_
lib.column_stack(
lib.common_type(
lib.copy(
lib.corrcoef(
lib.cov(
lib.datetime_data(
lib.delete(
lib.deprecate(
lib.deprecate_with_doc(
lib.diag(
lib.diag_indices(
lib.diag_indices_from(
lib.diagflat(
lib.diff(
lib.digitize(
lib.disp(
lib.dsplit(
lib.dstack(
lib.ediff1d(
lib.emath
lib.expand_dims(
lib.extract(
lib.eye(
lib.fill_diagonal(
lib.financial
lib.fix(
lib.fliplr(
lib.flipud(
lib.format
lib.fromregex(
lib.function_base
lib.fv(
lib.genfromtxt(
lib.get_array_wrap(
lib.get_include(
lib.get_numarray_include(
lib.gradient(
lib.hamming(
lib.hanning(
lib.histogram(
lib.histogram2d(
lib.histogramdd(
lib.hsplit(
lib.i0(
lib.imag(
lib.in1d(
lib.index_exp
lib.index_tricks
lib.info(
lib.insert(
lib.interp(
lib.intersect1d(
lib.ipmt(
lib.irr(
lib.iscomplex(
lib.iscomplexobj(
lib.isneginf(
lib.isposinf(
lib.isreal(
lib.isrealobj(
lib.issubclass_(
lib.issubdtype(
lib.issubsctype(
lib.iterable(
lib.ix_(
lib.kaiser(
lib.kron(
lib.load(
lib.loads(
lib.loadtxt(
lib.lookfor(
lib.mafromtxt(
lib.mask_indices(
lib.math
lib.may_share_memory(
lib.median(
lib.meshgrid(
lib.mgrid
lib.mintypecode(
lib.mirr(
lib.msort(
lib.nan_to_num(
lib.nanargmax(
lib.nanargmin(
lib.nanmax(
lib.nanmin(
lib.nansum(
lib.ndenumerate(
lib.ndfromtxt(
lib.ndindex(
lib.nper(
lib.npv(
lib.npyio
lib.ogrid
lib.packbits(
lib.percentile(
lib.piecewise(
lib.place(
lib.pmt(
lib.poly(
lib.poly1d(
lib.polyadd(
lib.polyder(
lib.polydiv(
lib.polyfit(
lib.polyint(
lib.polymul(
lib.polynomial
lib.polysub(
lib.polyval(
lib.ppmt(
lib.pv(
lib.r_
lib.rate(
lib.ravel_multi_index(
lib.real(
lib.real_if_close(
lib.recfromcsv(
lib.recfromtxt(
lib.roots(
lib.rot90(
lib.row_stack(
lib.s_
lib.safe_eval(
lib.save(
lib.savetxt(
lib.savez(
lib.savez_compressed(
lib.scimath
lib.select(
lib.setdiff1d(
lib.setxor1d(
lib.shape_base
lib.sinc(
lib.sort_complex(
lib.source(
lib.split(
lib.stride_tricks
lib.test(
lib.tile(
lib.trapz(
lib.tri(
lib.tril(
lib.tril_indices(
lib.tril_indices_from(
lib.trim_zeros(
lib.triu(
lib.triu_indices(
lib.triu_indices_from(
lib.twodim_base
lib.type_check
lib.typename(
lib.ufunclike
lib.union1d(
lib.unique(
lib.unpackbits(
lib.unravel_index(
lib.unwrap(
lib.utils
lib.vander(
lib.vectorize(
lib.vsplit(
lib.who(

--- from numpy.lib import * ---
Arrayterator(
_compiled_base
_datasource
_iotools
arraysetops
arrayterator
financial
format
index_tricks
npyio
scimath
stride_tricks
twodim_base
type_check
ufunclike
utils

--- import numpy.lib._compiled_base ---
numpy.lib._compiled_base.__doc__
numpy.lib._compiled_base.__file__
numpy.lib._compiled_base.__name__
numpy.lib._compiled_base.__package__
numpy.lib._compiled_base._insert(
numpy.lib._compiled_base.add_docstring(
numpy.lib._compiled_base.bincount(
numpy.lib._compiled_base.digitize(
numpy.lib._compiled_base.error(
numpy.lib._compiled_base.interp(
numpy.lib._compiled_base.packbits(
numpy.lib._compiled_base.ravel_multi_index(
numpy.lib._compiled_base.unpackbits(
numpy.lib._compiled_base.unravel_index(

--- from numpy.lib import _compiled_base ---
_compiled_base.__doc__
_compiled_base.__file__
_compiled_base.__name__
_compiled_base.__package__
_compiled_base._insert(
_compiled_base.add_docstring(
_compiled_base.bincount(
_compiled_base.digitize(
_compiled_base.error(
_compiled_base.interp(
_compiled_base.packbits(
_compiled_base.ravel_multi_index(
_compiled_base.unpackbits(
_compiled_base.unravel_index(

--- from numpy.lib._compiled_base import * ---
_insert(

--- import numpy.lib._datasource ---
numpy.lib._datasource.DataSource(
numpy.lib._datasource.Repository(
numpy.lib._datasource._FileOpeners(
numpy.lib._datasource.__builtins__
numpy.lib._datasource.__doc__
numpy.lib._datasource.__docformat__
numpy.lib._datasource.__file__
numpy.lib._datasource.__name__
numpy.lib._datasource.__package__
numpy.lib._datasource._file_openers
numpy.lib._datasource._open(
numpy.lib._datasource.copyfile(
numpy.lib._datasource.copyfileobj(
numpy.lib._datasource.open(
numpy.lib._datasource.os
numpy.lib._datasource.rmtree(

--- from numpy.lib import _datasource ---
_datasource.DataSource(
_datasource.Repository(
_datasource._FileOpeners(
_datasource.__builtins__
_datasource.__doc__
_datasource.__docformat__
_datasource.__file__
_datasource.__name__
_datasource.__package__
_datasource._file_openers
_datasource._open(
_datasource.copyfile(
_datasource.copyfileobj(
_datasource.open(
_datasource.os
_datasource.rmtree(

--- from numpy.lib._datasource import * ---
Repository(
_FileOpeners(
_file_openers
_open(
copyfile(
copyfileobj(
open(
rmtree(

--- import numpy.lib._iotools ---
numpy.lib._iotools.ConversionWarning(
numpy.lib._iotools.ConverterError(
numpy.lib._iotools.ConverterLockError(
numpy.lib._iotools.LineSplitter(
numpy.lib._iotools.NameValidator(
numpy.lib._iotools.StringConverter(
numpy.lib._iotools.__builtins__
numpy.lib._iotools.__doc__
numpy.lib._iotools.__docformat__
numpy.lib._iotools.__file__
numpy.lib._iotools.__name__
numpy.lib._iotools.__package__
numpy.lib._iotools._bytes_to_complex(
numpy.lib._iotools._bytes_to_name(
numpy.lib._iotools._is_bytes_like(
numpy.lib._iotools._is_string_like(
numpy.lib._iotools._to_filehandle(
numpy.lib._iotools.asbytes(
numpy.lib._iotools.asbytes_nested(
numpy.lib._iotools.bool(
numpy.lib._iotools.bytes(
numpy.lib._iotools.complex(
numpy.lib._iotools.easy_dtype(
numpy.lib._iotools.flatten_dtype(
numpy.lib._iotools.float(
numpy.lib._iotools.has_nested_fields(
numpy.lib._iotools.int(
numpy.lib._iotools.long(
numpy.lib._iotools.np
numpy.lib._iotools.nx
numpy.lib._iotools.object(
numpy.lib._iotools.str(
numpy.lib._iotools.str2bool(
numpy.lib._iotools.sys
numpy.lib._iotools.unicode(

--- from numpy.lib import _iotools ---
_iotools.ConversionWarning(
_iotools.ConverterError(
_iotools.ConverterLockError(
_iotools.LineSplitter(
_iotools.NameValidator(
_iotools.StringConverter(
_iotools.__builtins__
_iotools.__doc__
_iotools.__docformat__
_iotools.__file__
_iotools.__name__
_iotools.__package__
_iotools._bytes_to_complex(
_iotools._bytes_to_name(
_iotools._is_bytes_like(
_iotools._is_string_like(
_iotools._to_filehandle(
_iotools.asbytes(
_iotools.asbytes_nested(
_iotools.bool(
_iotools.bytes(
_iotools.complex(
_iotools.easy_dtype(
_iotools.flatten_dtype(
_iotools.float(
_iotools.has_nested_fields(
_iotools.int(
_iotools.long(
_iotools.np
_iotools.nx
_iotools.object(
_iotools.str(
_iotools.str2bool(
_iotools.sys
_iotools.unicode(

--- from numpy.lib._iotools import * ---
ConversionWarning(
ConverterError(
ConverterLockError(
LineSplitter(
NameValidator(
StringConverter(
_bytes_to_complex(
_bytes_to_name(
_is_bytes_like(
_is_string_like(
_to_filehandle(
easy_dtype(
flatten_dtype(
has_nested_fields(
nx
str2bool(

--- import numpy.lib.arraysetops ---
numpy.lib.arraysetops.__all__
numpy.lib.arraysetops.__builtins__
numpy.lib.arraysetops.__doc__
numpy.lib.arraysetops.__file__
numpy.lib.arraysetops.__name__
numpy.lib.arraysetops.__package__
numpy.lib.arraysetops.deprecate(
numpy.lib.arraysetops.ediff1d(
numpy.lib.arraysetops.in1d(
numpy.lib.arraysetops.intersect1d(
numpy.lib.arraysetops.np
numpy.lib.arraysetops.setdiff1d(
numpy.lib.arraysetops.setxor1d(
numpy.lib.arraysetops.union1d(
numpy.lib.arraysetops.unique(

--- from numpy.lib import arraysetops ---
arraysetops.__all__
arraysetops.__builtins__
arraysetops.__doc__
arraysetops.__file__
arraysetops.__name__
arraysetops.__package__
arraysetops.deprecate(
arraysetops.ediff1d(
arraysetops.in1d(
arraysetops.intersect1d(
arraysetops.np
arraysetops.setdiff1d(
arraysetops.setxor1d(
arraysetops.union1d(
arraysetops.unique(

--- from numpy.lib.arraysetops import * ---

--- import numpy.lib.arrayterator ---
numpy.lib.arrayterator.Arrayterator(
numpy.lib.arrayterator.__all__
numpy.lib.arrayterator.__builtins__
numpy.lib.arrayterator.__doc__
numpy.lib.arrayterator.__file__
numpy.lib.arrayterator.__name__
numpy.lib.arrayterator.__package__
numpy.lib.arrayterator.division
numpy.lib.arrayterator.mul(
numpy.lib.arrayterator.sys

--- from numpy.lib import arrayterator ---
arrayterator.Arrayterator(
arrayterator.__all__
arrayterator.__builtins__
arrayterator.__doc__
arrayterator.__file__
arrayterator.__name__
arrayterator.__package__
arrayterator.division
arrayterator.mul(
arrayterator.sys

--- from numpy.lib.arrayterator import * ---
division
mul(

--- import numpy.lib.financial ---
numpy.lib.financial.__all__
numpy.lib.financial.__builtins__
numpy.lib.financial.__doc__
numpy.lib.financial.__file__
numpy.lib.financial.__name__
numpy.lib.financial.__package__
numpy.lib.financial._convert_when(
numpy.lib.financial._g_div_gp(
numpy.lib.financial._when_to_num
numpy.lib.financial.fv(
numpy.lib.financial.ipmt(
numpy.lib.financial.irr(
numpy.lib.financial.mirr(
numpy.lib.financial.np
numpy.lib.financial.nper(
numpy.lib.financial.npv(
numpy.lib.financial.pmt(
numpy.lib.financial.ppmt(
numpy.lib.financial.pv(
numpy.lib.financial.rate(

--- from numpy.lib import financial ---
financial.__all__
financial.__builtins__
financial.__doc__
financial.__file__
financial.__name__
financial.__package__
financial._convert_when(
financial._g_div_gp(
financial._when_to_num
financial.fv(
financial.ipmt(
financial.irr(
financial.mirr(
financial.np
financial.nper(
financial.npv(
financial.pmt(
financial.ppmt(
financial.pv(
financial.rate(

--- from numpy.lib.financial import * ---
_convert_when(
_g_div_gp(
_when_to_num

--- import numpy.lib.format ---
numpy.lib.format.MAGIC_LEN
numpy.lib.format.MAGIC_PREFIX
numpy.lib.format.__builtins__
numpy.lib.format.__doc__
numpy.lib.format.__file__
numpy.lib.format.__name__
numpy.lib.format.__package__
numpy.lib.format.asbytes(
numpy.lib.format.cPickle
numpy.lib.format.dtype_to_descr(
numpy.lib.format.header_data_from_array_1_0(
numpy.lib.format.isfileobj(
numpy.lib.format.magic(
numpy.lib.format.numpy
numpy.lib.format.open_memmap(
numpy.lib.format.read_array(
numpy.lib.format.read_array_header_1_0(
numpy.lib.format.read_magic(
numpy.lib.format.safe_eval(
numpy.lib.format.sys
numpy.lib.format.write_array(
numpy.lib.format.write_array_header_1_0(

--- from numpy.lib import format ---
format.MAGIC_LEN
format.MAGIC_PREFIX
format.__builtins__
format.__doc__
format.__file__
format.__name__
format.__package__
format.asbytes(
format.cPickle
format.dtype_to_descr(
format.header_data_from_array_1_0(
format.isfileobj(
format.magic(
format.numpy
format.open_memmap(
format.read_array(
format.read_array_header_1_0(
format.read_magic(
format.safe_eval(
format.sys
format.write_array(
format.write_array_header_1_0(

--- from numpy.lib.format import * ---
MAGIC_LEN
MAGIC_PREFIX
dtype_to_descr(
header_data_from_array_1_0(
magic(
open_memmap(
read_array(
read_array_header_1_0(
read_magic(
write_array(
write_array_header_1_0(

--- import numpy.lib.function_base ---
numpy.lib.function_base.ScalarType
numpy.lib.function_base.__all__
numpy.lib.function_base.__builtins__
numpy.lib.function_base.__doc__
numpy.lib.function_base.__docformat__
numpy.lib.function_base.__file__
numpy.lib.function_base.__name__
numpy.lib.function_base.__package__
numpy.lib.function_base._chbevl(
numpy.lib.function_base._compute_qth_percentile(
numpy.lib.function_base._get_nargs(
numpy.lib.function_base._i0A
numpy.lib.function_base._i0B
numpy.lib.function_base._i0_1(
numpy.lib.function_base._i0_2(
numpy.lib.function_base._insert(
numpy.lib.function_base._nanop(
numpy.lib.function_base._nx
numpy.lib.function_base.add(
numpy.lib.function_base.add_docstring(
numpy.lib.function_base.add_newdoc(
numpy.lib.function_base.angle(
numpy.lib.function_base.append(
numpy.lib.function_base.arange(
numpy.lib.function_base.arctan2(
numpy.lib.function_base.around(
numpy.lib.function_base.array(
numpy.lib.function_base.asanyarray(
numpy.lib.function_base.asarray(
numpy.lib.function_base.asarray_chkfinite(
numpy.lib.function_base.atleast_1d(
numpy.lib.function_base.atleast_2d(
numpy.lib.function_base.average(
numpy.lib.function_base.bartlett(
numpy.lib.function_base.bincount(
numpy.lib.function_base.blackman(
numpy.lib.function_base.choose(
numpy.lib.function_base.compiled_interp(
numpy.lib.function_base.concatenate(
numpy.lib.function_base.copy(
numpy.lib.function_base.corrcoef(
numpy.lib.function_base.cos(
numpy.lib.function_base.cov(
numpy.lib.function_base.delete(
numpy.lib.function_base.deprecate(
numpy.lib.function_base.diag(
numpy.lib.function_base.diff(
numpy.lib.function_base.digitize(
numpy.lib.function_base.disp(
numpy.lib.function_base.dot(
numpy.lib.function_base.empty(
numpy.lib.function_base.empty_like(
numpy.lib.function_base.exp(
numpy.lib.function_base.extract(
numpy.lib.function_base.frompyfunc(
numpy.lib.function_base.gradient(
numpy.lib.function_base.hamming(
numpy.lib.function_base.hanning(
numpy.lib.function_base.histogram(
numpy.lib.function_base.histogramdd(
numpy.lib.function_base.i0(
numpy.lib.function_base.insert(
numpy.lib.function_base.integer(
numpy.lib.function_base.interp(
numpy.lib.function_base.intp(
numpy.lib.function_base.isnan(
numpy.lib.function_base.isscalar(
numpy.lib.function_base.iterable(
numpy.lib.function_base.kaiser(
numpy.lib.function_base.less_equal(
numpy.lib.function_base.linspace(
numpy.lib.function_base.log10(
numpy.lib.function_base.mean(
numpy.lib.function_base.median(
numpy.lib.function_base.meshgrid(
numpy.lib.function_base.mod(
numpy.lib.function_base.msort(
numpy.lib.function_base.multiply(
numpy.lib.function_base.nanargmax(
numpy.lib.function_base.nanargmin(
numpy.lib.function_base.nanmax(
numpy.lib.function_base.nanmin(
numpy.lib.function_base.nansum(
numpy.lib.function_base.ndarray(
numpy.lib.function_base.newaxis
numpy.lib.function_base.nonzero(
numpy.lib.function_base.np
numpy.lib.function_base.number(
numpy.lib.function_base.ones(
numpy.lib.function_base.percentile(
numpy.lib.function_base.pi
numpy.lib.function_base.piecewise(
numpy.lib.function_base.place(
numpy.lib.function_base.ravel(
numpy.lib.function_base.select(
numpy.lib.function_base.setdiff1d(
numpy.lib.function_base.sin(
numpy.lib.function_base.sinc(
numpy.lib.function_base.sort(
numpy.lib.function_base.sort_complex(
numpy.lib.function_base.sqrt(
numpy.lib.function_base.sys
numpy.lib.function_base.trapz(
numpy.lib.function_base.trim_zeros(
numpy.lib.function_base.typecodes
numpy.lib.function_base.types
numpy.lib.function_base.unique(
numpy.lib.function_base.unwrap(
numpy.lib.function_base.vectorize(
numpy.lib.function_base.warnings
numpy.lib.function_base.where(
numpy.lib.function_base.zeros(

--- from numpy.lib import function_base ---
function_base.ScalarType
function_base.__docformat__
function_base._chbevl(
function_base._compute_qth_percentile(
function_base._get_nargs(
function_base._i0A
function_base._i0B
function_base._i0_1(
function_base._i0_2(
function_base._insert(
function_base._nanop(
function_base.add(
function_base.add_docstring(
function_base.add_newdoc(
function_base.angle(
function_base.append(
function_base.arange(
function_base.arctan2(
function_base.around(
function_base.asanyarray(
function_base.asarray(
function_base.asarray_chkfinite(
function_base.atleast_1d(
function_base.atleast_2d(
function_base.average(
function_base.bartlett(
function_base.bincount(
function_base.blackman(
function_base.choose(
function_base.compiled_interp(
function_base.concatenate(
function_base.copy(
function_base.corrcoef(
function_base.cos(
function_base.cov(
function_base.delete(
function_base.deprecate(
function_base.diag(
function_base.diff(
function_base.digitize(
function_base.disp(
function_base.dot(
function_base.empty(
function_base.empty_like(
function_base.exp(
function_base.extract(
function_base.frompyfunc(
function_base.gradient(
function_base.hamming(
function_base.hanning(
function_base.histogram(
function_base.histogramdd(
function_base.i0(
function_base.insert(
function_base.integer(
function_base.interp(
function_base.intp(
function_base.isnan(
function_base.isscalar(
function_base.iterable(
function_base.kaiser(
function_base.less_equal(
function_base.log10(
function_base.mean(
function_base.median(
function_base.meshgrid(
function_base.mod(
function_base.msort(
function_base.multiply(
function_base.nanargmax(
function_base.nanargmin(
function_base.nanmax(
function_base.nanmin(
function_base.nansum(
function_base.ndarray(
function_base.newaxis
function_base.nonzero(
function_base.np
function_base.number(
function_base.ones(
function_base.percentile(
function_base.pi
function_base.piecewise(
function_base.place(
function_base.ravel(
function_base.select(
function_base.setdiff1d(
function_base.sin(
function_base.sinc(
function_base.sort(
function_base.sort_complex(
function_base.sqrt(
function_base.sys
function_base.trapz(
function_base.trim_zeros(
function_base.typecodes
function_base.types
function_base.unique(
function_base.unwrap(
function_base.vectorize(
function_base.warnings
function_base.where(
function_base.zeros(

--- from numpy.lib.function_base import * ---
_chbevl(
_compute_qth_percentile(
_get_nargs(
_i0A
_i0B
_i0_1(
_i0_2(
_nanop(
compiled_interp(

--- import numpy.lib.index_tricks ---
numpy.lib.index_tricks.AxisConcatenator(
numpy.lib.index_tricks.CClass(
numpy.lib.index_tricks.IndexExpression(
numpy.lib.index_tricks.RClass(
numpy.lib.index_tricks.ScalarType
numpy.lib.index_tricks.__all__
numpy.lib.index_tricks.__builtins__
numpy.lib.index_tricks.__doc__
numpy.lib.index_tricks.__file__
numpy.lib.index_tricks.__name__
numpy.lib.index_tricks.__package__
numpy.lib.index_tricks._nx
numpy.lib.index_tricks.alltrue(
numpy.lib.index_tricks.arange(
numpy.lib.index_tricks.array(
numpy.lib.index_tricks.asarray(
numpy.lib.index_tricks.c_
numpy.lib.index_tricks.cumprod(
numpy.lib.index_tricks.diag_indices(
numpy.lib.index_tricks.diag_indices_from(
numpy.lib.index_tricks.diff(
numpy.lib.index_tricks.fill_diagonal(
numpy.lib.index_tricks.find_common_type(
numpy.lib.index_tricks.function_base
numpy.lib.index_tricks.index_exp
numpy.lib.index_tricks.ix_(
numpy.lib.index_tricks.makemat(
numpy.lib.index_tricks.math
numpy.lib.index_tricks.matrix
numpy.lib.index_tricks.mgrid
numpy.lib.index_tricks.nd_grid(
numpy.lib.index_tricks.ndenumerate(
numpy.lib.index_tricks.ndindex(
numpy.lib.index_tricks.ogrid
numpy.lib.index_tricks.r_
numpy.lib.index_tricks.ravel_multi_index(
numpy.lib.index_tricks.s_
numpy.lib.index_tricks.sys
numpy.lib.index_tricks.unravel_index(

--- from numpy.lib import index_tricks ---
index_tricks.AxisConcatenator(
index_tricks.CClass(
index_tricks.IndexExpression(
index_tricks.RClass(
index_tricks.ScalarType
index_tricks.__all__
index_tricks.__builtins__
index_tricks.__doc__
index_tricks.__file__
index_tricks.__name__
index_tricks.__package__
index_tricks._nx
index_tricks.alltrue(
index_tricks.arange(
index_tricks.array(
index_tricks.asarray(
index_tricks.c_
index_tricks.cumprod(
index_tricks.diag_indices(
index_tricks.diag_indices_from(
index_tricks.diff(
index_tricks.fill_diagonal(
index_tricks.find_common_type(
index_tricks.function_base
index_tricks.index_exp
index_tricks.ix_(
index_tricks.makemat(
index_tricks.math
index_tricks.matrix
index_tricks.mgrid
index_tricks.nd_grid(
index_tricks.ndenumerate(
index_tricks.ndindex(
index_tricks.ogrid
index_tricks.r_
index_tricks.ravel_multi_index(
index_tricks.s_
index_tricks.sys
index_tricks.unravel_index(

--- from numpy.lib.index_tricks import * ---
AxisConcatenator(
CClass(
IndexExpression(
RClass(
makemat(
matrix
nd_grid(

--- import numpy.lib.npyio ---
numpy.lib.npyio.BagObj(
numpy.lib.npyio.BytesIO(
numpy.lib.npyio.ConversionWarning(
numpy.lib.npyio.ConverterError(
numpy.lib.npyio.ConverterLockError(
numpy.lib.npyio.DataSource(
numpy.lib.npyio.LineSplitter(
numpy.lib.npyio.NameValidator(
numpy.lib.npyio.NpzFile(
numpy.lib.npyio.StringConverter(
numpy.lib.npyio.__all__
numpy.lib.npyio.__builtins__
numpy.lib.npyio.__doc__
numpy.lib.npyio.__file__
numpy.lib.npyio.__name__
numpy.lib.npyio.__package__
numpy.lib.npyio._bytes_to_name(
numpy.lib.npyio._cload(
numpy.lib.npyio._getconv(
numpy.lib.npyio._is_string_like(
numpy.lib.npyio._savez(
numpy.lib.npyio._string_like(
numpy.lib.npyio.asbytes(
numpy.lib.npyio.asbytes_nested(
numpy.lib.npyio.asstr(
numpy.lib.npyio.bytes(
numpy.lib.npyio.easy_dtype(
numpy.lib.npyio.flatten_dtype(
numpy.lib.npyio.format
numpy.lib.npyio.fromregex(
numpy.lib.npyio.genfromtxt(
numpy.lib.npyio.has_nested_fields(
numpy.lib.npyio.itemgetter(
numpy.lib.npyio.itertools
numpy.lib.npyio.load(
numpy.lib.npyio.loads(
numpy.lib.npyio.loadtxt(
numpy.lib.npyio.mafromtxt(
numpy.lib.npyio.ndfromtxt(
numpy.lib.npyio.np
numpy.lib.npyio.os
numpy.lib.npyio.packbits(
numpy.lib.npyio.re
numpy.lib.npyio.recfromcsv(
numpy.lib.npyio.recfromtxt(
numpy.lib.npyio.save(
numpy.lib.npyio.savetxt(
numpy.lib.npyio.savez(
numpy.lib.npyio.savez_compressed(
numpy.lib.npyio.seek_gzip_factory(
numpy.lib.npyio.sys
numpy.lib.npyio.unpackbits(
numpy.lib.npyio.warnings
numpy.lib.npyio.zipfile_factory(

--- from numpy.lib import npyio ---
npyio.BagObj(
npyio.BytesIO(
npyio.ConversionWarning(
npyio.ConverterError(
npyio.ConverterLockError(
npyio.DataSource(
npyio.LineSplitter(
npyio.NameValidator(
npyio.NpzFile(
npyio.StringConverter(
npyio.__all__
npyio.__builtins__
npyio.__doc__
npyio.__file__
npyio.__name__
npyio.__package__
npyio._bytes_to_name(
npyio._cload(
npyio._getconv(
npyio._is_string_like(
npyio._savez(
npyio._string_like(
npyio.asbytes(
npyio.asbytes_nested(
npyio.asstr(
npyio.bytes(
npyio.easy_dtype(
npyio.flatten_dtype(
npyio.format
npyio.fromregex(
npyio.genfromtxt(
npyio.has_nested_fields(
npyio.itemgetter(
npyio.itertools
npyio.load(
npyio.loads(
npyio.loadtxt(
npyio.mafromtxt(
npyio.ndfromtxt(
npyio.np
npyio.os
npyio.packbits(
npyio.re
npyio.recfromcsv(
npyio.recfromtxt(
npyio.save(
npyio.savetxt(
npyio.savez(
npyio.savez_compressed(
npyio.seek_gzip_factory(
npyio.sys
npyio.unpackbits(
npyio.warnings
npyio.zipfile_factory(

--- from numpy.lib.npyio import * ---
BagObj(
BytesIO(
NpzFile(
_getconv(
_savez(
_string_like(
itemgetter(
itertools
seek_gzip_factory(
zipfile_factory(

--- import numpy.lib.polynomial ---
numpy.lib.polynomial.NX
numpy.lib.polynomial.RankWarning(
numpy.lib.polynomial.__all__
numpy.lib.polynomial.__builtins__
numpy.lib.polynomial.__doc__
numpy.lib.polynomial.__file__
numpy.lib.polynomial.__name__
numpy.lib.polynomial.__package__
numpy.lib.polynomial._poly_mat
numpy.lib.polynomial._raise_power(
numpy.lib.polynomial.abs(
numpy.lib.polynomial.atleast_1d(
numpy.lib.polynomial.diag(
numpy.lib.polynomial.eigvals(
numpy.lib.polynomial.finfo(
numpy.lib.polynomial.hstack(
numpy.lib.polynomial.imag(
numpy.lib.polynomial.iscomplex(
numpy.lib.polynomial.isscalar(
numpy.lib.polynomial.lstsq(
numpy.lib.polynomial.poly(
numpy.lib.polynomial.poly1d(
numpy.lib.polynomial.polyadd(
numpy.lib.polynomial.polyder(
numpy.lib.polynomial.polydiv(
numpy.lib.polynomial.polyfit(
numpy.lib.polynomial.polyint(
numpy.lib.polynomial.polymul(
numpy.lib.polynomial.polysub(
numpy.lib.polynomial.polyval(
numpy.lib.polynomial.re
numpy.lib.polynomial.real(
numpy.lib.polynomial.roots(
numpy.lib.polynomial.sort_complex(
numpy.lib.polynomial.trim_zeros(
numpy.lib.polynomial.vander(
numpy.lib.polynomial.warnings

--- from numpy.lib import polynomial ---
polynomial.NX
polynomial.RankWarning(
polynomial.__all__
polynomial.__builtins__
polynomial.__doc__
polynomial.__file__
polynomial.__name__
polynomial.__package__
polynomial._poly_mat
polynomial._raise_power(
polynomial.abs(
polynomial.atleast_1d(
polynomial.diag(
polynomial.eigvals(
polynomial.finfo(
polynomial.hstack(
polynomial.imag(
polynomial.iscomplex(
polynomial.isscalar(
polynomial.lstsq(
polynomial.poly(
polynomial.poly1d(
polynomial.polyadd(
polynomial.polyder(
polynomial.polydiv(
polynomial.polyfit(
polynomial.polyint(
polynomial.polymul(
polynomial.polysub(
polynomial.polyval(
polynomial.re
polynomial.real(
polynomial.roots(
polynomial.sort_complex(
polynomial.trim_zeros(
polynomial.vander(
polynomial.warnings

--- from numpy.lib.polynomial import * ---
NX
_poly_mat
_raise_power(
eigvals(
lstsq(

--- import numpy.lib.scimath ---
numpy.lib.scimath.__all__
numpy.lib.scimath.__builtins__
numpy.lib.scimath.__doc__
numpy.lib.scimath.__file__
numpy.lib.scimath.__name__
numpy.lib.scimath.__package__
numpy.lib.scimath._fix_int_lt_zero(
numpy.lib.scimath._fix_real_abs_gt_1(
numpy.lib.scimath._fix_real_lt_zero(
numpy.lib.scimath._ln2
numpy.lib.scimath._tocomplex(
numpy.lib.scimath.any(
numpy.lib.scimath.arccos(
numpy.lib.scimath.arcsin(
numpy.lib.scimath.arctanh(
numpy.lib.scimath.asarray(
numpy.lib.scimath.isreal(
numpy.lib.scimath.log(
numpy.lib.scimath.log10(
numpy.lib.scimath.log2(
numpy.lib.scimath.logn(
numpy.lib.scimath.nt
numpy.lib.scimath.nx
numpy.lib.scimath.power(
numpy.lib.scimath.sqrt(

--- from numpy.lib import scimath ---
scimath.__all__
scimath.__builtins__
scimath.__doc__
scimath.__file__
scimath.__name__
scimath.__package__
scimath._fix_int_lt_zero(
scimath._fix_real_abs_gt_1(
scimath._fix_real_lt_zero(
scimath._ln2
scimath._tocomplex(
scimath.any(
scimath.arccos(
scimath.arcsin(
scimath.arctanh(
scimath.asarray(
scimath.isreal(
scimath.log(
scimath.log10(
scimath.log2(
scimath.logn(
scimath.nt
scimath.nx
scimath.power(
scimath.sqrt(

--- from numpy.lib.scimath import * ---
_fix_int_lt_zero(
_fix_real_abs_gt_1(
_fix_real_lt_zero(
_ln2
_tocomplex(
logn(

--- import numpy.lib.shape_base ---
numpy.lib.shape_base.__all__
numpy.lib.shape_base.__builtins__
numpy.lib.shape_base.__doc__
numpy.lib.shape_base.__file__
numpy.lib.shape_base.__name__
numpy.lib.shape_base.__package__
numpy.lib.shape_base._nx
numpy.lib.shape_base._replace_zero_by_x_arrays(
numpy.lib.shape_base.apply_along_axis(
numpy.lib.shape_base.apply_over_axes(
numpy.lib.shape_base.array(
numpy.lib.shape_base.array_split(
numpy.lib.shape_base.asanyarray(
numpy.lib.shape_base.asarray(
numpy.lib.shape_base.atleast_3d(
numpy.lib.shape_base.column_stack(
numpy.lib.shape_base.concatenate(
numpy.lib.shape_base.dsplit(
numpy.lib.shape_base.dstack(
numpy.lib.shape_base.expand_dims(
numpy.lib.shape_base.get_array_prepare(
numpy.lib.shape_base.get_array_wrap(
numpy.lib.shape_base.hsplit(
numpy.lib.shape_base.hstack(
numpy.lib.shape_base.isscalar(
numpy.lib.shape_base.kron(
numpy.lib.shape_base.newaxis
numpy.lib.shape_base.outer(
numpy.lib.shape_base.product(
numpy.lib.shape_base.reshape(
numpy.lib.shape_base.row_stack(
numpy.lib.shape_base.split(
numpy.lib.shape_base.tile(
numpy.lib.shape_base.vsplit(
numpy.lib.shape_base.vstack(
numpy.lib.shape_base.zeros(

--- from numpy.lib import shape_base ---
shape_base._replace_zero_by_x_arrays(
shape_base.apply_along_axis(
shape_base.apply_over_axes(
shape_base.array_split(
shape_base.asarray(
shape_base.column_stack(
shape_base.concatenate(
shape_base.dsplit(
shape_base.dstack(
shape_base.expand_dims(
shape_base.get_array_prepare(
shape_base.get_array_wrap(
shape_base.hsplit(
shape_base.isscalar(
shape_base.kron(
shape_base.outer(
shape_base.product(
shape_base.reshape(
shape_base.row_stack(
shape_base.split(
shape_base.tile(
shape_base.vsplit(
shape_base.zeros(

--- from numpy.lib.shape_base import * ---
_replace_zero_by_x_arrays(
get_array_prepare(

--- import numpy.lib.stride_tricks ---
numpy.lib.stride_tricks.DummyArray(
numpy.lib.stride_tricks.__all__
numpy.lib.stride_tricks.__builtins__
numpy.lib.stride_tricks.__doc__
numpy.lib.stride_tricks.__file__
numpy.lib.stride_tricks.__name__
numpy.lib.stride_tricks.__package__
numpy.lib.stride_tricks.as_strided(
numpy.lib.stride_tricks.broadcast_arrays(
numpy.lib.stride_tricks.np

--- from numpy.lib import stride_tricks ---
stride_tricks.DummyArray(
stride_tricks.__all__
stride_tricks.__builtins__
stride_tricks.__doc__
stride_tricks.__file__
stride_tricks.__name__
stride_tricks.__package__
stride_tricks.as_strided(
stride_tricks.broadcast_arrays(
stride_tricks.np

--- from numpy.lib.stride_tricks import * ---
DummyArray(
as_strided(

--- import numpy.lib.twodim_base ---
numpy.lib.twodim_base.__all__
numpy.lib.twodim_base.__builtins__
numpy.lib.twodim_base.__doc__
numpy.lib.twodim_base.__file__
numpy.lib.twodim_base.__name__
numpy.lib.twodim_base.__package__
numpy.lib.twodim_base.alltrue(
numpy.lib.twodim_base.arange(
numpy.lib.twodim_base.asanyarray(
numpy.lib.twodim_base.asarray(
numpy.lib.twodim_base.diag(
numpy.lib.twodim_base.diagflat(
numpy.lib.twodim_base.empty(
numpy.lib.twodim_base.equal(
numpy.lib.twodim_base.eye(
numpy.lib.twodim_base.fliplr(
numpy.lib.twodim_base.flipud(
numpy.lib.twodim_base.greater_equal(
numpy.lib.twodim_base.histogram2d(
numpy.lib.twodim_base.mask_indices(
numpy.lib.twodim_base.multiply(
numpy.lib.twodim_base.ones(
numpy.lib.twodim_base.rot90(
numpy.lib.twodim_base.subtract(
numpy.lib.twodim_base.tri(
numpy.lib.twodim_base.tril(
numpy.lib.twodim_base.tril_indices(
numpy.lib.twodim_base.tril_indices_from(
numpy.lib.twodim_base.triu(
numpy.lib.twodim_base.triu_indices(
numpy.lib.twodim_base.triu_indices_from(
numpy.lib.twodim_base.vander(
numpy.lib.twodim_base.where(
numpy.lib.twodim_base.zeros(

--- from numpy.lib import twodim_base ---
twodim_base.__all__
twodim_base.__builtins__
twodim_base.__doc__
twodim_base.__file__
twodim_base.__name__
twodim_base.__package__
twodim_base.alltrue(
twodim_base.arange(
twodim_base.asanyarray(
twodim_base.asarray(
twodim_base.diag(
twodim_base.diagflat(
twodim_base.empty(
twodim_base.equal(
twodim_base.eye(
twodim_base.fliplr(
twodim_base.flipud(
twodim_base.greater_equal(
twodim_base.histogram2d(
twodim_base.mask_indices(
twodim_base.multiply(
twodim_base.ones(
twodim_base.rot90(
twodim_base.subtract(
twodim_base.tri(
twodim_base.tril(
twodim_base.tril_indices(
twodim_base.tril_indices_from(
twodim_base.triu(
twodim_base.triu_indices(
twodim_base.triu_indices_from(
twodim_base.vander(
twodim_base.where(
twodim_base.zeros(

--- from numpy.lib.twodim_base import * ---

--- import numpy.lib.type_check ---
numpy.lib.type_check.METADATA_DTSTR
numpy.lib.type_check.__all__
numpy.lib.type_check.__builtins__
numpy.lib.type_check.__doc__
numpy.lib.type_check.__file__
numpy.lib.type_check.__name__
numpy.lib.type_check.__package__
numpy.lib.type_check._getmaxmin(
numpy.lib.type_check._namefromtype
numpy.lib.type_check._nx
numpy.lib.type_check._typecodes_by_elsize
numpy.lib.type_check.array(
numpy.lib.type_check.array_precision
numpy.lib.type_check.array_type
numpy.lib.type_check.asanyarray(
numpy.lib.type_check.asarray(
numpy.lib.type_check.asfarray(
numpy.lib.type_check.asscalar(
numpy.lib.type_check.common_type(
numpy.lib.type_check.datetime_data(
numpy.lib.type_check.imag(
numpy.lib.type_check.iscomplex(
numpy.lib.type_check.iscomplexobj(
numpy.lib.type_check.isnan(
numpy.lib.type_check.isneginf(
numpy.lib.type_check.isposinf(
numpy.lib.type_check.isreal(
numpy.lib.type_check.isrealobj(
numpy.lib.type_check.mintypecode(
numpy.lib.type_check.nan_to_num(
numpy.lib.type_check.obj2sctype(
numpy.lib.type_check.real(
numpy.lib.type_check.real_if_close(
numpy.lib.type_check.typename(
numpy.lib.type_check.zeros(

--- from numpy.lib import type_check ---
type_check.METADATA_DTSTR
type_check.__all__
type_check.__builtins__
type_check.__doc__
type_check.__file__
type_check.__name__
type_check.__package__
type_check._getmaxmin(
type_check._namefromtype
type_check._nx
type_check._typecodes_by_elsize
type_check.array(
type_check.array_precision
type_check.array_type
type_check.asanyarray(
type_check.asarray(
type_check.asfarray(
type_check.asscalar(
type_check.common_type(
type_check.datetime_data(
type_check.imag(
type_check.iscomplex(
type_check.iscomplexobj(
type_check.isnan(
type_check.isneginf(
type_check.isposinf(
type_check.isreal(
type_check.isrealobj(
type_check.mintypecode(
type_check.nan_to_num(
type_check.obj2sctype(
type_check.real(
type_check.real_if_close(
type_check.typename(
type_check.zeros(

--- from numpy.lib.type_check import * ---
_getmaxmin(
_namefromtype
_typecodes_by_elsize
array_precision
array_type

--- import numpy.lib.ufunclike ---
numpy.lib.ufunclike.__all__
numpy.lib.ufunclike.__builtins__
numpy.lib.ufunclike.__doc__
numpy.lib.ufunclike.__file__
numpy.lib.ufunclike.__name__
numpy.lib.ufunclike.__package__
numpy.lib.ufunclike.fix(
numpy.lib.ufunclike.isneginf(
numpy.lib.ufunclike.isposinf(
numpy.lib.ufunclike.nx

--- from numpy.lib import ufunclike ---
ufunclike.__all__
ufunclike.__builtins__
ufunclike.__doc__
ufunclike.__file__
ufunclike.__name__
ufunclike.__package__
ufunclike.fix(
ufunclike.isneginf(
ufunclike.isposinf(
ufunclike.nx

--- from numpy.lib.ufunclike import * ---

--- import numpy.lib.utils ---
numpy.lib.utils.SafeEval(
numpy.lib.utils._Deprecate(
numpy.lib.utils.__all__
numpy.lib.utils.__builtins__
numpy.lib.utils.__doc__
numpy.lib.utils.__file__
numpy.lib.utils.__name__
numpy.lib.utils.__package__
numpy.lib.utils._dictlist
numpy.lib.utils._function_signature_re
numpy.lib.utils._getmembers(
numpy.lib.utils._lookfor_caches
numpy.lib.utils._lookfor_generate_cache(
numpy.lib.utils._makenamedict(
numpy.lib.utils._namedict
numpy.lib.utils._set_function_name(
numpy.lib.utils._split_line(
numpy.lib.utils.byte_bounds(
numpy.lib.utils.deprecate(
numpy.lib.utils.deprecate_with_doc(
numpy.lib.utils.get_include(
numpy.lib.utils.get_numarray_include(
numpy.lib.utils.info(
numpy.lib.utils.issubclass_(
numpy.lib.utils.issubdtype(
numpy.lib.utils.issubsctype(
numpy.lib.utils.lookfor(
numpy.lib.utils.may_share_memory(
numpy.lib.utils.ndarray(
numpy.lib.utils.os
numpy.lib.utils.product(
numpy.lib.utils.re
numpy.lib.utils.safe_eval(
numpy.lib.utils.source(
numpy.lib.utils.sys
numpy.lib.utils.types
numpy.lib.utils.ufunc(
numpy.lib.utils.who(

--- from numpy.lib import utils ---
utils.SafeEval(
utils._Deprecate(
utils.__all__
utils.__builtins__
utils.__doc__
utils.__file__
utils.__name__
utils.__package__
utils._dictlist
utils._function_signature_re
utils._getmembers(
utils._lookfor_caches
utils._lookfor_generate_cache(
utils._makenamedict(
utils._namedict
utils._set_function_name(
utils._split_line(
utils.byte_bounds(
utils.deprecate(
utils.deprecate_with_doc(
utils.get_include(
utils.get_numarray_include(
utils.info(
utils.issubclass_(
utils.issubdtype(
utils.issubsctype(
utils.lookfor(
utils.may_share_memory(
utils.ndarray(
utils.os
utils.product(
utils.re
utils.safe_eval(
utils.source(
utils.sys
utils.types
utils.ufunc(
utils.who(

--- from numpy.lib.utils import * ---
SafeEval(
_Deprecate(
_dictlist
_function_signature_re
_getmembers(
_lookfor_caches
_lookfor_generate_cache(
_makenamedict(
_namedict
_set_function_name(
_split_line(

--- import numpy.linalg ---
numpy.linalg.LinAlgError(
numpy.linalg.Tester(
numpy.linalg.__builtins__
numpy.linalg.__doc__
numpy.linalg.__file__
numpy.linalg.__name__
numpy.linalg.__package__
numpy.linalg.__path__
numpy.linalg.bench(
numpy.linalg.cholesky(
numpy.linalg.cond(
numpy.linalg.det(
numpy.linalg.eig(
numpy.linalg.eigh(
numpy.linalg.eigvals(
numpy.linalg.eigvalsh(
numpy.linalg.info
numpy.linalg.inv(
numpy.linalg.lapack_lite
numpy.linalg.linalg
numpy.linalg.lstsq(
numpy.linalg.matrix_power(
numpy.linalg.matrix_rank(
numpy.linalg.norm(
numpy.linalg.pinv(
numpy.linalg.qr(
numpy.linalg.slogdet(
numpy.linalg.solve(
numpy.linalg.svd(
numpy.linalg.tensorinv(
numpy.linalg.tensorsolve(
numpy.linalg.test(

--- from numpy import linalg ---
linalg.LinAlgError(
linalg.Tester(
linalg.__builtins__
linalg.__doc__
linalg.__file__
linalg.__name__
linalg.__package__
linalg.__path__
linalg.bench(
linalg.cholesky(
linalg.cond(
linalg.det(
linalg.eig(
linalg.eigh(
linalg.eigvals(
linalg.eigvalsh(
linalg.info
linalg.inv(
linalg.lapack_lite
linalg.linalg
linalg.lstsq(
linalg.matrix_power(
linalg.matrix_rank(
linalg.norm(
linalg.pinv(
linalg.qr(
linalg.slogdet(
linalg.solve(
linalg.svd(
linalg.tensorinv(
linalg.tensorsolve(
linalg.test(

--- from numpy.linalg import * ---
LinAlgError(
cholesky(
cond(
det(
eig(
eigh(
eigvalsh(
inv(
lapack_lite
matrix_power(
matrix_rank(
norm(
pinv(
qr(
slogdet(
solve(
svd(
tensorinv(
tensorsolve(

--- import numpy.linalg.info ---
numpy.linalg.info.__builtins__
numpy.linalg.info.__doc__
numpy.linalg.info.__file__
numpy.linalg.info.__name__
numpy.linalg.info.__package__
numpy.linalg.info.depends

--- from numpy.linalg import info ---

--- from numpy.linalg.info import * ---

--- import numpy.linalg.lapack_lite ---
numpy.linalg.lapack_lite.LapackError(
numpy.linalg.lapack_lite.__doc__
numpy.linalg.lapack_lite.__file__
numpy.linalg.lapack_lite.__name__
numpy.linalg.lapack_lite.__package__
numpy.linalg.lapack_lite.dgeev(
numpy.linalg.lapack_lite.dgelsd(
numpy.linalg.lapack_lite.dgeqrf(
numpy.linalg.lapack_lite.dgesdd(
numpy.linalg.lapack_lite.dgesv(
numpy.linalg.lapack_lite.dgetrf(
numpy.linalg.lapack_lite.dorgqr(
numpy.linalg.lapack_lite.dpotrf(
numpy.linalg.lapack_lite.dsyevd(
numpy.linalg.lapack_lite.zgeev(
numpy.linalg.lapack_lite.zgelsd(
numpy.linalg.lapack_lite.zgeqrf(
numpy.linalg.lapack_lite.zgesdd(
numpy.linalg.lapack_lite.zgesv(
numpy.linalg.lapack_lite.zgetrf(
numpy.linalg.lapack_lite.zheevd(
numpy.linalg.lapack_lite.zpotrf(
numpy.linalg.lapack_lite.zungqr(

--- from numpy.linalg import lapack_lite ---
lapack_lite.LapackError(
lapack_lite.__doc__
lapack_lite.__file__
lapack_lite.__name__
lapack_lite.__package__
lapack_lite.dgeev(
lapack_lite.dgelsd(
lapack_lite.dgeqrf(
lapack_lite.dgesdd(
lapack_lite.dgesv(
lapack_lite.dgetrf(
lapack_lite.dorgqr(
lapack_lite.dpotrf(
lapack_lite.dsyevd(
lapack_lite.zgeev(
lapack_lite.zgelsd(
lapack_lite.zgeqrf(
lapack_lite.zgesdd(
lapack_lite.zgesv(
lapack_lite.zgetrf(
lapack_lite.zheevd(
lapack_lite.zpotrf(
lapack_lite.zungqr(

--- from numpy.linalg.lapack_lite import * ---
LapackError(
dgeev(
dgelsd(
dgeqrf(
dgesdd(
dgesv(
dgetrf(
dorgqr(
dpotrf(
dsyevd(
zgeev(
zgelsd(
zgeqrf(
zgesdd(
zgesv(
zgetrf(
zheevd(
zpotrf(
zungqr(

--- import numpy.linalg.linalg ---
numpy.linalg.linalg.Inf
numpy.linalg.linalg.LinAlgError(
numpy.linalg.linalg._A
numpy.linalg.linalg._L
numpy.linalg.linalg._N
numpy.linalg.linalg._S
numpy.linalg.linalg._V
numpy.linalg.linalg.__all__
numpy.linalg.linalg.__builtins__
numpy.linalg.linalg.__doc__
numpy.linalg.linalg.__file__
numpy.linalg.linalg.__name__
numpy.linalg.linalg.__package__
numpy.linalg.linalg._assertFinite(
numpy.linalg.linalg._assertNonEmpty(
numpy.linalg.linalg._assertRank2(
numpy.linalg.linalg._assertSquareness(
numpy.linalg.linalg._commonType(
numpy.linalg.linalg._complexType(
numpy.linalg.linalg._complex_types_map
numpy.linalg.linalg._convertarray(
numpy.linalg.linalg._fastCT(
numpy.linalg.linalg._fastCopyAndTranspose(
numpy.linalg.linalg._linalgRealType(
numpy.linalg.linalg._makearray(
numpy.linalg.linalg._realType(
numpy.linalg.linalg._real_types_map
numpy.linalg.linalg._to_native_byte_order(
numpy.linalg.linalg.absolute(
numpy.linalg.linalg.add(
numpy.linalg.linalg.all(
numpy.linalg.linalg.arange(
numpy.linalg.linalg.array(
numpy.linalg.linalg.asarray(
numpy.linalg.linalg.asbytes(
numpy.linalg.linalg.cdouble(
numpy.linalg.linalg.cholesky(
numpy.linalg.linalg.complexfloating(
numpy.linalg.linalg.cond(
numpy.linalg.linalg.csingle(
numpy.linalg.linalg.det(
numpy.linalg.linalg.diagonal(
numpy.linalg.linalg.dot(
numpy.linalg.linalg.double(
numpy.linalg.linalg.eig(
numpy.linalg.linalg.eigh(
numpy.linalg.linalg.eigvals(
numpy.linalg.linalg.eigvalsh(
numpy.linalg.linalg.empty(
numpy.linalg.linalg.exp(
numpy.linalg.linalg.fastCopyAndTranspose(
numpy.linalg.linalg.finfo(
numpy.linalg.linalg.flatnonzero(
numpy.linalg.linalg.fortran_int(
numpy.linalg.linalg.identity(
numpy.linalg.linalg.inexact(
numpy.linalg.linalg.intc(
numpy.linalg.linalg.inv(
numpy.linalg.linalg.isComplexType(
numpy.linalg.linalg.isfinite(
numpy.linalg.linalg.lapack_lite
numpy.linalg.linalg.log(
numpy.linalg.linalg.lstsq(
numpy.linalg.linalg.matrix_power(
numpy.linalg.linalg.matrix_rank(
numpy.linalg.linalg.maximum(
numpy.linalg.linalg.multiply(
numpy.linalg.linalg.newaxis
numpy.linalg.linalg.norm(
numpy.linalg.linalg.pinv(
numpy.linalg.linalg.qr(
numpy.linalg.linalg.ravel(
numpy.linalg.linalg.single(
numpy.linalg.linalg.size(
numpy.linalg.linalg.slogdet(
numpy.linalg.linalg.solve(
numpy.linalg.linalg.sqrt(
numpy.linalg.linalg.sum(
numpy.linalg.linalg.svd(
numpy.linalg.linalg.tensorinv(
numpy.linalg.linalg.tensorsolve(
numpy.linalg.linalg.transpose(
numpy.linalg.linalg.triu(
numpy.linalg.linalg.zeros(

--- from numpy.linalg import linalg ---
linalg.Inf
linalg._A
linalg._L
linalg._N
linalg._S
linalg._V
linalg.__all__
linalg._assertFinite(
linalg._assertNonEmpty(
linalg._assertRank2(
linalg._assertSquareness(
linalg._commonType(
linalg._complexType(
linalg._complex_types_map
linalg._convertarray(
linalg._fastCT(
linalg._fastCopyAndTranspose(
linalg._linalgRealType(
linalg._makearray(
linalg._realType(
linalg._real_types_map
linalg._to_native_byte_order(
linalg.absolute(
linalg.add(
linalg.all(
linalg.arange(
linalg.array(
linalg.asarray(
linalg.asbytes(
linalg.cdouble(
linalg.complexfloating(
linalg.csingle(
linalg.diagonal(
linalg.dot(
linalg.double(
linalg.empty(
linalg.exp(
linalg.fastCopyAndTranspose(
linalg.finfo(
linalg.flatnonzero(
linalg.fortran_int(
linalg.identity(
linalg.inexact(
linalg.intc(
linalg.isComplexType(
linalg.isfinite(
linalg.log(
linalg.maximum(
linalg.multiply(
linalg.newaxis
linalg.ravel(
linalg.single(
linalg.size(
linalg.sqrt(
linalg.sum(
linalg.transpose(
linalg.triu(
linalg.zeros(

--- from numpy.linalg.linalg import * ---
_A
_L
_N
_S
_V
_assertFinite(
_assertNonEmpty(
_assertRank2(
_assertSquareness(
_commonType(
_complexType(
_complex_types_map
_convertarray(
_fastCT(
_linalgRealType(
_makearray(
_realType(
_real_types_map
_to_native_byte_order(
fortran_int(
isComplexType(

--- import numpy.ma ---
numpy.ma.MAError(
numpy.ma.MaskError(
numpy.ma.MaskType(
numpy.ma.MaskedArray(
numpy.ma.Tester(
numpy.ma.__all__
numpy.ma.__author__
numpy.ma.__builtins__
numpy.ma.__date__
numpy.ma.__doc__
numpy.ma.__file__
numpy.ma.__name__
numpy.ma.__package__
numpy.ma.__path__
numpy.ma.__revision__
numpy.ma.__version__
numpy.ma.abs(
numpy.ma.absolute(
numpy.ma.add(
numpy.ma.all(
numpy.ma.allclose(
numpy.ma.allequal(
numpy.ma.alltrue(
numpy.ma.amax(
numpy.ma.amin(
numpy.ma.anom(
numpy.ma.anomalies(
numpy.ma.any(
numpy.ma.apply_along_axis(
numpy.ma.apply_over_axes(
numpy.ma.arange(
numpy.ma.arccos(
numpy.ma.arccosh(
numpy.ma.arcsin(
numpy.ma.arcsinh(
numpy.ma.arctan(
numpy.ma.arctan2(
numpy.ma.arctanh(
numpy.ma.argmax(
numpy.ma.argmin(
numpy.ma.argsort(
numpy.ma.around(
numpy.ma.array(
numpy.ma.asanyarray(
numpy.ma.asarray(
numpy.ma.atleast_1d(
numpy.ma.atleast_2d(
numpy.ma.atleast_3d(
numpy.ma.average(
numpy.ma.bench(
numpy.ma.bitwise_and(
numpy.ma.bitwise_or(
numpy.ma.bitwise_xor(
numpy.ma.bool_(
numpy.ma.ceil(
numpy.ma.choose(
numpy.ma.clip(
numpy.ma.clump_masked(
numpy.ma.clump_unmasked(
numpy.ma.column_stack(
numpy.ma.common_fill_value(
numpy.ma.compress(
numpy.ma.compress_cols(
numpy.ma.compress_rowcols(
numpy.ma.compress_rows(
numpy.ma.compressed(
numpy.ma.concatenate(
numpy.ma.conjugate(
numpy.ma.copy(
numpy.ma.core
numpy.ma.corrcoef(
numpy.ma.cos(
numpy.ma.cosh(
numpy.ma.count(
numpy.ma.count_masked(
numpy.ma.cov(
numpy.ma.cumprod(
numpy.ma.cumsum(
numpy.ma.default_fill_value(
numpy.ma.diag(
numpy.ma.diagflat(
numpy.ma.diagonal(
numpy.ma.diff(
numpy.ma.divide(
numpy.ma.dot(
numpy.ma.dstack(
numpy.ma.dump(
numpy.ma.dumps(
numpy.ma.ediff1d(
numpy.ma.empty(
numpy.ma.empty_like(
numpy.ma.equal(
numpy.ma.exp(
numpy.ma.expand_dims(
numpy.ma.extras
numpy.ma.fabs(
numpy.ma.filled(
numpy.ma.fix_invalid(
numpy.ma.flatnotmasked_contiguous(
numpy.ma.flatnotmasked_edges(
numpy.ma.flatten_mask(
numpy.ma.flatten_structured_array(
numpy.ma.floor(
numpy.ma.floor_divide(
numpy.ma.fmod(
numpy.ma.frombuffer(
numpy.ma.fromflex(
numpy.ma.fromfunction(
numpy.ma.getdata(
numpy.ma.getmask(
numpy.ma.getmaskarray(
numpy.ma.greater(
numpy.ma.greater_equal(
numpy.ma.harden_mask(
numpy.ma.hsplit(
numpy.ma.hstack(
numpy.ma.hypot(
numpy.ma.identity(
numpy.ma.ids(
numpy.ma.in1d(
numpy.ma.indices(
numpy.ma.inner(
numpy.ma.innerproduct(
numpy.ma.intersect1d(
numpy.ma.isMA(
numpy.ma.isMaskedArray(
numpy.ma.is_mask(
numpy.ma.is_masked(
numpy.ma.isarray(
numpy.ma.left_shift(
numpy.ma.less(
numpy.ma.less_equal(
numpy.ma.load(
numpy.ma.loads(
numpy.ma.log(
numpy.ma.log10(
numpy.ma.log2(
numpy.ma.logical_and(
numpy.ma.logical_not(
numpy.ma.logical_or(
numpy.ma.logical_xor(
numpy.ma.make_mask(
numpy.ma.make_mask_descr(
numpy.ma.make_mask_none(
numpy.ma.mask_cols(
numpy.ma.mask_or(
numpy.ma.mask_rowcols(
numpy.ma.mask_rows(
numpy.ma.masked
numpy.ma.masked_all(
numpy.ma.masked_all_like(
numpy.ma.masked_array(
numpy.ma.masked_equal(
numpy.ma.masked_greater(
numpy.ma.masked_greater_equal(
numpy.ma.masked_inside(
numpy.ma.masked_invalid(
numpy.ma.masked_less(
numpy.ma.masked_less_equal(
numpy.ma.masked_not_equal(
numpy.ma.masked_object(
numpy.ma.masked_outside(
numpy.ma.masked_print_option
numpy.ma.masked_singleton
numpy.ma.masked_values(
numpy.ma.masked_where(
numpy.ma.max(
numpy.ma.maximum(
numpy.ma.maximum_fill_value(
numpy.ma.mean(
numpy.ma.median(
numpy.ma.min(
numpy.ma.minimum(
numpy.ma.minimum_fill_value(
numpy.ma.mod(
numpy.ma.mr_
numpy.ma.multiply(
numpy.ma.mvoid(
numpy.ma.negative(
numpy.ma.nomask
numpy.ma.nonzero(
numpy.ma.not_equal(
numpy.ma.notmasked_contiguous(
numpy.ma.notmasked_edges(
numpy.ma.ones(
numpy.ma.outer(
numpy.ma.outerproduct(
numpy.ma.polyfit(
numpy.ma.power(
numpy.ma.prod(
numpy.ma.product(
numpy.ma.ptp(
numpy.ma.put(
numpy.ma.putmask(
numpy.ma.rank(
numpy.ma.ravel(
numpy.ma.remainder(
numpy.ma.repeat(
numpy.ma.reshape(
numpy.ma.resize(
numpy.ma.right_shift(
numpy.ma.round(
numpy.ma.round_(
numpy.ma.row_stack(
numpy.ma.set_fill_value(
numpy.ma.setdiff1d(
numpy.ma.setxor1d(
numpy.ma.shape(
numpy.ma.sin(
numpy.ma.sinh(
numpy.ma.size(
numpy.ma.soften_mask(
numpy.ma.sometrue(
numpy.ma.sort(
numpy.ma.sqrt(
numpy.ma.squeeze(
numpy.ma.std(
numpy.ma.subtract(
numpy.ma.sum(
numpy.ma.swapaxes(
numpy.ma.take(
numpy.ma.tan(
numpy.ma.tanh(
numpy.ma.test(
numpy.ma.trace(
numpy.ma.transpose(
numpy.ma.true_divide(
numpy.ma.union1d(
numpy.ma.unique(
numpy.ma.vander(
numpy.ma.var(
numpy.ma.vstack(
numpy.ma.where(
numpy.ma.zeros(

--- from numpy import ma ---
ma.MAError(
ma.MaskError(
ma.MaskType(
ma.MaskedArray(
ma.Tester(
ma.__all__
ma.__author__
ma.__builtins__
ma.__date__
ma.__doc__
ma.__file__
ma.__name__
ma.__package__
ma.__path__
ma.__revision__
ma.__version__
ma.abs(
ma.absolute(
ma.add(
ma.all(
ma.allclose(
ma.allequal(
ma.alltrue(
ma.amax(
ma.amin(
ma.anom(
ma.anomalies(
ma.any(
ma.apply_along_axis(
ma.apply_over_axes(
ma.arange(
ma.arccos(
ma.arccosh(
ma.arcsin(
ma.arcsinh(
ma.arctan(
ma.arctan2(
ma.arctanh(
ma.argmax(
ma.argmin(
ma.argsort(
ma.around(
ma.array(
ma.asanyarray(
ma.asarray(
ma.atleast_1d(
ma.atleast_2d(
ma.atleast_3d(
ma.average(
ma.bench(
ma.bitwise_and(
ma.bitwise_or(
ma.bitwise_xor(
ma.bool_(
ma.ceil(
ma.choose(
ma.clip(
ma.clump_masked(
ma.clump_unmasked(
ma.column_stack(
ma.common_fill_value(
ma.compress(
ma.compress_cols(
ma.compress_rowcols(
ma.compress_rows(
ma.compressed(
ma.concatenate(
ma.conjugate(
ma.copy(
ma.core
ma.corrcoef(
ma.cos(
ma.cosh(
ma.count(
ma.count_masked(
ma.cov(
ma.cumprod(
ma.cumsum(
ma.default_fill_value(
ma.diag(
ma.diagflat(
ma.diagonal(
ma.diff(
ma.divide(
ma.dot(
ma.dstack(
ma.dump(
ma.dumps(
ma.ediff1d(
ma.empty(
ma.empty_like(
ma.equal(
ma.exp(
ma.expand_dims(
ma.extras
ma.fabs(
ma.filled(
ma.fix_invalid(
ma.flatnotmasked_contiguous(
ma.flatnotmasked_edges(
ma.flatten_mask(
ma.flatten_structured_array(
ma.floor(
ma.floor_divide(
ma.fmod(
ma.frombuffer(
ma.fromflex(
ma.fromfunction(
ma.getdata(
ma.getmask(
ma.getmaskarray(
ma.greater(
ma.greater_equal(
ma.harden_mask(
ma.hsplit(
ma.hstack(
ma.hypot(
ma.identity(
ma.ids(
ma.in1d(
ma.indices(
ma.inner(
ma.innerproduct(
ma.intersect1d(
ma.isMA(
ma.isMaskedArray(
ma.is_mask(
ma.is_masked(
ma.isarray(
ma.left_shift(
ma.less(
ma.less_equal(
ma.load(
ma.loads(
ma.log(
ma.log10(
ma.log2(
ma.logical_and(
ma.logical_not(
ma.logical_or(
ma.logical_xor(
ma.make_mask(
ma.make_mask_descr(
ma.make_mask_none(
ma.mask_cols(
ma.mask_or(
ma.mask_rowcols(
ma.mask_rows(
ma.masked
ma.masked_all(
ma.masked_all_like(
ma.masked_array(
ma.masked_equal(
ma.masked_greater(
ma.masked_greater_equal(
ma.masked_inside(
ma.masked_invalid(
ma.masked_less(
ma.masked_less_equal(
ma.masked_not_equal(
ma.masked_object(
ma.masked_outside(
ma.masked_print_option
ma.masked_singleton
ma.masked_values(
ma.masked_where(
ma.max(
ma.maximum(
ma.maximum_fill_value(
ma.mean(
ma.median(
ma.min(
ma.minimum(
ma.minimum_fill_value(
ma.mod(
ma.mr_
ma.multiply(
ma.mvoid(
ma.negative(
ma.nomask
ma.nonzero(
ma.not_equal(
ma.notmasked_contiguous(
ma.notmasked_edges(
ma.ones(
ma.outer(
ma.outerproduct(
ma.polyfit(
ma.power(
ma.prod(
ma.product(
ma.ptp(
ma.put(
ma.putmask(
ma.rank(
ma.ravel(
ma.remainder(
ma.repeat(
ma.reshape(
ma.resize(
ma.right_shift(
ma.round(
ma.round_(
ma.row_stack(
ma.set_fill_value(
ma.setdiff1d(
ma.setxor1d(
ma.shape(
ma.sin(
ma.sinh(
ma.size(
ma.soften_mask(
ma.sometrue(
ma.sort(
ma.sqrt(
ma.squeeze(
ma.std(
ma.subtract(
ma.sum(
ma.swapaxes(
ma.take(
ma.tan(
ma.tanh(
ma.test(
ma.trace(
ma.transpose(
ma.true_divide(
ma.union1d(
ma.unique(
ma.vander(
ma.var(
ma.vstack(
ma.where(
ma.zeros(

--- from numpy.ma import * ---
MAError(
MaskError(
MaskType(
MaskedArray(
anom(
anomalies(
clump_masked(
clump_unmasked(
common_fill_value(
compress_cols(
compress_rowcols(
compress_rows(
compressed(
count_masked(
default_fill_value(
dump(
dumps(
extras
filled(
fix_invalid(
flatnotmasked_contiguous(
flatnotmasked_edges(
flatten_mask(
flatten_structured_array(
fromflex(
getdata(
getmask(
getmaskarray(
harden_mask(
ids(
innerproduct(
isMA(
isMaskedArray(
is_mask(
is_masked(
isarray(
make_mask(
make_mask_descr(
make_mask_none(
mask_cols(
mask_or(
mask_rowcols(
mask_rows(
masked
masked_all(
masked_all_like(
masked_array(
masked_equal(
masked_greater(
masked_greater_equal(
masked_inside(
masked_invalid(
masked_less(
masked_less_equal(
masked_not_equal(
masked_object(
masked_outside(
masked_print_option
masked_singleton
masked_values(
masked_where(
maximum_fill_value(
minimum_fill_value(
mr_
mvoid(
nomask
notmasked_contiguous(
notmasked_edges(
outerproduct(
set_fill_value(
soften_mask(

--- import numpy.ma.core ---
numpy.ma.core.MAError(
numpy.ma.core.MaskError(
numpy.ma.core.MaskType(
numpy.ma.core.MaskedArray(
numpy.ma.core.MaskedConstant(
numpy.ma.core.MaskedIterator(
numpy.ma.core._DomainCheckInterval(
numpy.ma.core._DomainGreater(
numpy.ma.core._DomainGreaterEqual(
numpy.ma.core._DomainSafeDivide(
numpy.ma.core._DomainTan(
numpy.ma.core._DomainedBinaryOperation(
numpy.ma.core._MaskedBinaryOperation(
numpy.ma.core._MaskedPrintOption(
numpy.ma.core._MaskedUnaryOperation(
numpy.ma.core.__all__
numpy.ma.core.__author__
numpy.ma.core.__builtins__
numpy.ma.core.__doc__
numpy.ma.core.__docformat__
numpy.ma.core.__file__
numpy.ma.core.__name__
numpy.ma.core.__package__
numpy.ma.core._arraymethod(
numpy.ma.core._check_fill_value(
numpy.ma.core._check_mask_axis(
numpy.ma.core._convert2ma(
numpy.ma.core._extrema_operation(
numpy.ma.core._frommethod(
numpy.ma.core._mareconstruct(
numpy.ma.core._maximum_operation(
numpy.ma.core._minimum_operation(
numpy.ma.core._print_templates
numpy.ma.core._recursive_extremum_fill_value(
numpy.ma.core._recursive_filled(
numpy.ma.core._recursive_make_descr(
numpy.ma.core._recursive_printoption(
numpy.ma.core._recursive_set_default_fill_value(
numpy.ma.core._recursive_set_fill_value(
numpy.ma.core.abs(
numpy.ma.core.absolute(
numpy.ma.core.add(
numpy.ma.core.all(
numpy.ma.core.allclose(
numpy.ma.core.allequal(
numpy.ma.core.alltrue(
numpy.ma.core.amax(
numpy.ma.core.amin(
numpy.ma.core.anom(
numpy.ma.core.anomalies(
numpy.ma.core.any(
numpy.ma.core.arange(
numpy.ma.core.arccos(
numpy.ma.core.arccosh(
numpy.ma.core.arcsin(
numpy.ma.core.arcsinh(
numpy.ma.core.arctan(
numpy.ma.core.arctan2(
numpy.ma.core.arctanh(
numpy.ma.core.argmax(
numpy.ma.core.argmin(
numpy.ma.core.argsort(
numpy.ma.core.around(
numpy.ma.core.array(
numpy.ma.core.asanyarray(
numpy.ma.core.asarray(
numpy.ma.core.bitwise_and(
numpy.ma.core.bitwise_or(
numpy.ma.core.bitwise_xor(
numpy.ma.core.bool_(
numpy.ma.core.cPickle
numpy.ma.core.ceil(
numpy.ma.core.choose(
numpy.ma.core.clip(
numpy.ma.core.common_fill_value(
numpy.ma.core.compress(
numpy.ma.core.compressed(
numpy.ma.core.concatenate(
numpy.ma.core.conjugate(
numpy.ma.core.copy(
numpy.ma.core.cos(
numpy.ma.core.cosh(
numpy.ma.core.count(
numpy.ma.core.cumprod(
numpy.ma.core.cumsum(
numpy.ma.core.default_fill_value(
numpy.ma.core.default_filler
numpy.ma.core.diag(
numpy.ma.core.diagonal(
numpy.ma.core.diff(
numpy.ma.core.divide(
numpy.ma.core.doc_note(
numpy.ma.core.dump(
numpy.ma.core.dumps(
numpy.ma.core.empty(
numpy.ma.core.empty_like(
numpy.ma.core.equal(
numpy.ma.core.exp(
numpy.ma.core.expand_dims(
numpy.ma.core.fabs(
numpy.ma.core.filled(
numpy.ma.core.fix_invalid(
numpy.ma.core.flatten_mask(
numpy.ma.core.flatten_structured_array(
numpy.ma.core.floor(
numpy.ma.core.floor_divide(
numpy.ma.core.fmod(
numpy.ma.core.formatargspec(
numpy.ma.core.frombuffer(
numpy.ma.core.fromfile(
numpy.ma.core.fromflex(
numpy.ma.core.fromfunction(
numpy.ma.core.get_data(
numpy.ma.core.get_fill_value(
numpy.ma.core.get_mask(
numpy.ma.core.get_masked_subclass(
numpy.ma.core.get_object_signature(
numpy.ma.core.getargspec(
numpy.ma.core.getdata(
numpy.ma.core.getmask(
numpy.ma.core.getmaskarray(
numpy.ma.core.greater(
numpy.ma.core.greater_equal(
numpy.ma.core.harden_mask(
numpy.ma.core.hypot(
numpy.ma.core.identity(
numpy.ma.core.ids(
numpy.ma.core.indices(
numpy.ma.core.inner(
numpy.ma.core.innerproduct(
numpy.ma.core.isMA(
numpy.ma.core.isMaskedArray(
numpy.ma.core.is_mask(
numpy.ma.core.is_masked(
numpy.ma.core.isarray(
numpy.ma.core.iscomplexobj(
numpy.ma.core.k(
numpy.ma.core.left_shift(
numpy.ma.core.less(
numpy.ma.core.less_equal(
numpy.ma.core.load(
numpy.ma.core.loads(
numpy.ma.core.log(
numpy.ma.core.log10(
numpy.ma.core.log2(
numpy.ma.core.logical_and(
numpy.ma.core.logical_not(
numpy.ma.core.logical_or(
numpy.ma.core.logical_xor(
numpy.ma.core.make_mask(
numpy.ma.core.make_mask_descr(
numpy.ma.core.make_mask_none(
numpy.ma.core.mask_or(
numpy.ma.core.masked
numpy.ma.core.masked_array(
numpy.ma.core.masked_equal(
numpy.ma.core.masked_greater(
numpy.ma.core.masked_greater_equal(
numpy.ma.core.masked_inside(
numpy.ma.core.masked_invalid(
numpy.ma.core.masked_less(
numpy.ma.core.masked_less_equal(
numpy.ma.core.masked_not_equal(
numpy.ma.core.masked_object(
numpy.ma.core.masked_outside(
numpy.ma.core.masked_print_option
numpy.ma.core.masked_singleton
numpy.ma.core.masked_values(
numpy.ma.core.masked_where(
numpy.ma.core.max(
numpy.ma.core.max_filler
numpy.ma.core.maximum(
numpy.ma.core.maximum_fill_value(
numpy.ma.core.mean(
numpy.ma.core.min(
numpy.ma.core.min_filler
numpy.ma.core.minimum(
numpy.ma.core.minimum_fill_value(
numpy.ma.core.mod(
numpy.ma.core.multiply(
numpy.ma.core.mvoid(
numpy.ma.core.n_expand_dims(
numpy.ma.core.narray(
numpy.ma.core.ndarray(
numpy.ma.core.negative(
numpy.ma.core.nomask
numpy.ma.core.nonzero(
numpy.ma.core.not_equal(
numpy.ma.core.np
numpy.ma.core.ntypes
numpy.ma.core.ones(
numpy.ma.core.ones_like(
numpy.ma.core.outer(
numpy.ma.core.outerproduct(
numpy.ma.core.power(
numpy.ma.core.prod(
numpy.ma.core.product(
numpy.ma.core.ptp(
numpy.ma.core.put(
numpy.ma.core.putmask(
numpy.ma.core.rank(
numpy.ma.core.ravel(
numpy.ma.core.remainder(
numpy.ma.core.repeat(
numpy.ma.core.reshape(
numpy.ma.core.resize(
numpy.ma.core.right_shift(
numpy.ma.core.round(
numpy.ma.core.round_(
numpy.ma.core.set_fill_value(
numpy.ma.core.shape(
numpy.ma.core.shrink_mask(
numpy.ma.core.sin(
numpy.ma.core.sinh(
numpy.ma.core.size(
numpy.ma.core.soften_mask(
numpy.ma.core.sometrue(
numpy.ma.core.sort(
numpy.ma.core.sqrt(
numpy.ma.core.squeeze(
numpy.ma.core.std(
numpy.ma.core.subtract(
numpy.ma.core.sum(
numpy.ma.core.swapaxes(
numpy.ma.core.sys
numpy.ma.core.take(
numpy.ma.core.tan(
numpy.ma.core.tanh(
numpy.ma.core.trace(
numpy.ma.core.transpose(
numpy.ma.core.true_divide(
numpy.ma.core.ufunc_domain
numpy.ma.core.ufunc_fills
numpy.ma.core.umath
numpy.ma.core.var(
numpy.ma.core.warnings
numpy.ma.core.where(
numpy.ma.core.zeros(
numpy.ma.core.zeros_like(

--- from numpy.ma import core ---
core.MAError(
core.MaskError(
core.MaskType(
core.MaskedArray(
core.MaskedConstant(
core.MaskedIterator(
core._DomainCheckInterval(
core._DomainGreater(
core._DomainGreaterEqual(
core._DomainSafeDivide(
core._DomainTan(
core._DomainedBinaryOperation(
core._MaskedBinaryOperation(
core._MaskedPrintOption(
core._MaskedUnaryOperation(
core.__author__
core.__docformat__
core._arraymethod(
core._check_fill_value(
core._check_mask_axis(
core._convert2ma(
core._extrema_operation(
core._frommethod(
core._mareconstruct(
core._maximum_operation(
core._minimum_operation(
core._print_templates
core._recursive_extremum_fill_value(
core._recursive_filled(
core._recursive_make_descr(
core._recursive_printoption(
core._recursive_set_default_fill_value(
core._recursive_set_fill_value(
core.allequal(
core.anom(
core.anomalies(
core.cPickle
core.common_fill_value(
core.compressed(
core.copy(
core.count(
core.default_fill_value(
core.default_filler
core.diag(
core.diff(
core.doc_note(
core.dump(
core.dumps(
core.expand_dims(
core.filled(
core.fix_invalid(
core.flatten_mask(
core.flatten_structured_array(
core.formatargspec(
core.fromflex(
core.get_data(
core.get_fill_value(
core.get_mask(
core.get_masked_subclass(
core.get_object_signature(
core.getargspec(
core.getdata(
core.getmask(
core.getmaskarray(
core.harden_mask(
core.ids(
core.innerproduct(
core.isMA(
core.isMaskedArray(
core.is_mask(
core.is_masked(
core.isarray(
core.iscomplexobj(
core.k(
core.make_mask(
core.make_mask_descr(
core.make_mask_none(
core.mask_or(
core.masked
core.masked_array(
core.masked_equal(
core.masked_greater(
core.masked_greater_equal(
core.masked_inside(
core.masked_invalid(
core.masked_less(
core.masked_less_equal(
core.masked_not_equal(
core.masked_object(
core.masked_outside(
core.masked_print_option
core.masked_singleton
core.masked_values(
core.masked_where(
core.max_filler
core.maximum_fill_value(
core.min_filler
core.minimum_fill_value(
core.mvoid(
core.n_expand_dims(
core.narray(
core.nomask
core.np
core.ntypes
core.outerproduct(
core.set_fill_value(
core.shrink_mask(
core.soften_mask(
core.sys
core.ufunc_domain
core.ufunc_fills
core.warnings

--- from numpy.ma.core import * ---
MaskedConstant(
MaskedIterator(
_DomainCheckInterval(
_DomainGreater(
_DomainGreaterEqual(
_DomainSafeDivide(
_DomainTan(
_DomainedBinaryOperation(
_MaskedBinaryOperation(
_MaskedPrintOption(
_MaskedUnaryOperation(
_arraymethod(
_check_fill_value(
_check_mask_axis(
_convert2ma(
_extrema_operation(
_frommethod(
_mareconstruct(
_maximum_operation(
_minimum_operation(
_print_templates
_recursive_extremum_fill_value(
_recursive_filled(
_recursive_make_descr(
_recursive_printoption(
_recursive_set_default_fill_value(
_recursive_set_fill_value(
default_filler
doc_note(
get_data(
get_fill_value(
get_mask(
get_masked_subclass(
get_object_signature(
k(
max_filler
min_filler
n_expand_dims(
shrink_mask(
ufunc_domain
ufunc_fills

--- import numpy.ma.extras ---
numpy.ma.extras.AxisConcatenator(
numpy.ma.extras.MAError(
numpy.ma.extras.MAxisConcatenator(
numpy.ma.extras.MaskedArray(
numpy.ma.extras.__all__
numpy.ma.extras.__author__
numpy.ma.extras.__builtins__
numpy.ma.extras.__date__
numpy.ma.extras.__doc__
numpy.ma.extras.__file__
numpy.ma.extras.__name__
numpy.ma.extras.__package__
numpy.ma.extras.__revision__
numpy.ma.extras.__version__
numpy.ma.extras._covhelper(
numpy.ma.extras._ezclump(
numpy.ma.extras._fromnxfunction(
numpy.ma.extras.add(
numpy.ma.extras.apply_along_axis(
numpy.ma.extras.apply_over_axes(
numpy.ma.extras.array(
numpy.ma.extras.asarray(
numpy.ma.extras.atleast_1d(
numpy.ma.extras.atleast_2d(
numpy.ma.extras.atleast_3d(
numpy.ma.extras.average(
numpy.ma.extras.clump_masked(
numpy.ma.extras.clump_unmasked(
numpy.ma.extras.column_stack(
numpy.ma.extras.compress_cols(
numpy.ma.extras.compress_rowcols(
numpy.ma.extras.compress_rows(
numpy.ma.extras.concatenate(
numpy.ma.extras.corrcoef(
numpy.ma.extras.count(
numpy.ma.extras.count_masked(
numpy.ma.extras.cov(
numpy.ma.extras.diagflat(
numpy.ma.extras.dot(
numpy.ma.extras.dstack(
numpy.ma.extras.ediff1d(
numpy.ma.extras.filled(
numpy.ma.extras.flatnotmasked_contiguous(
numpy.ma.extras.flatnotmasked_edges(
numpy.ma.extras.flatten_inplace(
numpy.ma.extras.getmask(
numpy.ma.extras.getmaskarray(
numpy.ma.extras.hsplit(
numpy.ma.extras.hstack(
numpy.ma.extras.in1d(
numpy.ma.extras.intersect1d(
numpy.ma.extras.issequence(
numpy.ma.extras.itertools
numpy.ma.extras.lstsq(
numpy.ma.extras.ma
numpy.ma.extras.make_mask_descr(
numpy.ma.extras.mask_cols(
numpy.ma.extras.mask_or(
numpy.ma.extras.mask_rowcols(
numpy.ma.extras.mask_rows(
numpy.ma.extras.masked
numpy.ma.extras.masked_all(
numpy.ma.extras.masked_all_like(
numpy.ma.extras.masked_array(
numpy.ma.extras.median(
numpy.ma.extras.mr_
numpy.ma.extras.mr_class(
numpy.ma.extras.ndarray(
numpy.ma.extras.nomask
numpy.ma.extras.notmasked_contiguous(
numpy.ma.extras.notmasked_edges(
numpy.ma.extras.np
numpy.ma.extras.nxarray(
numpy.ma.extras.ones(
numpy.ma.extras.polyfit(
numpy.ma.extras.row_stack(
numpy.ma.extras.setdiff1d(
numpy.ma.extras.setxor1d(
numpy.ma.extras.sort(
numpy.ma.extras.umath
numpy.ma.extras.union1d(
numpy.ma.extras.unique(
numpy.ma.extras.vander(
numpy.ma.extras.vstack(
numpy.ma.extras.warnings
numpy.ma.extras.zeros(

--- from numpy.ma import extras ---
extras.AxisConcatenator(
extras.MAError(
extras.MAxisConcatenator(
extras.MaskedArray(
extras.__all__
extras.__author__
extras.__builtins__
extras.__date__
extras.__doc__
extras.__file__
extras.__name__
extras.__package__
extras.__revision__
extras.__version__
extras._covhelper(
extras._ezclump(
extras._fromnxfunction(
extras.add(
extras.apply_along_axis(
extras.apply_over_axes(
extras.array(
extras.asarray(
extras.atleast_1d(
extras.atleast_2d(
extras.atleast_3d(
extras.average(
extras.clump_masked(
extras.clump_unmasked(
extras.column_stack(
extras.compress_cols(
extras.compress_rowcols(
extras.compress_rows(
extras.concatenate(
extras.corrcoef(
extras.count(
extras.count_masked(
extras.cov(
extras.diagflat(
extras.dot(
extras.dstack(
extras.ediff1d(
extras.filled(
extras.flatnotmasked_contiguous(
extras.flatnotmasked_edges(
extras.flatten_inplace(
extras.getmask(
extras.getmaskarray(
extras.hsplit(
extras.hstack(
extras.in1d(
extras.intersect1d(
extras.issequence(
extras.itertools
extras.lstsq(
extras.ma
extras.make_mask_descr(
extras.mask_cols(
extras.mask_or(
extras.mask_rowcols(
extras.mask_rows(
extras.masked
extras.masked_all(
extras.masked_all_like(
extras.masked_array(
extras.median(
extras.mr_
extras.mr_class(
extras.ndarray(
extras.nomask
extras.notmasked_contiguous(
extras.notmasked_edges(
extras.np
extras.nxarray(
extras.ones(
extras.polyfit(
extras.row_stack(
extras.setdiff1d(
extras.setxor1d(
extras.sort(
extras.umath
extras.union1d(
extras.unique(
extras.vander(
extras.vstack(
extras.warnings
extras.zeros(

--- from numpy.ma.extras import * ---
MAxisConcatenator(
_covhelper(
_ezclump(
_fromnxfunction(
flatten_inplace(
issequence(
mr_class(
nxarray(

--- import numpy.matrixlib ---
numpy.matrixlib.Tester(
numpy.matrixlib.__all__
numpy.matrixlib.__builtins__
numpy.matrixlib.__doc__
numpy.matrixlib.__file__
numpy.matrixlib.__name__
numpy.matrixlib.__package__
numpy.matrixlib.__path__
numpy.matrixlib.asmatrix(
numpy.matrixlib.bench(
numpy.matrixlib.bmat(
numpy.matrixlib.defmatrix
numpy.matrixlib.mat(
numpy.matrixlib.matrix(
numpy.matrixlib.test(

--- from numpy import matrixlib ---
matrixlib.Tester(
matrixlib.__all__
matrixlib.__builtins__
matrixlib.__doc__
matrixlib.__file__
matrixlib.__name__
matrixlib.__package__
matrixlib.__path__
matrixlib.asmatrix(
matrixlib.bench(
matrixlib.bmat(
matrixlib.defmatrix
matrixlib.mat(
matrixlib.matrix(
matrixlib.test(

--- from numpy.matrixlib import * ---
defmatrix

--- import numpy.matrixlib.defmatrix ---
numpy.matrixlib.defmatrix.N
numpy.matrixlib.defmatrix.__all__
numpy.matrixlib.defmatrix.__builtins__
numpy.matrixlib.defmatrix.__doc__
numpy.matrixlib.defmatrix.__file__
numpy.matrixlib.defmatrix.__name__
numpy.matrixlib.defmatrix.__package__
numpy.matrixlib.defmatrix._convert_from_string(
numpy.matrixlib.defmatrix._eval(
numpy.matrixlib.defmatrix._from_string(
numpy.matrixlib.defmatrix._numchars
numpy.matrixlib.defmatrix._table
numpy.matrixlib.defmatrix._todelete
numpy.matrixlib.defmatrix.asanyarray(
numpy.matrixlib.defmatrix.asmatrix(
numpy.matrixlib.defmatrix.binary_repr(
numpy.matrixlib.defmatrix.bmat(
numpy.matrixlib.defmatrix.concatenate(
numpy.matrixlib.defmatrix.identity(
numpy.matrixlib.defmatrix.isscalar(
numpy.matrixlib.defmatrix.issubdtype(
numpy.matrixlib.defmatrix.mat(
numpy.matrixlib.defmatrix.matrix(
numpy.matrixlib.defmatrix.matrix_power(
numpy.matrixlib.defmatrix.sys

--- from numpy.matrixlib import defmatrix ---
defmatrix.N
defmatrix.__all__
defmatrix.__builtins__
defmatrix.__doc__
defmatrix.__file__
defmatrix.__name__
defmatrix.__package__
defmatrix._convert_from_string(
defmatrix._eval(
defmatrix._from_string(
defmatrix._numchars
defmatrix._table
defmatrix._todelete
defmatrix.asanyarray(
defmatrix.asmatrix(
defmatrix.binary_repr(
defmatrix.bmat(
defmatrix.concatenate(
defmatrix.identity(
defmatrix.isscalar(
defmatrix.issubdtype(
defmatrix.mat(
defmatrix.matrix(
defmatrix.matrix_power(
defmatrix.sys

--- from numpy.matrixlib.defmatrix import * ---
N
_convert_from_string(
_eval(
_from_string(
_numchars
_table
_todelete

--- import numpy.polynomial ---
numpy.polynomial.Chebyshev(
numpy.polynomial.Hermite(
numpy.polynomial.HermiteE(
numpy.polynomial.Laguerre(
numpy.polynomial.Legendre(
numpy.polynomial.Polynomial(
numpy.polynomial.Tester(
numpy.polynomial.__builtins__
numpy.polynomial.__doc__
numpy.polynomial.__file__
numpy.polynomial.__name__
numpy.polynomial.__package__
numpy.polynomial.__path__
numpy.polynomial.as_series(
numpy.polynomial.bench(
numpy.polynomial.cheb2poly(
numpy.polynomial.chebadd(
numpy.polynomial.chebder(
numpy.polynomial.chebdiv(
numpy.polynomial.chebfit(
numpy.polynomial.chebfromroots(
numpy.polynomial.chebint(
numpy.polynomial.chebline(
numpy.polynomial.chebmul(
numpy.polynomial.chebmulx(
numpy.polynomial.chebpow(
numpy.polynomial.chebpts1(
numpy.polynomial.chebpts2(
numpy.polynomial.chebroots(
numpy.polynomial.chebsub(
numpy.polynomial.chebval(
numpy.polynomial.chebvander(
numpy.polynomial.chebyshev
numpy.polynomial.deprecate(
numpy.polynomial.getdomain(
numpy.polynomial.hermite
numpy.polynomial.hermite_e
numpy.polynomial.laguerre
numpy.polynomial.leg2poly(
numpy.polynomial.legadd(
numpy.polynomial.legder(
numpy.polynomial.legdiv(
numpy.polynomial.legendre
numpy.polynomial.legfit(
numpy.polynomial.legfromroots(
numpy.polynomial.legint(
numpy.polynomial.legline(
numpy.polynomial.legmul(
numpy.polynomial.legmulx(
numpy.polynomial.legpow(
numpy.polynomial.legroots(
numpy.polynomial.legsub(
numpy.polynomial.legval(
numpy.polynomial.legvander(
numpy.polynomial.mapdomain(
numpy.polynomial.poly2cheb(
numpy.polynomial.poly2leg(
numpy.polynomial.polyadd(
numpy.polynomial.polyder(
numpy.polynomial.polydiv(
numpy.polynomial.polyfit(
numpy.polynomial.polyfromroots(
numpy.polynomial.polyint(
numpy.polynomial.polyline(
numpy.polynomial.polymul(
numpy.polynomial.polymulx(
numpy.polynomial.polynomial
numpy.polynomial.polypow(
numpy.polynomial.polyroots(
numpy.polynomial.polysub(
numpy.polynomial.polytemplate
numpy.polynomial.polyutils
numpy.polynomial.polyval(
numpy.polynomial.polyvander(
numpy.polynomial.test(
numpy.polynomial.trimcoef(
numpy.polynomial.trimseq(
numpy.polynomial.warnings

--- from numpy import polynomial ---
polynomial.Chebyshev(
polynomial.Hermite(
polynomial.HermiteE(
polynomial.Laguerre(
polynomial.Legendre(
polynomial.Polynomial(
polynomial.Tester(
polynomial.__path__
polynomial.as_series(
polynomial.bench(
polynomial.cheb2poly(
polynomial.chebadd(
polynomial.chebder(
polynomial.chebdiv(
polynomial.chebfit(
polynomial.chebfromroots(
polynomial.chebint(
polynomial.chebline(
polynomial.chebmul(
polynomial.chebmulx(
polynomial.chebpow(
polynomial.chebpts1(
polynomial.chebpts2(
polynomial.chebroots(
polynomial.chebsub(
polynomial.chebval(
polynomial.chebvander(
polynomial.chebyshev
polynomial.deprecate(
polynomial.getdomain(
polynomial.hermite
polynomial.hermite_e
polynomial.laguerre
polynomial.leg2poly(
polynomial.legadd(
polynomial.legder(
polynomial.legdiv(
polynomial.legendre
polynomial.legfit(
polynomial.legfromroots(
polynomial.legint(
polynomial.legline(
polynomial.legmul(
polynomial.legmulx(
polynomial.legpow(
polynomial.legroots(
polynomial.legsub(
polynomial.legval(
polynomial.legvander(
polynomial.mapdomain(
polynomial.poly2cheb(
polynomial.poly2leg(
polynomial.polyfromroots(
polynomial.polyline(
polynomial.polymulx(
polynomial.polynomial
polynomial.polypow(
polynomial.polyroots(
polynomial.polytemplate
polynomial.polyutils
polynomial.polyvander(
polynomial.test(
polynomial.trimcoef(
polynomial.trimseq(

--- from numpy.polynomial import * ---
Chebyshev(
Hermite(
HermiteE(
Laguerre(
Legendre(
Polynomial(
as_series(
cheb2poly(
chebadd(
chebder(
chebdiv(
chebfit(
chebfromroots(
chebint(
chebline(
chebmul(
chebmulx(
chebpow(
chebpts1(
chebpts2(
chebroots(
chebsub(
chebval(
chebvander(
chebyshev
getdomain(
hermite
hermite_e
laguerre
leg2poly(
legadd(
legder(
legdiv(
legendre
legfit(
legfromroots(
legint(
legline(
legmul(
legmulx(
legpow(
legroots(
legsub(
legval(
legvander(
mapdomain(
poly2cheb(
poly2leg(
polyfromroots(
polyline(
polymulx(
polypow(
polyroots(
polytemplate
polyutils
polyvander(
trimcoef(
trimseq(

--- import numpy.polynomial.chebyshev ---
numpy.polynomial.chebyshev.Chebyshev(
numpy.polynomial.chebyshev.__all__
numpy.polynomial.chebyshev.__builtins__
numpy.polynomial.chebyshev.__doc__
numpy.polynomial.chebyshev.__file__
numpy.polynomial.chebyshev.__name__
numpy.polynomial.chebyshev.__package__
numpy.polynomial.chebyshev._cseries_to_zseries(
numpy.polynomial.chebyshev._zseries_der(
numpy.polynomial.chebyshev._zseries_div(
numpy.polynomial.chebyshev._zseries_int(
numpy.polynomial.chebyshev._zseries_mul(
numpy.polynomial.chebyshev._zseries_to_cseries(
numpy.polynomial.chebyshev.cheb2poly(
numpy.polynomial.chebyshev.chebadd(
numpy.polynomial.chebyshev.chebder(
numpy.polynomial.chebyshev.chebdiv(
numpy.polynomial.chebyshev.chebdomain
numpy.polynomial.chebyshev.chebfit(
numpy.polynomial.chebyshev.chebfromroots(
numpy.polynomial.chebyshev.chebint(
numpy.polynomial.chebyshev.chebline(
numpy.polynomial.chebyshev.chebmul(
numpy.polynomial.chebyshev.chebmulx(
numpy.polynomial.chebyshev.chebone
numpy.polynomial.chebyshev.chebpow(
numpy.polynomial.chebyshev.chebpts1(
numpy.polynomial.chebyshev.chebpts2(
numpy.polynomial.chebyshev.chebroots(
numpy.polynomial.chebyshev.chebsub(
numpy.polynomial.chebyshev.chebtrim(
numpy.polynomial.chebyshev.chebval(
numpy.polynomial.chebyshev.chebvander(
numpy.polynomial.chebyshev.chebx
numpy.polynomial.chebyshev.chebzero
numpy.polynomial.chebyshev.division
numpy.polynomial.chebyshev.la
numpy.polynomial.chebyshev.np
numpy.polynomial.chebyshev.poly2cheb(
numpy.polynomial.chebyshev.polytemplate
numpy.polynomial.chebyshev.pu
numpy.polynomial.chebyshev.warnings

--- from numpy.polynomial import chebyshev ---
chebyshev.Chebyshev(
chebyshev.__all__
chebyshev.__builtins__
chebyshev.__doc__
chebyshev.__file__
chebyshev.__name__
chebyshev.__package__
chebyshev._cseries_to_zseries(
chebyshev._zseries_der(
chebyshev._zseries_div(
chebyshev._zseries_int(
chebyshev._zseries_mul(
chebyshev._zseries_to_cseries(
chebyshev.cheb2poly(
chebyshev.chebadd(
chebyshev.chebder(
chebyshev.chebdiv(
chebyshev.chebdomain
chebyshev.chebfit(
chebyshev.chebfromroots(
chebyshev.chebint(
chebyshev.chebline(
chebyshev.chebmul(
chebyshev.chebmulx(
chebyshev.chebone
chebyshev.chebpow(
chebyshev.chebpts1(
chebyshev.chebpts2(
chebyshev.chebroots(
chebyshev.chebsub(
chebyshev.chebtrim(
chebyshev.chebval(
chebyshev.chebvander(
chebyshev.chebx
chebyshev.chebzero
chebyshev.division
chebyshev.la
chebyshev.np
chebyshev.poly2cheb(
chebyshev.polytemplate
chebyshev.pu
chebyshev.warnings

--- from numpy.polynomial.chebyshev import * ---
_cseries_to_zseries(
_zseries_der(
_zseries_div(
_zseries_int(
_zseries_mul(
_zseries_to_cseries(
chebdomain
chebone
chebtrim(
chebx
chebzero
la
pu

--- import numpy.polynomial.hermite ---
numpy.polynomial.hermite.Hermite(
numpy.polynomial.hermite.__all__
numpy.polynomial.hermite.__builtins__
numpy.polynomial.hermite.__doc__
numpy.polynomial.hermite.__file__
numpy.polynomial.hermite.__name__
numpy.polynomial.hermite.__package__
numpy.polynomial.hermite.division
numpy.polynomial.hermite.herm2poly(
numpy.polynomial.hermite.hermadd(
numpy.polynomial.hermite.hermder(
numpy.polynomial.hermite.hermdiv(
numpy.polynomial.hermite.hermdomain
numpy.polynomial.hermite.hermfit(
numpy.polynomial.hermite.hermfromroots(
numpy.polynomial.hermite.hermint(
numpy.polynomial.hermite.hermline(
numpy.polynomial.hermite.hermmul(
numpy.polynomial.hermite.hermmulx(
numpy.polynomial.hermite.hermone
numpy.polynomial.hermite.hermpow(
numpy.polynomial.hermite.hermroots(
numpy.polynomial.hermite.hermsub(
numpy.polynomial.hermite.hermtrim(
numpy.polynomial.hermite.hermval(
numpy.polynomial.hermite.hermvander(
numpy.polynomial.hermite.hermx
numpy.polynomial.hermite.hermzero
numpy.polynomial.hermite.la
numpy.polynomial.hermite.np
numpy.polynomial.hermite.poly2herm(
numpy.polynomial.hermite.polytemplate
numpy.polynomial.hermite.pu
numpy.polynomial.hermite.warnings

--- from numpy.polynomial import hermite ---
hermite.Hermite(
hermite.__all__
hermite.__builtins__
hermite.__doc__
hermite.__file__
hermite.__name__
hermite.__package__
hermite.division
hermite.herm2poly(
hermite.hermadd(
hermite.hermder(
hermite.hermdiv(
hermite.hermdomain
hermite.hermfit(
hermite.hermfromroots(
hermite.hermint(
hermite.hermline(
hermite.hermmul(
hermite.hermmulx(
hermite.hermone
hermite.hermpow(
hermite.hermroots(
hermite.hermsub(
hermite.hermtrim(
hermite.hermval(
hermite.hermvander(
hermite.hermx
hermite.hermzero
hermite.la
hermite.np
hermite.poly2herm(
hermite.polytemplate
hermite.pu
hermite.warnings

--- from numpy.polynomial.hermite import * ---
herm2poly(
hermadd(
hermder(
hermdiv(
hermdomain
hermfit(
hermfromroots(
hermint(
hermline(
hermmul(
hermmulx(
hermone
hermpow(
hermroots(
hermsub(
hermtrim(
hermval(
hermvander(
hermx
hermzero
poly2herm(

--- import numpy.polynomial.hermite_e ---
numpy.polynomial.hermite_e.HermiteE(
numpy.polynomial.hermite_e.__all__
numpy.polynomial.hermite_e.__builtins__
numpy.polynomial.hermite_e.__doc__
numpy.polynomial.hermite_e.__file__
numpy.polynomial.hermite_e.__name__
numpy.polynomial.hermite_e.__package__
numpy.polynomial.hermite_e.division
numpy.polynomial.hermite_e.herme2poly(
numpy.polynomial.hermite_e.hermeadd(
numpy.polynomial.hermite_e.hermeder(
numpy.polynomial.hermite_e.hermediv(
numpy.polynomial.hermite_e.hermedomain
numpy.polynomial.hermite_e.hermefit(
numpy.polynomial.hermite_e.hermefromroots(
numpy.polynomial.hermite_e.hermeint(
numpy.polynomial.hermite_e.hermeline(
numpy.polynomial.hermite_e.hermemul(
numpy.polynomial.hermite_e.hermemulx(
numpy.polynomial.hermite_e.hermeone
numpy.polynomial.hermite_e.hermepow(
numpy.polynomial.hermite_e.hermeroots(
numpy.polynomial.hermite_e.hermesub(
numpy.polynomial.hermite_e.hermetrim(
numpy.polynomial.hermite_e.hermeval(
numpy.polynomial.hermite_e.hermevander(
numpy.polynomial.hermite_e.hermex
numpy.polynomial.hermite_e.hermezero
numpy.polynomial.hermite_e.la
numpy.polynomial.hermite_e.np
numpy.polynomial.hermite_e.poly2herme(
numpy.polynomial.hermite_e.polytemplate
numpy.polynomial.hermite_e.pu
numpy.polynomial.hermite_e.warnings

--- from numpy.polynomial import hermite_e ---
hermite_e.HermiteE(
hermite_e.__all__
hermite_e.__builtins__
hermite_e.__doc__
hermite_e.__file__
hermite_e.__name__
hermite_e.__package__
hermite_e.division
hermite_e.herme2poly(
hermite_e.hermeadd(
hermite_e.hermeder(
hermite_e.hermediv(
hermite_e.hermedomain
hermite_e.hermefit(
hermite_e.hermefromroots(
hermite_e.hermeint(
hermite_e.hermeline(
hermite_e.hermemul(
hermite_e.hermemulx(
hermite_e.hermeone
hermite_e.hermepow(
hermite_e.hermeroots(
hermite_e.hermesub(
hermite_e.hermetrim(
hermite_e.hermeval(
hermite_e.hermevander(
hermite_e.hermex
hermite_e.hermezero
hermite_e.la
hermite_e.np
hermite_e.poly2herme(
hermite_e.polytemplate
hermite_e.pu
hermite_e.warnings

--- from numpy.polynomial.hermite_e import * ---
herme2poly(
hermeadd(
hermeder(
hermediv(
hermedomain
hermefit(
hermefromroots(
hermeint(
hermeline(
hermemul(
hermemulx(
hermeone
hermepow(
hermeroots(
hermesub(
hermetrim(
hermeval(
hermevander(
hermex
hermezero
poly2herme(

--- import numpy.polynomial.laguerre ---
numpy.polynomial.laguerre.Laguerre(
numpy.polynomial.laguerre.__all__
numpy.polynomial.laguerre.__builtins__
numpy.polynomial.laguerre.__doc__
numpy.polynomial.laguerre.__file__
numpy.polynomial.laguerre.__name__
numpy.polynomial.laguerre.__package__
numpy.polynomial.laguerre.division
numpy.polynomial.laguerre.la
numpy.polynomial.laguerre.lag2poly(
numpy.polynomial.laguerre.lagadd(
numpy.polynomial.laguerre.lagder(
numpy.polynomial.laguerre.lagdiv(
numpy.polynomial.laguerre.lagdomain
numpy.polynomial.laguerre.lagfit(
numpy.polynomial.laguerre.lagfromroots(
numpy.polynomial.laguerre.lagint(
numpy.polynomial.laguerre.lagline(
numpy.polynomial.laguerre.lagmul(
numpy.polynomial.laguerre.lagmulx(
numpy.polynomial.laguerre.lagone
numpy.polynomial.laguerre.lagpow(
numpy.polynomial.laguerre.lagroots(
numpy.polynomial.laguerre.lagsub(
numpy.polynomial.laguerre.lagtrim(
numpy.polynomial.laguerre.lagval(
numpy.polynomial.laguerre.lagvander(
numpy.polynomial.laguerre.lagx
numpy.polynomial.laguerre.lagzero
numpy.polynomial.laguerre.np
numpy.polynomial.laguerre.poly2lag(
numpy.polynomial.laguerre.polytemplate
numpy.polynomial.laguerre.pu
numpy.polynomial.laguerre.warnings

--- from numpy.polynomial import laguerre ---
laguerre.Laguerre(
laguerre.__all__
laguerre.__builtins__
laguerre.__doc__
laguerre.__file__
laguerre.__name__
laguerre.__package__
laguerre.division
laguerre.la
laguerre.lag2poly(
laguerre.lagadd(
laguerre.lagder(
laguerre.lagdiv(
laguerre.lagdomain
laguerre.lagfit(
laguerre.lagfromroots(
laguerre.lagint(
laguerre.lagline(
laguerre.lagmul(
laguerre.lagmulx(
laguerre.lagone
laguerre.lagpow(
laguerre.lagroots(
laguerre.lagsub(
laguerre.lagtrim(
laguerre.lagval(
laguerre.lagvander(
laguerre.lagx
laguerre.lagzero
laguerre.np
laguerre.poly2lag(
laguerre.polytemplate
laguerre.pu
laguerre.warnings

--- from numpy.polynomial.laguerre import * ---
lag2poly(
lagadd(
lagder(
lagdiv(
lagdomain
lagfit(
lagfromroots(
lagint(
lagline(
lagmul(
lagmulx(
lagone
lagpow(
lagroots(
lagsub(
lagtrim(
lagval(
lagvander(
lagx
lagzero
poly2lag(

--- import numpy.polynomial.legendre ---
numpy.polynomial.legendre.Legendre(
numpy.polynomial.legendre.__all__
numpy.polynomial.legendre.__builtins__
numpy.polynomial.legendre.__doc__
numpy.polynomial.legendre.__file__
numpy.polynomial.legendre.__name__
numpy.polynomial.legendre.__package__
numpy.polynomial.legendre.division
numpy.polynomial.legendre.la
numpy.polynomial.legendre.leg2poly(
numpy.polynomial.legendre.legadd(
numpy.polynomial.legendre.legder(
numpy.polynomial.legendre.legdiv(
numpy.polynomial.legendre.legdomain
numpy.polynomial.legendre.legfit(
numpy.polynomial.legendre.legfromroots(
numpy.polynomial.legendre.legint(
numpy.polynomial.legendre.legline(
numpy.polynomial.legendre.legmul(
numpy.polynomial.legendre.legmulx(
numpy.polynomial.legendre.legone
numpy.polynomial.legendre.legpow(
numpy.polynomial.legendre.legroots(
numpy.polynomial.legendre.legsub(
numpy.polynomial.legendre.legtrim(
numpy.polynomial.legendre.legval(
numpy.polynomial.legendre.legvander(
numpy.polynomial.legendre.legx
numpy.polynomial.legendre.legzero
numpy.polynomial.legendre.np
numpy.polynomial.legendre.poly2leg(
numpy.polynomial.legendre.polytemplate
numpy.polynomial.legendre.pu
numpy.polynomial.legendre.warnings

--- from numpy.polynomial import legendre ---
legendre.Legendre(
legendre.__all__
legendre.__builtins__
legendre.__doc__
legendre.__file__
legendre.__name__
legendre.__package__
legendre.division
legendre.la
legendre.leg2poly(
legendre.legadd(
legendre.legder(
legendre.legdiv(
legendre.legdomain
legendre.legfit(
legendre.legfromroots(
legendre.legint(
legendre.legline(
legendre.legmul(
legendre.legmulx(
legendre.legone
legendre.legpow(
legendre.legroots(
legendre.legsub(
legendre.legtrim(
legendre.legval(
legendre.legvander(
legendre.legx
legendre.legzero
legendre.np
legendre.poly2leg(
legendre.polytemplate
legendre.pu
legendre.warnings

--- from numpy.polynomial.legendre import * ---
legdomain
legone
legtrim(
legx
legzero

--- import numpy.polynomial.polynomial ---
numpy.polynomial.polynomial.Polynomial(
numpy.polynomial.polynomial.__all__
numpy.polynomial.polynomial.__builtins__
numpy.polynomial.polynomial.__doc__
numpy.polynomial.polynomial.__file__
numpy.polynomial.polynomial.__name__
numpy.polynomial.polynomial.__package__
numpy.polynomial.polynomial.division
numpy.polynomial.polynomial.la
numpy.polynomial.polynomial.np
numpy.polynomial.polynomial.polyadd(
numpy.polynomial.polynomial.polyder(
numpy.polynomial.polynomial.polydiv(
numpy.polynomial.polynomial.polydomain
numpy.polynomial.polynomial.polyfit(
numpy.polynomial.polynomial.polyfromroots(
numpy.polynomial.polynomial.polyint(
numpy.polynomial.polynomial.polyline(
numpy.polynomial.polynomial.polymul(
numpy.polynomial.polynomial.polymulx(
numpy.polynomial.polynomial.polyone
numpy.polynomial.polynomial.polypow(
numpy.polynomial.polynomial.polyroots(
numpy.polynomial.polynomial.polysub(
numpy.polynomial.polynomial.polytemplate
numpy.polynomial.polynomial.polytrim(
numpy.polynomial.polynomial.polyval(
numpy.polynomial.polynomial.polyvander(
numpy.polynomial.polynomial.polyx
numpy.polynomial.polynomial.polyzero
numpy.polynomial.polynomial.pu
numpy.polynomial.polynomial.warnings

--- from numpy.polynomial import polynomial ---
polynomial.division
polynomial.la
polynomial.np
polynomial.polydomain
polynomial.polyone
polynomial.polytrim(
polynomial.polyx
polynomial.polyzero
polynomial.pu

--- from numpy.polynomial.polynomial import * ---
polydomain
polyone
polytrim(
polyx
polyzero

--- import numpy.polynomial.polytemplate ---
numpy.polynomial.polytemplate.__builtins__
numpy.polynomial.polytemplate.__doc__
numpy.polynomial.polytemplate.__file__
numpy.polynomial.polytemplate.__name__
numpy.polynomial.polytemplate.__package__
numpy.polynomial.polytemplate.polytemplate
numpy.polynomial.polytemplate.rel_import
numpy.polynomial.polytemplate.string
numpy.polynomial.polytemplate.sys

--- from numpy.polynomial import polytemplate ---
polytemplate.__builtins__
polytemplate.__doc__
polytemplate.__file__
polytemplate.__name__
polytemplate.__package__
polytemplate.polytemplate
polytemplate.rel_import
polytemplate.string
polytemplate.sys

--- from numpy.polynomial.polytemplate import * ---
rel_import

--- import numpy.polynomial.polyutils ---
numpy.polynomial.polyutils.PolyBase(
numpy.polynomial.polyutils.PolyDomainError(
numpy.polynomial.polyutils.PolyError(
numpy.polynomial.polyutils.RankWarning(
numpy.polynomial.polyutils.__all__
numpy.polynomial.polyutils.__builtins__
numpy.polynomial.polyutils.__doc__
numpy.polynomial.polyutils.__file__
numpy.polynomial.polyutils.__name__
numpy.polynomial.polyutils.__package__
numpy.polynomial.polyutils.as_series(
numpy.polynomial.polyutils.division
numpy.polynomial.polyutils.getdomain(
numpy.polynomial.polyutils.mapdomain(
numpy.polynomial.polyutils.mapparms(
numpy.polynomial.polyutils.np
numpy.polynomial.polyutils.sys
numpy.polynomial.polyutils.trimcoef(
numpy.polynomial.polyutils.trimseq(
numpy.polynomial.polyutils.warnings

--- from numpy.polynomial import polyutils ---
polyutils.PolyBase(
polyutils.PolyDomainError(
polyutils.PolyError(
polyutils.RankWarning(
polyutils.__all__
polyutils.__builtins__
polyutils.__doc__
polyutils.__file__
polyutils.__name__
polyutils.__package__
polyutils.as_series(
polyutils.division
polyutils.getdomain(
polyutils.mapdomain(
polyutils.mapparms(
polyutils.np
polyutils.sys
polyutils.trimcoef(
polyutils.trimseq(
polyutils.warnings

--- from numpy.polynomial.polyutils import * ---
PolyBase(
PolyDomainError(
PolyError(
mapparms(

--- import numpy.random ---
numpy.random.RandomState(
numpy.random.Tester(
numpy.random.__RandomState_ctor(
numpy.random.__all__
numpy.random.__builtins__
numpy.random.__doc__
numpy.random.__file__
numpy.random.__name__
numpy.random.__package__
numpy.random.__path__
numpy.random.bench(
numpy.random.beta(
numpy.random.binomial(
numpy.random.bytes(
numpy.random.chisquare(
numpy.random.dirichlet(
numpy.random.exponential(
numpy.random.f(
numpy.random.gamma(
numpy.random.geometric(
numpy.random.get_state(
numpy.random.gumbel(
numpy.random.hypergeometric(
numpy.random.info
numpy.random.laplace(
numpy.random.logistic(
numpy.random.lognormal(
numpy.random.logseries(
numpy.random.mtrand
numpy.random.multinomial(
numpy.random.multivariate_normal(
numpy.random.negative_binomial(
numpy.random.noncentral_chisquare(
numpy.random.noncentral_f(
numpy.random.normal(
numpy.random.np
numpy.random.pareto(
numpy.random.permutation(
numpy.random.poisson(
numpy.random.power(
numpy.random.rand(
numpy.random.randint(
numpy.random.randn(
numpy.random.random(
numpy.random.random_integers(
numpy.random.random_sample(
numpy.random.ranf(
numpy.random.rayleigh(
numpy.random.sample(
numpy.random.seed(
numpy.random.set_state(
numpy.random.shuffle(
numpy.random.standard_cauchy(
numpy.random.standard_exponential(
numpy.random.standard_gamma(
numpy.random.standard_normal(
numpy.random.standard_t(
numpy.random.test(
numpy.random.triangular(
numpy.random.uniform(
numpy.random.vonmises(
numpy.random.wald(
numpy.random.weibull(
numpy.random.zipf(

--- from numpy import random ---
random.RandomState(
random.Tester(
random.__RandomState_ctor(
random.__all__
random.__builtins__
random.__doc__
random.__file__
random.__name__
random.__package__
random.__path__
random.bench(
random.beta(
random.binomial(
random.bytes(
random.chisquare(
random.dirichlet(
random.exponential(
random.f(
random.gamma(
random.geometric(
random.get_state(
random.gumbel(
random.hypergeometric(
random.info
random.laplace(
random.logistic(
random.lognormal(
random.logseries(
random.mtrand
random.multinomial(
random.multivariate_normal(
random.negative_binomial(
random.noncentral_chisquare(
random.noncentral_f(
random.normal(
random.np
random.pareto(
random.permutation(
random.poisson(
random.power(
random.rand(
random.randint(
random.randn(
random.random(
random.random_integers(
random.random_sample(
random.ranf(
random.rayleigh(
random.sample(
random.seed(
random.set_state(
random.shuffle(
random.standard_cauchy(
random.standard_exponential(
random.standard_gamma(
random.standard_normal(
random.standard_t(
random.test(
random.triangular(
random.uniform(
random.vonmises(
random.wald(
random.weibull(
random.zipf(

--- from numpy.random import * ---
RandomState(
__RandomState_ctor(
beta(
binomial(
chisquare(
dirichlet(
exponential(
f(
gamma(
geometric(
get_state(
gumbel(
hypergeometric(
laplace(
logistic(
lognormal(
logseries(
mtrand
multinomial(
multivariate_normal(
negative_binomial(
noncentral_chisquare(
noncentral_f(
normal(
pareto(
permutation(
poisson(
rand(
randint(
randn(
random(
random_integers(
random_sample(
ranf(
rayleigh(
sample(
seed(
set_state(
shuffle(
standard_cauchy(
standard_exponential(
standard_gamma(
standard_normal(
standard_t(
triangular(
uniform(
vonmises(
wald(
weibull(
zipf(

--- import numpy.random.info ---
numpy.random.info.__all__
numpy.random.info.__builtins__
numpy.random.info.__doc__
numpy.random.info.__file__
numpy.random.info.__name__
numpy.random.info.__package__
numpy.random.info.depends

--- from numpy.random import info ---
info.__all__

--- from numpy.random.info import * ---

--- import numpy.random.mtrand ---
numpy.random.mtrand.RandomState(
numpy.random.mtrand.__builtins__
numpy.random.mtrand.__doc__
numpy.random.mtrand.__file__
numpy.random.mtrand.__name__
numpy.random.mtrand.__package__
numpy.random.mtrand.__test__
numpy.random.mtrand._rand
numpy.random.mtrand.beta(
numpy.random.mtrand.binomial(
numpy.random.mtrand.bytes(
numpy.random.mtrand.chisquare(
numpy.random.mtrand.dirichlet(
numpy.random.mtrand.exponential(
numpy.random.mtrand.f(
numpy.random.mtrand.gamma(
numpy.random.mtrand.geometric(
numpy.random.mtrand.get_state(
numpy.random.mtrand.gumbel(
numpy.random.mtrand.hypergeometric(
numpy.random.mtrand.laplace(
numpy.random.mtrand.logistic(
numpy.random.mtrand.lognormal(
numpy.random.mtrand.logseries(
numpy.random.mtrand.multinomial(
numpy.random.mtrand.multivariate_normal(
numpy.random.mtrand.negative_binomial(
numpy.random.mtrand.noncentral_chisquare(
numpy.random.mtrand.noncentral_f(
numpy.random.mtrand.normal(
numpy.random.mtrand.np
numpy.random.mtrand.pareto(
numpy.random.mtrand.permutation(
numpy.random.mtrand.poisson(
numpy.random.mtrand.power(
numpy.random.mtrand.rand(
numpy.random.mtrand.randint(
numpy.random.mtrand.randn(
numpy.random.mtrand.random_integers(
numpy.random.mtrand.random_sample(
numpy.random.mtrand.rayleigh(
numpy.random.mtrand.seed(
numpy.random.mtrand.set_state(
numpy.random.mtrand.shuffle(
numpy.random.mtrand.standard_cauchy(
numpy.random.mtrand.standard_exponential(
numpy.random.mtrand.standard_gamma(
numpy.random.mtrand.standard_normal(
numpy.random.mtrand.standard_t(
numpy.random.mtrand.triangular(
numpy.random.mtrand.uniform(
numpy.random.mtrand.vonmises(
numpy.random.mtrand.wald(
numpy.random.mtrand.weibull(
numpy.random.mtrand.zipf(

--- from numpy.random import mtrand ---
mtrand.RandomState(
mtrand.__builtins__
mtrand.__doc__
mtrand.__file__
mtrand.__name__
mtrand.__package__
mtrand.__test__
mtrand._rand
mtrand.beta(
mtrand.binomial(
mtrand.bytes(
mtrand.chisquare(
mtrand.dirichlet(
mtrand.exponential(
mtrand.f(
mtrand.gamma(
mtrand.geometric(
mtrand.get_state(
mtrand.gumbel(
mtrand.hypergeometric(
mtrand.laplace(
mtrand.logistic(
mtrand.lognormal(
mtrand.logseries(
mtrand.multinomial(
mtrand.multivariate_normal(
mtrand.negative_binomial(
mtrand.noncentral_chisquare(
mtrand.noncentral_f(
mtrand.normal(
mtrand.np
mtrand.pareto(
mtrand.permutation(
mtrand.poisson(
mtrand.power(
mtrand.rand(
mtrand.randint(
mtrand.randn(
mtrand.random_integers(
mtrand.random_sample(
mtrand.rayleigh(
mtrand.seed(
mtrand.set_state(
mtrand.shuffle(
mtrand.standard_cauchy(
mtrand.standard_exponential(
mtrand.standard_gamma(
mtrand.standard_normal(
mtrand.standard_t(
mtrand.triangular(
mtrand.uniform(
mtrand.vonmises(
mtrand.wald(
mtrand.weibull(
mtrand.zipf(

--- from numpy.random.mtrand import * ---
__test__
_rand

--- import numpy.testing ---
numpy.testing.IgnoreException(
numpy.testing.TestCase(
numpy.testing.Tester(
numpy.testing.__builtins__
numpy.testing.__doc__
numpy.testing.__file__
numpy.testing.__name__
numpy.testing.__package__
numpy.testing.__path__
numpy.testing.assert_(
numpy.testing.assert_allclose(
numpy.testing.assert_almost_equal(
numpy.testing.assert_approx_equal(
numpy.testing.assert_array_almost_equal(
numpy.testing.assert_array_almost_equal_nulp(
numpy.testing.assert_array_equal(
numpy.testing.assert_array_less(
numpy.testing.assert_array_max_ulp(
numpy.testing.assert_equal(
numpy.testing.assert_raises(
numpy.testing.assert_string_equal(
numpy.testing.assert_warns(
numpy.testing.build_err_msg(
numpy.testing.dec
numpy.testing.decorate_methods(
numpy.testing.decorators
numpy.testing.importall(
numpy.testing.jiffies(
numpy.testing.measure(
numpy.testing.memusage(
numpy.testing.nosetester
numpy.testing.numpytest
numpy.testing.print_assert_equal(
numpy.testing.raises(
numpy.testing.rand(
numpy.testing.run_module_suite(
numpy.testing.rundocs(
numpy.testing.runstring(
numpy.testing.test(
numpy.testing.utils
numpy.testing.verbose

--- from numpy import testing ---
testing.IgnoreException(
testing.TestCase(
testing.Tester(
testing.__builtins__
testing.__doc__
testing.__file__
testing.__name__
testing.__package__
testing.__path__
testing.assert_(
testing.assert_allclose(
testing.assert_almost_equal(
testing.assert_approx_equal(
testing.assert_array_almost_equal(
testing.assert_array_almost_equal_nulp(
testing.assert_array_equal(
testing.assert_array_less(
testing.assert_array_max_ulp(
testing.assert_equal(
testing.assert_raises(
testing.assert_string_equal(
testing.assert_warns(
testing.build_err_msg(
testing.dec
testing.decorate_methods(
testing.decorators
testing.importall(
testing.jiffies(
testing.measure(
testing.memusage(
testing.nosetester
testing.numpytest
testing.print_assert_equal(
testing.raises(
testing.rand(
testing.run_module_suite(
testing.rundocs(
testing.runstring(
testing.test(
testing.utils
testing.verbose

--- from numpy.testing import * ---
IgnoreException(
TestCase(
assert_(
assert_allclose(
assert_almost_equal(
assert_approx_equal(
assert_array_almost_equal(
assert_array_almost_equal_nulp(
assert_array_equal(
assert_array_less(
assert_array_max_ulp(
assert_equal(
assert_raises(
assert_string_equal(
assert_warns(
build_err_msg(
dec
decorate_methods(
decorators
importall(
jiffies(
measure(
memusage(
nosetester
numpytest
print_assert_equal(
raises(
run_module_suite(
rundocs(
runstring(

--- import numpy.testing.decorators ---
numpy.testing.decorators.WarningManager(
numpy.testing.decorators.WarningMessage(
numpy.testing.decorators.__builtins__
numpy.testing.decorators.__doc__
numpy.testing.decorators.__file__
numpy.testing.decorators.__name__
numpy.testing.decorators.__package__
numpy.testing.decorators.deprecated(
numpy.testing.decorators.knownfailureif(
numpy.testing.decorators.setastest(
numpy.testing.decorators.skipif(
numpy.testing.decorators.slow(
numpy.testing.decorators.sys
numpy.testing.decorators.warnings

--- from numpy.testing import decorators ---
decorators.WarningManager(
decorators.WarningMessage(
decorators.__builtins__
decorators.__doc__
decorators.__file__
decorators.__name__
decorators.__package__
decorators.deprecated(
decorators.knownfailureif(
decorators.setastest(
decorators.skipif(
decorators.slow(
decorators.sys
decorators.warnings

--- from numpy.testing.decorators import * ---
WarningManager(
WarningMessage(
deprecated(
knownfailureif(
setastest(
skipif(
slow(

--- import numpy.testing.nosetester ---
numpy.testing.nosetester.NoseTester(
numpy.testing.nosetester.__builtins__
numpy.testing.nosetester.__doc__
numpy.testing.nosetester.__file__
numpy.testing.nosetester.__name__
numpy.testing.nosetester.__package__
numpy.testing.nosetester._docmethod(
numpy.testing.nosetester.check_implicit_np(
numpy.testing.nosetester.check_random_directive(
numpy.testing.nosetester.check_whitespace_enabled(
numpy.testing.nosetester.get_package_name(
numpy.testing.nosetester.import_nose(
numpy.testing.nosetester.os
numpy.testing.nosetester.run_module_suite(
numpy.testing.nosetester.sys

--- from numpy.testing import nosetester ---
nosetester.NoseTester(
nosetester.__builtins__
nosetester.__doc__
nosetester.__file__
nosetester.__name__
nosetester.__package__
nosetester._docmethod(
nosetester.check_implicit_np(
nosetester.check_random_directive(
nosetester.check_whitespace_enabled(
nosetester.get_package_name(
nosetester.import_nose(
nosetester.os
nosetester.run_module_suite(
nosetester.sys

--- from numpy.testing.nosetester import * ---
NoseTester(
_docmethod(
check_implicit_np(
check_random_directive(
check_whitespace_enabled(
get_package_name(
import_nose(

--- import numpy.testing.numpytest ---
numpy.testing.numpytest.DEBUG
numpy.testing.numpytest.IgnoreException(
numpy.testing.numpytest.__all__
numpy.testing.numpytest.__builtins__
numpy.testing.numpytest.__doc__
numpy.testing.numpytest.__file__
numpy.testing.numpytest.__name__
numpy.testing.numpytest.__package__
numpy.testing.numpytest.get_frame(
numpy.testing.numpytest.importall(
numpy.testing.numpytest.os
numpy.testing.numpytest.output_exception(
numpy.testing.numpytest.sys
numpy.testing.numpytest.traceback

--- from numpy.testing import numpytest ---
numpytest.DEBUG
numpytest.IgnoreException(
numpytest.__all__
numpytest.__builtins__
numpytest.__doc__
numpytest.__file__
numpytest.__name__
numpytest.__package__
numpytest.get_frame(
numpytest.importall(
numpytest.os
numpytest.output_exception(
numpytest.sys
numpytest.traceback

--- from numpy.testing.numpytest import * ---
DEBUG
get_frame(
output_exception(

--- import numpy.testing.utils ---
numpy.testing.utils.WarningManager(
numpy.testing.utils.WarningMessage(
numpy.testing.utils.__all__
numpy.testing.utils.__builtins__
numpy.testing.utils.__doc__
numpy.testing.utils.__file__
numpy.testing.utils.__name__
numpy.testing.utils.__package__
numpy.testing.utils._assert_valid_refcount(
numpy.testing.utils._integer_repr(
numpy.testing.utils.assert_(
numpy.testing.utils.assert_allclose(
numpy.testing.utils.assert_almost_equal(
numpy.testing.utils.assert_approx_equal(
numpy.testing.utils.assert_array_almost_equal(
numpy.testing.utils.assert_array_almost_equal_nulp(
numpy.testing.utils.assert_array_compare(
numpy.testing.utils.assert_array_equal(
numpy.testing.utils.assert_array_less(
numpy.testing.utils.assert_array_max_ulp(
numpy.testing.utils.assert_equal(
numpy.testing.utils.assert_raises(
numpy.testing.utils.assert_string_equal(
numpy.testing.utils.assert_warns(
numpy.testing.utils.build_err_msg(
numpy.testing.utils.decorate_methods(
numpy.testing.utils.gisfinite(
numpy.testing.utils.gisinf(
numpy.testing.utils.gisnan(
numpy.testing.utils.import_nose(
numpy.testing.utils.integer_repr(
numpy.testing.utils.jiffies(
numpy.testing.utils.measure(
numpy.testing.utils.memusage(
numpy.testing.utils.nulp_diff(
numpy.testing.utils.operator
numpy.testing.utils.os
numpy.testing.utils.print_assert_equal(
numpy.testing.utils.raises(
numpy.testing.utils.rand(
numpy.testing.utils.re
numpy.testing.utils.rundocs(
numpy.testing.utils.runstring(
numpy.testing.utils.sys
numpy.testing.utils.types
numpy.testing.utils.verbose
numpy.testing.utils.warnings

--- from numpy.testing import utils ---
utils.WarningManager(
utils.WarningMessage(
utils._assert_valid_refcount(
utils._integer_repr(
utils.assert_(
utils.assert_allclose(
utils.assert_almost_equal(
utils.assert_approx_equal(
utils.assert_array_almost_equal(
utils.assert_array_almost_equal_nulp(
utils.assert_array_compare(
utils.assert_array_equal(
utils.assert_array_less(
utils.assert_array_max_ulp(
utils.assert_equal(
utils.assert_raises(
utils.assert_string_equal(
utils.assert_warns(
utils.build_err_msg(
utils.decorate_methods(
utils.gisfinite(
utils.gisinf(
utils.gisnan(
utils.import_nose(
utils.integer_repr(
utils.jiffies(
utils.measure(
utils.memusage(
utils.nulp_diff(
utils.operator
utils.print_assert_equal(
utils.raises(
utils.rand(
utils.rundocs(
utils.runstring(
utils.verbose
utils.warnings

--- from numpy.testing.utils import * ---
_assert_valid_refcount(
_integer_repr(
assert_array_compare(
gisfinite(
gisinf(
gisnan(
integer_repr(
nulp_diff(
operator

--- import numpy.version ---
numpy.version.__builtins__
numpy.version.__doc__
numpy.version.__file__
numpy.version.__name__
numpy.version.__package__
numpy.version.full_version
numpy.version.git_revision
numpy.version.release
numpy.version.short_version
numpy.version.version

--- from numpy import version ---
version.__builtins__
version.__doc__
version.__file__
version.__name__
version.__package__
version.full_version
version.git_revision
version.release
version.short_version
version.version

--- from numpy.version import * ---
full_version
git_revision
release
short_version
